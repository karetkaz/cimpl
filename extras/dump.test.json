{
"version": "2"
, "symbols": [{
	"": "typename"
	, "kind": "typename"
	, "cast": "ref"
	, "name": "typename"
	, "type": "typename"
	, "size": 136
	, "offs": 8
	, "static": true
	, "const": true
}, {
	"": "typename.size"
	, "kind": "variable"
	, "cast": "inline"
	, "name": "size"
	, "owner": "typename"
	, "type": "int32"
	, "size": 4
	, "offs": 24
	, "static": false
	, "const": true
}, {
	"": "typename.offset"
	, "kind": "variable"
	, "cast": "inline"
	, "name": "offset"
	, "owner": "typename"
	, "type": "int32"
	, "size": 4
	, "offs": 32
	, "static": false
	, "const": true
}, {
	"": "typename.base(type: typename): typename"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "base"
	, "owner": "typename"
	, "type": "function"
	, "args": [{
		"": ".result"
		, "kind": "inline"
		, "cast": "inline"
		, "name": ".result"
		, "type": "typename"
		, "size": 4
		, "offs": 0
		, "static": false
		, "const": false
	}, {
		"": "type"
		, "kind": "variable"
		, "cast": "ref"
		, "name": "type"
		, "type": "typename"
		, "size": 4
		, "offs": 4
		, "static": false
		, "const": false
	}]
	, "size": 0
	, "offs": 21928
	, "static": true
	, "const": true
	, "ast": {
		"": "nfc(1)"
		, "kind": "emit"
		, "type": "typename"
		, "value": "nfc(1)"
	}
}, {
	"": "typename.file(type: typename): .cstr"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "file"
	, "owner": "typename"
	, "type": "function"
	, "args": [{
		"": ".result"
		, "kind": "inline"
		, "cast": "inline"
		, "name": ".result"
		, "type": ".cstr"
		, "size": 4
		, "offs": 0
		, "static": false
		, "const": false
	}, {
		"": "type"
		, "kind": "variable"
		, "cast": "ref"
		, "name": "type"
		, "type": "typename"
		, "size": 4
		, "offs": 4
		, "static": false
		, "const": false
	}]
	, "size": 0
	, "offs": 22392
	, "static": true
	, "const": true
	, "ast": {
		"": "nfc(2)"
		, "kind": "emit"
		, "type": "typename"
		, "value": "nfc(2)"
	}
}, {
	"": "typename.line(type: typename): int32"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "line"
	, "owner": "typename"
	, "type": "function"
	, "args": [{
		"": ".result"
		, "kind": "inline"
		, "cast": "inline"
		, "name": ".result"
		, "type": "int32"
		, "size": 4
		, "offs": 0
		, "static": false
		, "const": false
	}, {
		"": "type"
		, "kind": "variable"
		, "cast": "ref"
		, "name": "type"
		, "type": "typename"
		, "size": 4
		, "offs": 4
		, "static": false
		, "const": false
	}]
	, "size": 0
	, "offs": 22856
	, "static": true
	, "const": true
	, "ast": {
		"": "nfc(3)"
		, "kind": "emit"
		, "type": "int32"
		, "value": "nfc(3)"
	}
}, {
	"": "typename.name(type: typename): .cstr"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "name"
	, "owner": "typename"
	, "type": "function"
	, "args": [{
		"": ".result"
		, "kind": "inline"
		, "cast": "inline"
		, "name": ".result"
		, "type": ".cstr"
		, "size": 4
		, "offs": 0
		, "static": false
		, "const": false
	}, {
		"": "type"
		, "kind": "variable"
		, "cast": "ref"
		, "name": "type"
		, "type": "typename"
		, "size": 4
		, "offs": 4
		, "static": false
		, "const": false
	}]
	, "size": 0
	, "offs": 23320
	, "static": true
	, "const": true
	, "ast": {
		"": "nfc(4)"
		, "kind": "emit"
		, "type": "typename"
		, "value": "nfc(4)"
	}
}, {
	"": "void"
	, "kind": "typename"
	, "cast": "void"
	, "name": "void"
	, "type": "typename"
	, "size": 0
	, "offs": 160
	, "static": true
	, "const": true
}, {
	"": "bool"
	, "kind": "typename"
	, "cast": "bool"
	, "name": "bool"
	, "type": "typename"
	, "size": 1
	, "offs": 304
	, "static": true
	, "const": true
	, "ast": {
		"": "0"
		, "kind": ".literal"
		, "type": "int64"
		, "value": "0"
	}
}, {
	"": "char"
	, "kind": "typename"
	, "cast": "u32"
	, "name": "char"
	, "type": "typename"
	, "size": 1
	, "offs": 448
	, "static": true
	, "const": true
	, "ast": {
		"": "0"
		, "kind": ".literal"
		, "type": "int64"
		, "value": "0"
	}
}, {
	"": "int8"
	, "kind": "typename"
	, "cast": "i32"
	, "name": "int8"
	, "type": "typename"
	, "size": 1
	, "offs": 592
	, "static": true
	, "const": true
	, "ast": {
		"": "0"
		, "kind": ".literal"
		, "type": "int64"
		, "value": "0"
	}
}, {
	"": "int16"
	, "kind": "typename"
	, "cast": "i32"
	, "name": "int16"
	, "type": "typename"
	, "size": 2
	, "offs": 736
	, "static": true
	, "const": true
	, "ast": {
		"": "0"
		, "kind": ".literal"
		, "type": "int64"
		, "value": "0"
	}
}, {
	"": "int32"
	, "kind": "typename"
	, "cast": "i32"
	, "name": "int32"
	, "type": "typename"
	, "size": 4
	, "offs": 880
	, "static": true
	, "const": true
	, "ast": {
		"": "0"
		, "kind": ".literal"
		, "type": "int64"
		, "value": "0"
	}
}, {
	"": "int64"
	, "kind": "typename"
	, "cast": "i64"
	, "name": "int64"
	, "type": "typename"
	, "size": 8
	, "offs": 1024
	, "static": true
	, "const": true
	, "ast": {
		"": "0"
		, "kind": ".literal"
		, "type": "int64"
		, "value": "0"
	}
}, {
	"": "uint8"
	, "kind": "typename"
	, "cast": "u32"
	, "name": "uint8"
	, "type": "typename"
	, "size": 1
	, "offs": 1168
	, "static": true
	, "const": true
	, "ast": {
		"": "0"
		, "kind": ".literal"
		, "type": "int64"
		, "value": "0"
	}
}, {
	"": "uint16"
	, "kind": "typename"
	, "cast": "u32"
	, "name": "uint16"
	, "type": "typename"
	, "size": 2
	, "offs": 1312
	, "static": true
	, "const": true
	, "ast": {
		"": "0"
		, "kind": ".literal"
		, "type": "int64"
		, "value": "0"
	}
}, {
	"": "uint32"
	, "kind": "typename"
	, "cast": "u32"
	, "name": "uint32"
	, "type": "typename"
	, "size": 4
	, "offs": 1456
	, "static": true
	, "const": true
	, "ast": {
		"": "0"
		, "kind": ".literal"
		, "type": "int64"
		, "value": "0"
	}
}, {
	"": "uint32.zxt(value: int32, offs: int32, count: int32): int32"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "zxt"
	, "owner": "uint32"
	, "type": "function"
	, "args": [{
		"": ".result"
		, "kind": "inline"
		, "cast": "inline"
		, "name": ".result"
		, "type": "int32"
		, "size": 4
		, "offs": 0
		, "static": false
		, "const": false
	}, {
		"": "value"
		, "kind": "variable"
		, "cast": "i32"
		, "name": "value"
		, "type": "int32"
		, "size": 4
		, "offs": 4
		, "static": false
		, "const": false
	}, {
		"": "offs"
		, "kind": "variable"
		, "cast": "i32"
		, "name": "offs"
		, "type": "int32"
		, "size": 4
		, "offs": 8
		, "static": false
		, "const": false
	}, {
		"": "count"
		, "kind": "variable"
		, "cast": "i32"
		, "name": "count"
		, "type": "int32"
		, "size": 4
		, "offs": 12
		, "static": false
		, "const": false
	}]
	, "size": 0
	, "offs": 32848
	, "static": true
	, "const": true
	, "ast": {
		"": "nfc(17)"
		, "kind": "emit"
		, "type": "int32"
		, "value": "nfc(17)"
	}
}, {
	"": "uint32.sxt(value: int32, offs: int32, count: int32): int32"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "sxt"
	, "owner": "uint32"
	, "type": "function"
	, "args": [{
		"": ".result"
		, "kind": "inline"
		, "cast": "inline"
		, "name": ".result"
		, "type": "int32"
		, "size": 4
		, "offs": 0
		, "static": false
		, "const": false
	}, {
		"": "value"
		, "kind": "variable"
		, "cast": "i32"
		, "name": "value"
		, "type": "int32"
		, "size": 4
		, "offs": 4
		, "static": false
		, "const": false
	}, {
		"": "offs"
		, "kind": "variable"
		, "cast": "i32"
		, "name": "offs"
		, "type": "int32"
		, "size": 4
		, "offs": 8
		, "static": false
		, "const": false
	}, {
		"": "count"
		, "kind": "variable"
		, "cast": "i32"
		, "name": "count"
		, "type": "int32"
		, "size": 4
		, "offs": 12
		, "static": false
		, "const": false
	}]
	, "size": 0
	, "offs": 33584
	, "static": true
	, "const": true
	, "ast": {
		"": "nfc(18)"
		, "kind": "emit"
		, "type": "int32"
		, "value": "nfc(18)"
	}
}, {
	"": "uint64"
	, "kind": "typename"
	, "cast": "u64"
	, "name": "uint64"
	, "type": "typename"
	, "size": 8
	, "offs": 1600
	, "static": true
	, "const": true
	, "ast": {
		"": "0"
		, "kind": ".literal"
		, "type": "int64"
		, "value": "0"
	}
}, {
	"": "uint64.zxt(value: int64, offs: int32, count: int32): int64"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "zxt"
	, "owner": "uint64"
	, "type": "function"
	, "args": [{
		"": ".result"
		, "kind": "inline"
		, "cast": "inline"
		, "name": ".result"
		, "type": "int64"
		, "size": 8
		, "offs": 8
		, "static": false
		, "const": false
	}, {
		"": "value"
		, "kind": "variable"
		, "cast": "i64"
		, "name": "value"
		, "type": "int64"
		, "size": 8
		, "offs": 8
		, "static": false
		, "const": false
	}, {
		"": "offs"
		, "kind": "variable"
		, "cast": "i32"
		, "name": "offs"
		, "type": "int32"
		, "size": 4
		, "offs": 12
		, "static": false
		, "const": false
	}, {
		"": "count"
		, "kind": "variable"
		, "cast": "i32"
		, "name": "count"
		, "type": "int32"
		, "size": 4
		, "offs": 16
		, "static": false
		, "const": false
	}]
	, "size": 0
	, "offs": 34312
	, "static": true
	, "const": true
	, "ast": {
		"": "nfc(19)"
		, "kind": "emit"
		, "type": "int64"
		, "value": "nfc(19)"
	}
}, {
	"": "uint64.sxt(value: int64, offs: int32, count: int32): int64"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "sxt"
	, "owner": "uint64"
	, "type": "function"
	, "args": [{
		"": ".result"
		, "kind": "inline"
		, "cast": "inline"
		, "name": ".result"
		, "type": "int64"
		, "size": 8
		, "offs": 8
		, "static": false
		, "const": false
	}, {
		"": "value"
		, "kind": "variable"
		, "cast": "i64"
		, "name": "value"
		, "type": "int64"
		, "size": 8
		, "offs": 8
		, "static": false
		, "const": false
	}, {
		"": "offs"
		, "kind": "variable"
		, "cast": "i32"
		, "name": "offs"
		, "type": "int32"
		, "size": 4
		, "offs": 12
		, "static": false
		, "const": false
	}, {
		"": "count"
		, "kind": "variable"
		, "cast": "i32"
		, "name": "count"
		, "type": "int32"
		, "size": 4
		, "offs": 16
		, "static": false
		, "const": false
	}]
	, "size": 0
	, "offs": 35040
	, "static": true
	, "const": true
	, "ast": {
		"": "nfc(20)"
		, "kind": "emit"
		, "type": "int64"
		, "value": "nfc(20)"
	}
}, {
	"": "float32"
	, "kind": "typename"
	, "cast": "f32"
	, "name": "float32"
	, "type": "typename"
	, "size": 4
	, "offs": 1744
	, "static": true
	, "const": true
	, "ast": {
		"": "0"
		, "kind": ".literal"
		, "type": "int64"
		, "value": "0"
	}
}, {
	"": "float32.sin(x: float32): float32"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "sin"
	, "owner": "float32"
	, "type": "function"
	, "args": [{
		"": ".result"
		, "kind": "inline"
		, "cast": "inline"
		, "name": ".result"
		, "type": "float32"
		, "size": 4
		, "offs": 0
		, "static": false
		, "const": false
	}, {
		"": "x"
		, "kind": "variable"
		, "cast": "f32"
		, "name": "x"
		, "type": "float32"
		, "size": 4
		, "offs": 4
		, "static": false
		, "const": false
	}]
	, "size": 0
	, "offs": 35512
	, "static": true
	, "const": true
	, "ast": {
		"": "nfc(21)"
		, "kind": "emit"
		, "type": "float32"
		, "value": "nfc(21)"
	}
}, {
	"": "float32.cos(x: float32): float32"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "cos"
	, "owner": "float32"
	, "type": "function"
	, "args": [{
		"": ".result"
		, "kind": "inline"
		, "cast": "inline"
		, "name": ".result"
		, "type": "float32"
		, "size": 4
		, "offs": 0
		, "static": false
		, "const": false
	}, {
		"": "x"
		, "kind": "variable"
		, "cast": "f32"
		, "name": "x"
		, "type": "float32"
		, "size": 4
		, "offs": 4
		, "static": false
		, "const": false
	}]
	, "size": 0
	, "offs": 35976
	, "static": true
	, "const": true
	, "ast": {
		"": "nfc(22)"
		, "kind": "emit"
		, "type": "float32"
		, "value": "nfc(22)"
	}
}, {
	"": "float32.tan(x: float32): float32"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "tan"
	, "owner": "float32"
	, "type": "function"
	, "args": [{
		"": ".result"
		, "kind": "inline"
		, "cast": "inline"
		, "name": ".result"
		, "type": "float32"
		, "size": 4
		, "offs": 0
		, "static": false
		, "const": false
	}, {
		"": "x"
		, "kind": "variable"
		, "cast": "f32"
		, "name": "x"
		, "type": "float32"
		, "size": 4
		, "offs": 4
		, "static": false
		, "const": false
	}]
	, "size": 0
	, "offs": 36440
	, "static": true
	, "const": true
	, "ast": {
		"": "nfc(23)"
		, "kind": "emit"
		, "type": "float32"
		, "value": "nfc(23)"
	}
}, {
	"": "float32.log(x: float32): float32"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "log"
	, "owner": "float32"
	, "type": "function"
	, "args": [{
		"": ".result"
		, "kind": "inline"
		, "cast": "inline"
		, "name": ".result"
		, "type": "float32"
		, "size": 4
		, "offs": 0
		, "static": false
		, "const": false
	}, {
		"": "x"
		, "kind": "variable"
		, "cast": "f32"
		, "name": "x"
		, "type": "float32"
		, "size": 4
		, "offs": 4
		, "static": false
		, "const": false
	}]
	, "size": 0
	, "offs": 36904
	, "static": true
	, "const": true
	, "ast": {
		"": "nfc(24)"
		, "kind": "emit"
		, "type": "float32"
		, "value": "nfc(24)"
	}
}, {
	"": "float32.exp(x: float32): float32"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "exp"
	, "owner": "float32"
	, "type": "function"
	, "args": [{
		"": ".result"
		, "kind": "inline"
		, "cast": "inline"
		, "name": ".result"
		, "type": "float32"
		, "size": 4
		, "offs": 0
		, "static": false
		, "const": false
	}, {
		"": "x"
		, "kind": "variable"
		, "cast": "f32"
		, "name": "x"
		, "type": "float32"
		, "size": 4
		, "offs": 4
		, "static": false
		, "const": false
	}]
	, "size": 0
	, "offs": 37368
	, "static": true
	, "const": true
	, "ast": {
		"": "nfc(25)"
		, "kind": "emit"
		, "type": "float32"
		, "value": "nfc(25)"
	}
}, {
	"": "float32.pow(x: float32, y: float32): float32"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "pow"
	, "owner": "float32"
	, "type": "function"
	, "args": [{
		"": ".result"
		, "kind": "inline"
		, "cast": "inline"
		, "name": ".result"
		, "type": "float32"
		, "size": 4
		, "offs": 0
		, "static": false
		, "const": false
	}, {
		"": "x"
		, "kind": "variable"
		, "cast": "f32"
		, "name": "x"
		, "type": "float32"
		, "size": 4
		, "offs": 4
		, "static": false
		, "const": false
	}, {
		"": "y"
		, "kind": "variable"
		, "cast": "f32"
		, "name": "y"
		, "type": "float32"
		, "size": 4
		, "offs": 8
		, "static": false
		, "const": false
	}]
	, "size": 0
	, "offs": 37976
	, "static": true
	, "const": true
	, "ast": {
		"": "nfc(26)"
		, "kind": "emit"
		, "type": "float32"
		, "value": "nfc(26)"
	}
}, {
	"": "float32.sqrt(x: float32): float32"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "sqrt"
	, "owner": "float32"
	, "type": "function"
	, "args": [{
		"": ".result"
		, "kind": "inline"
		, "cast": "inline"
		, "name": ".result"
		, "type": "float32"
		, "size": 4
		, "offs": 0
		, "static": false
		, "const": false
	}, {
		"": "x"
		, "kind": "variable"
		, "cast": "f32"
		, "name": "x"
		, "type": "float32"
		, "size": 4
		, "offs": 4
		, "static": false
		, "const": false
	}]
	, "size": 0
	, "offs": 38440
	, "static": true
	, "const": true
	, "ast": {
		"": "nfc(27)"
		, "kind": "emit"
		, "type": "float32"
		, "value": "nfc(27)"
	}
}, {
	"": "float32.atan2(x: float32, y: float32): float32"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "atan2"
	, "owner": "float32"
	, "type": "function"
	, "args": [{
		"": ".result"
		, "kind": "inline"
		, "cast": "inline"
		, "name": ".result"
		, "type": "float32"
		, "size": 4
		, "offs": 0
		, "static": false
		, "const": false
	}, {
		"": "x"
		, "kind": "variable"
		, "cast": "f32"
		, "name": "x"
		, "type": "float32"
		, "size": 4
		, "offs": 4
		, "static": false
		, "const": false
	}, {
		"": "y"
		, "kind": "variable"
		, "cast": "f32"
		, "name": "y"
		, "type": "float32"
		, "size": 4
		, "offs": 8
		, "static": false
		, "const": false
	}]
	, "size": 0
	, "offs": 39040
	, "static": true
	, "const": true
	, "ast": {
		"": "nfc(28)"
		, "kind": "emit"
		, "type": "float32"
		, "value": "nfc(28)"
	}
}, {
	"": "float64"
	, "kind": "typename"
	, "cast": "f64"
	, "name": "float64"
	, "type": "typename"
	, "size": 8
	, "offs": 1888
	, "static": true
	, "const": true
	, "ast": {
		"": "0"
		, "kind": ".literal"
		, "type": "int64"
		, "value": "0"
	}
}, {
	"": "float64.sin(x: float64): float64"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "sin"
	, "owner": "float64"
	, "type": "function"
	, "args": [{
		"": ".result"
		, "kind": "inline"
		, "cast": "inline"
		, "name": ".result"
		, "type": "float64"
		, "size": 8
		, "offs": 0
		, "static": false
		, "const": false
	}, {
		"": "x"
		, "kind": "variable"
		, "cast": "f64"
		, "name": "x"
		, "type": "float64"
		, "size": 8
		, "offs": 8
		, "static": false
		, "const": false
	}]
	, "size": 0
	, "offs": 39496
	, "static": true
	, "const": true
	, "ast": {
		"": "nfc(29)"
		, "kind": "emit"
		, "type": "float64"
		, "value": "nfc(29)"
	}
}, {
	"": "float64.cos(x: float64): float64"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "cos"
	, "owner": "float64"
	, "type": "function"
	, "args": [{
		"": ".result"
		, "kind": "inline"
		, "cast": "inline"
		, "name": ".result"
		, "type": "float64"
		, "size": 8
		, "offs": 0
		, "static": false
		, "const": false
	}, {
		"": "x"
		, "kind": "variable"
		, "cast": "f64"
		, "name": "x"
		, "type": "float64"
		, "size": 8
		, "offs": 8
		, "static": false
		, "const": false
	}]
	, "size": 0
	, "offs": 39952
	, "static": true
	, "const": true
	, "ast": {
		"": "nfc(30)"
		, "kind": "emit"
		, "type": "float64"
		, "value": "nfc(30)"
	}
}, {
	"": "float64.tan(x: float64): float64"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "tan"
	, "owner": "float64"
	, "type": "function"
	, "args": [{
		"": ".result"
		, "kind": "inline"
		, "cast": "inline"
		, "name": ".result"
		, "type": "float64"
		, "size": 8
		, "offs": 0
		, "static": false
		, "const": false
	}, {
		"": "x"
		, "kind": "variable"
		, "cast": "f64"
		, "name": "x"
		, "type": "float64"
		, "size": 8
		, "offs": 8
		, "static": false
		, "const": false
	}]
	, "size": 0
	, "offs": 40408
	, "static": true
	, "const": true
	, "ast": {
		"": "nfc(31)"
		, "kind": "emit"
		, "type": "float64"
		, "value": "nfc(31)"
	}
}, {
	"": "float64.log(x: float64): float64"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "log"
	, "owner": "float64"
	, "type": "function"
	, "args": [{
		"": ".result"
		, "kind": "inline"
		, "cast": "inline"
		, "name": ".result"
		, "type": "float64"
		, "size": 8
		, "offs": 0
		, "static": false
		, "const": false
	}, {
		"": "x"
		, "kind": "variable"
		, "cast": "f64"
		, "name": "x"
		, "type": "float64"
		, "size": 8
		, "offs": 8
		, "static": false
		, "const": false
	}]
	, "size": 0
	, "offs": 40864
	, "static": true
	, "const": true
	, "ast": {
		"": "nfc(32)"
		, "kind": "emit"
		, "type": "float64"
		, "value": "nfc(32)"
	}
}, {
	"": "float64.exp(x: float64): float64"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "exp"
	, "owner": "float64"
	, "type": "function"
	, "args": [{
		"": ".result"
		, "kind": "inline"
		, "cast": "inline"
		, "name": ".result"
		, "type": "float64"
		, "size": 8
		, "offs": 0
		, "static": false
		, "const": false
	}, {
		"": "x"
		, "kind": "variable"
		, "cast": "f64"
		, "name": "x"
		, "type": "float64"
		, "size": 8
		, "offs": 8
		, "static": false
		, "const": false
	}]
	, "size": 0
	, "offs": 41320
	, "static": true
	, "const": true
	, "ast": {
		"": "nfc(33)"
		, "kind": "emit"
		, "type": "float64"
		, "value": "nfc(33)"
	}
}, {
	"": "float64.pow(x: float64, y: float64): float64"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "pow"
	, "owner": "float64"
	, "type": "function"
	, "args": [{
		"": ".result"
		, "kind": "inline"
		, "cast": "inline"
		, "name": ".result"
		, "type": "float64"
		, "size": 8
		, "offs": 0
		, "static": false
		, "const": false
	}, {
		"": "x"
		, "kind": "variable"
		, "cast": "f64"
		, "name": "x"
		, "type": "float64"
		, "size": 8
		, "offs": 8
		, "static": false
		, "const": false
	}, {
		"": "y"
		, "kind": "variable"
		, "cast": "f64"
		, "name": "y"
		, "type": "float64"
		, "size": 8
		, "offs": 16
		, "static": false
		, "const": false
	}]
	, "size": 0
	, "offs": 41912
	, "static": true
	, "const": true
	, "ast": {
		"": "nfc(34)"
		, "kind": "emit"
		, "type": "float64"
		, "value": "nfc(34)"
	}
}, {
	"": "float64.sqrt(x: float64): float64"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "sqrt"
	, "owner": "float64"
	, "type": "function"
	, "args": [{
		"": ".result"
		, "kind": "inline"
		, "cast": "inline"
		, "name": ".result"
		, "type": "float64"
		, "size": 8
		, "offs": 0
		, "static": false
		, "const": false
	}, {
		"": "x"
		, "kind": "variable"
		, "cast": "f64"
		, "name": "x"
		, "type": "float64"
		, "size": 8
		, "offs": 8
		, "static": false
		, "const": false
	}]
	, "size": 0
	, "offs": 42368
	, "static": true
	, "const": true
	, "ast": {
		"": "nfc(35)"
		, "kind": "emit"
		, "type": "float64"
		, "value": "nfc(35)"
	}
}, {
	"": "float64.atan2(x: float64, y: float64): float64"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "atan2"
	, "owner": "float64"
	, "type": "function"
	, "args": [{
		"": ".result"
		, "kind": "inline"
		, "cast": "inline"
		, "name": ".result"
		, "type": "float64"
		, "size": 8
		, "offs": 0
		, "static": false
		, "const": false
	}, {
		"": "x"
		, "kind": "variable"
		, "cast": "f64"
		, "name": "x"
		, "type": "float64"
		, "size": 8
		, "offs": 8
		, "static": false
		, "const": false
	}, {
		"": "y"
		, "kind": "variable"
		, "cast": "f64"
		, "name": "y"
		, "type": "float64"
		, "size": 8
		, "offs": 16
		, "static": false
		, "const": false
	}]
	, "size": 0
	, "offs": 42960
	, "static": true
	, "const": true
	, "ast": {
		"": "nfc(36)"
		, "kind": "emit"
		, "type": "float64"
		, "value": "nfc(36)"
	}
}, {
	"": "pointer"
	, "kind": "typename"
	, "cast": "ref"
	, "name": "pointer"
	, "type": "typename"
	, "size": 4
	, "offs": 2032
	, "static": true
	, "const": true
}, {
	"": "pointer.alloc(ptr: pointer, size: int32): pointer"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "alloc"
	, "owner": "pointer"
	, "type": "function"
	, "args": [{
		"": ".result"
		, "kind": "inline"
		, "cast": "inline"
		, "name": ".result"
		, "type": "pointer"
		, "size": 4
		, "offs": 0
		, "static": false
		, "const": false
	}, {
		"": "ptr"
		, "kind": "variable"
		, "cast": "ref"
		, "name": "ptr"
		, "type": "pointer"
		, "size": 4
		, "offs": 4
		, "static": false
		, "const": false
	}, {
		"": "size"
		, "kind": "variable"
		, "cast": "i32"
		, "name": "size"
		, "type": "int32"
		, "size": 4
		, "offs": 8
		, "static": false
		, "const": false
	}]
	, "size": 0
	, "offs": 27736
	, "static": true
	, "const": true
	, "ast": {
		"": "nfc(7)"
		, "kind": "emit"
		, "type": "pointer"
		, "value": "nfc(7)"
	}
}, {
	"": "pointer.fill(dst: pointer, value: int32, size: int32): pointer"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "fill"
	, "owner": "pointer"
	, "type": "function"
	, "args": [{
		"": ".result"
		, "kind": "inline"
		, "cast": "inline"
		, "name": ".result"
		, "type": "pointer"
		, "size": 4
		, "offs": 0
		, "static": false
		, "const": false
	}, {
		"": "dst"
		, "kind": "variable"
		, "cast": "ref"
		, "name": "dst"
		, "type": "pointer"
		, "size": 4
		, "offs": 4
		, "static": false
		, "const": false
	}, {
		"": "value"
		, "kind": "variable"
		, "cast": "i32"
		, "name": "value"
		, "type": "int32"
		, "size": 4
		, "offs": 8
		, "static": false
		, "const": false
	}, {
		"": "size"
		, "kind": "variable"
		, "cast": "i32"
		, "name": "size"
		, "type": "int32"
		, "size": 4
		, "offs": 12
		, "static": false
		, "const": false
	}]
	, "size": 0
	, "offs": 28488
	, "static": true
	, "const": true
	, "ast": {
		"": "nfc(8)"
		, "kind": "emit"
		, "type": "pointer"
		, "value": "nfc(8)"
	}
}, {
	"": "pointer.copy(dst: pointer, src: pointer, size: int32): pointer"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "copy"
	, "owner": "pointer"
	, "type": "function"
	, "args": [{
		"": ".result"
		, "kind": "inline"
		, "cast": "inline"
		, "name": ".result"
		, "type": "pointer"
		, "size": 4
		, "offs": 0
		, "static": false
		, "const": false
	}, {
		"": "dst"
		, "kind": "variable"
		, "cast": "ref"
		, "name": "dst"
		, "type": "pointer"
		, "size": 4
		, "offs": 4
		, "static": false
		, "const": false
	}, {
		"": "src"
		, "kind": "variable"
		, "cast": "ref"
		, "name": "src"
		, "type": "pointer"
		, "size": 4
		, "offs": 8
		, "static": false
		, "const": false
	}, {
		"": "size"
		, "kind": "variable"
		, "cast": "i32"
		, "name": "size"
		, "type": "int32"
		, "size": 4
		, "offs": 12
		, "static": false
		, "const": false
	}]
	, "size": 0
	, "offs": 29232
	, "static": true
	, "const": true
	, "ast": {
		"": "nfc(9)"
		, "kind": "emit"
		, "type": "pointer"
		, "value": "nfc(9)"
	}
}, {
	"": "variant"
	, "kind": "typename"
	, "cast": "var"
	, "name": "variant"
	, "type": "typename"
	, "size": 8
	, "offs": 2176
	, "static": true
	, "const": true
}, {
	"": "function"
	, "kind": "typename"
	, "cast": "ref"
	, "name": "function"
	, "type": "typename"
	, "size": 8
	, "offs": 2320
	, "static": true
	, "const": true
}, {
	"": "object"
	, "kind": "typename"
	, "cast": "ref"
	, "name": "object"
	, "type": "typename"
	, "size": 4
	, "offs": 2472
	, "static": true
	, "const": true
}, {
	"": "null"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "null"
	, "type": "pointer"
	, "size": 0
	, "offs": 0
	, "static": true
	, "const": true
	, "ast": {
		"": "{pointer @0}"
		, "kind": ".literal"
		, "type": "pointer"
		, "value": "{pointer @0}"
	}
}, {
	"": "true"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "true"
	, "type": "bool"
	, "size": 0
	, "offs": 0
	, "static": true
	, "const": true
	, "ast": {
		"": "1"
		, "kind": ".literal"
		, "type": "bool"
		, "value": "1"
	}
}, {
	"": "false"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "false"
	, "type": "bool"
	, "size": 0
	, "offs": 0
	, "static": true
	, "const": true
	, "ast": {
		"": "0"
		, "kind": ".literal"
		, "type": "bool"
		, "value": "0"
	}
}, {
	"": "int"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "int"
	, "type": "typename"
	, "size": 0
	, "offs": 0
	, "static": true
	, "const": true
	, "ast": {
		"": "int32"
		, "kind": ".variable"
		, "type": "int32"
		, "value": "int32"
	}
}, {
	"": "byte"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "byte"
	, "type": "typename"
	, "size": 0
	, "offs": 0
	, "static": true
	, "const": true
	, "ast": {
		"": "uint8"
		, "kind": ".variable"
		, "type": "uint8"
		, "value": "uint8"
	}
}, {
	"": "float"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "float"
	, "type": "typename"
	, "size": 0
	, "offs": 0
	, "static": true
	, "const": true
	, "ast": {
		"": "float32"
		, "kind": ".variable"
		, "type": "float32"
		, "value": "float32"
	}
}, {
	"": "double"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "double"
	, "type": "typename"
	, "size": 0
	, "offs": 0
	, "static": true
	, "const": true
	, "ast": {
		"": "float64"
		, "kind": ".variable"
		, "type": "float64"
		, "value": "float64"
	}
}, {
	"": ".cstr"
	, "kind": "typename"
	, "cast": "arr"
	, "name": ".cstr"
	, "type": "char"
	, "size": 4
	, "offs": 3624
	, "static": true
	, "const": true
}, {
	"": "emit"
	, "kind": "typename"
	, "cast": "void"
	, "name": "emit"
	, "type": "function"
	, "size": 0
	, "offs": 3768
	, "static": true
	, "const": true
}, {
	"": "emit.nop"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "nop"
	, "owner": "emit"
	, "type": "void"
	, "size": 0
	, "offs": 0
	, "static": true
	, "const": true
	, "ast": {
		"": "nop"
		, "kind": "emit"
		, "type": "void"
		, "value": "nop"
	}
}, {
	"": "emit.not"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "not"
	, "owner": "emit"
	, "type": "bool"
	, "size": 0
	, "offs": 0
	, "static": true
	, "const": true
	, "ast": {
		"": "not.b32"
		, "kind": "emit"
		, "type": "bool"
		, "value": "not.b32"
	}
}, {
	"": "emit.set"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "set"
	, "owner": "emit"
	, "type": "void"
	, "size": 0
	, "offs": 0
	, "static": true
	, "const": true
	, "ast": {
		"": "set.x1 sp(1)"
		, "kind": "emit"
		, "type": "void"
		, "value": "set.x1 sp(1)"
	}
}, {
	"": "emit.join"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "join"
	, "owner": "emit"
	, "type": "void"
	, "size": 0
	, "offs": 0
	, "static": true
	, "const": true
	, "ast": {
		"": "sync 1"
		, "kind": "emit"
		, "type": "void"
		, "value": "sync 1"
	}
}, {
	"": "emit.ret"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "ret"
	, "owner": "emit"
	, "type": "void"
	, "size": 0
	, "offs": 0
	, "static": true
	, "const": true
	, "ast": {
		"": "ret"
		, "kind": "emit"
		, "type": "void"
		, "value": "ret"
	}
}, {
	"": "emit.call"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "call"
	, "owner": "emit"
	, "type": "void"
	, "size": 0
	, "offs": 0
	, "static": true
	, "const": true
	, "ast": {
		"": "call"
		, "kind": "emit"
		, "type": "void"
		, "value": "call"
	}
}, {
	"": "emit.p4x"
	, "kind": "typename"
	, "cast": "val"
	, "name": "p4x"
	, "owner": "emit"
	, "type": "typename"
	, "size": 16
	, "offs": 4776
	, "static": true
	, "const": true
}, {
	"": "emit.p4x.dp3"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "dp3"
	, "owner": "emit.p4x"
	, "type": "float32"
	, "size": 0
	, "offs": 0
	, "static": true
	, "const": true
	, "ast": {
		"": "dp3.v4f"
		, "kind": "emit"
		, "type": "float32"
		, "value": "dp3.v4f"
	}
}, {
	"": "emit.p4x.dp4"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "dp4"
	, "owner": "emit.p4x"
	, "type": "float32"
	, "size": 0
	, "offs": 0
	, "static": true
	, "const": true
	, "ast": {
		"": "dp4.v4f"
		, "kind": "emit"
		, "type": "float32"
		, "value": "dp4.v4f"
	}
}, {
	"": "emit.p4x.dph"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "dph"
	, "owner": "emit.p4x"
	, "type": "float32"
	, "size": 0
	, "offs": 0
	, "static": true
	, "const": true
	, "ast": {
		"": "dph.v4f"
		, "kind": "emit"
		, "type": "float32"
		, "value": "dph.v4f"
	}
}, {
	"": "emit.dup"
	, "kind": "typename"
	, "cast": "void"
	, "name": "dup"
	, "owner": "emit"
	, "type": "void"
	, "size": 0
	, "offs": 4920
	, "static": true
	, "const": true
}, {
	"": "emit.dup.x1"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "x1"
	, "owner": "emit.dup"
	, "type": "int32"
	, "size": 0
	, "offs": 0
	, "static": true
	, "const": true
	, "ast": {
		"": "dup.x1 sp(0)"
		, "kind": "emit"
		, "type": "int32"
		, "value": "dup.x1 sp(0)"
	}
}, {
	"": "emit.dup.x2"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "x2"
	, "owner": "emit.dup"
	, "type": "int64"
	, "size": 0
	, "offs": 0
	, "static": true
	, "const": true
	, "ast": {
		"": "dup.x2 sp(0)"
		, "kind": "emit"
		, "type": "int64"
		, "value": "dup.x2 sp(0)"
	}
}, {
	"": "emit.dup.x4"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "x4"
	, "owner": "emit.dup"
	, "type": "emit.p4x"
	, "size": 0
	, "offs": 0
	, "static": true
	, "const": true
	, "ast": {
		"": "dup.x4 sp(0)"
		, "kind": "emit"
		, "type": "emit.p4x"
		, "value": "dup.x4 sp(0)"
	}
}, {
	"": "emit.load"
	, "kind": "typename"
	, "cast": "void"
	, "name": "load"
	, "owner": "emit"
	, "type": "void"
	, "size": 0
	, "offs": 5496
	, "static": true
	, "const": true
}, {
	"": "emit.load.z32"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "z32"
	, "owner": "emit.load"
	, "type": "int32"
	, "size": 0
	, "offs": 0
	, "static": true
	, "const": true
	, "ast": {
		"": "load.z32"
		, "kind": "emit"
		, "type": "int32"
		, "value": "load.z32"
	}
}, {
	"": "emit.load.z64"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "z64"
	, "owner": "emit.load"
	, "type": "int64"
	, "size": 0
	, "offs": 0
	, "static": true
	, "const": true
	, "ast": {
		"": "load.z64"
		, "kind": "emit"
		, "type": "int64"
		, "value": "load.z64"
	}
}, {
	"": "emit.load.z128"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "z128"
	, "owner": "emit.load"
	, "type": "emit.p4x"
	, "size": 0
	, "offs": 0
	, "static": true
	, "const": true
	, "ast": {
		"": "load.z128"
		, "kind": "emit"
		, "type": "emit.p4x"
		, "value": "load.z128"
	}
}, {
	"": "emit.load.i8"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "i8"
	, "owner": "emit.load"
	, "type": "int32"
	, "size": 0
	, "offs": 0
	, "static": true
	, "const": true
	, "ast": {
		"": "load.m8"
		, "kind": "emit"
		, "type": "int32"
		, "value": "load.m8"
	}
}, {
	"": "emit.load.i16"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "i16"
	, "owner": "emit.load"
	, "type": "int32"
	, "size": 0
	, "offs": 0
	, "static": true
	, "const": true
	, "ast": {
		"": "load.m16"
		, "kind": "emit"
		, "type": "int32"
		, "value": "load.m16"
	}
}, {
	"": "emit.load.i32"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "i32"
	, "owner": "emit.load"
	, "type": "int32"
	, "size": 0
	, "offs": 0
	, "static": true
	, "const": true
	, "ast": {
		"": "load.m32"
		, "kind": "emit"
		, "type": "int32"
		, "value": "load.m32"
	}
}, {
	"": "emit.load.i64"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "i64"
	, "owner": "emit.load"
	, "type": "int64"
	, "size": 0
	, "offs": 0
	, "static": true
	, "const": true
	, "ast": {
		"": "load.m64"
		, "kind": "emit"
		, "type": "int64"
		, "value": "load.m64"
	}
}, {
	"": "emit.load.i128"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "i128"
	, "owner": "emit.load"
	, "type": "emit.p4x"
	, "size": 0
	, "offs": 0
	, "static": true
	, "const": true
	, "ast": {
		"": "load.m128"
		, "kind": "emit"
		, "type": "emit.p4x"
		, "value": "load.m128"
	}
}, {
	"": "emit.store"
	, "kind": "typename"
	, "cast": "void"
	, "name": "store"
	, "owner": "emit"
	, "type": "void"
	, "size": 0
	, "offs": 6792
	, "static": true
	, "const": true
}, {
	"": "emit.store.i8"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "i8"
	, "owner": "emit.store"
	, "type": "void"
	, "size": 0
	, "offs": 0
	, "static": true
	, "const": true
	, "ast": {
		"": "store.m8"
		, "kind": "emit"
		, "type": "void"
		, "value": "store.m8"
	}
}, {
	"": "emit.store.i16"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "i16"
	, "owner": "emit.store"
	, "type": "void"
	, "size": 0
	, "offs": 0
	, "static": true
	, "const": true
	, "ast": {
		"": "store.m16"
		, "kind": "emit"
		, "type": "void"
		, "value": "store.m16"
	}
}, {
	"": "emit.store.i32"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "i32"
	, "owner": "emit.store"
	, "type": "void"
	, "size": 0
	, "offs": 0
	, "static": true
	, "const": true
	, "ast": {
		"": "store.m32"
		, "kind": "emit"
		, "type": "void"
		, "value": "store.m32"
	}
}, {
	"": "emit.store.i64"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "i64"
	, "owner": "emit.store"
	, "type": "void"
	, "size": 0
	, "offs": 0
	, "static": true
	, "const": true
	, "ast": {
		"": "store.m64"
		, "kind": "emit"
		, "type": "void"
		, "value": "store.m64"
	}
}, {
	"": "emit.store.i128"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "i128"
	, "owner": "emit.store"
	, "type": "void"
	, "size": 0
	, "offs": 0
	, "static": true
	, "const": true
	, "ast": {
		"": "store.m128"
		, "kind": "emit"
		, "type": "void"
		, "value": "store.m128"
	}
}, {
	"": "emit.cmt"
	, "kind": "typename"
	, "cast": "void"
	, "name": "cmt"
	, "owner": "emit"
	, "type": "void"
	, "size": 0
	, "offs": 7616
	, "static": true
	, "const": true
}, {
	"": "emit.cmt.u32"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "u32"
	, "owner": "emit.cmt"
	, "type": "uint32"
	, "size": 0
	, "offs": 0
	, "static": true
	, "const": true
	, "ast": {
		"": "cmt.b32"
		, "kind": "emit"
		, "type": "uint32"
		, "value": "cmt.b32"
	}
}, {
	"": "emit.cmt.u64"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "u64"
	, "owner": "emit.cmt"
	, "type": "uint64"
	, "size": 0
	, "offs": 0
	, "static": true
	, "const": true
	, "ast": {
		"": "cmt.b64"
		, "kind": "emit"
		, "type": "uint64"
		, "value": "cmt.b64"
	}
}, {
	"": "emit.and"
	, "kind": "typename"
	, "cast": "void"
	, "name": "and"
	, "owner": "emit"
	, "type": "void"
	, "size": 0
	, "offs": 8048
	, "static": true
	, "const": true
}, {
	"": "emit.and.u32"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "u32"
	, "owner": "emit.and"
	, "type": "uint32"
	, "size": 0
	, "offs": 0
	, "static": true
	, "const": true
	, "ast": {
		"": "and.b32"
		, "kind": "emit"
		, "type": "uint32"
		, "value": "and.b32"
	}
}, {
	"": "emit.and.u64"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "u64"
	, "owner": "emit.and"
	, "type": "uint64"
	, "size": 0
	, "offs": 0
	, "static": true
	, "const": true
	, "ast": {
		"": "and.b64"
		, "kind": "emit"
		, "type": "uint64"
		, "value": "and.b64"
	}
}, {
	"": "emit.or"
	, "kind": "typename"
	, "cast": "void"
	, "name": "or"
	, "owner": "emit"
	, "type": "void"
	, "size": 0
	, "offs": 8464
	, "static": true
	, "const": true
}, {
	"": "emit.or.u32"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "u32"
	, "owner": "emit.or"
	, "type": "uint32"
	, "size": 0
	, "offs": 0
	, "static": true
	, "const": true
	, "ast": {
		"": "or.b32"
		, "kind": "emit"
		, "type": "uint32"
		, "value": "or.b32"
	}
}, {
	"": "emit.or.u64"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "u64"
	, "owner": "emit.or"
	, "type": "uint64"
	, "size": 0
	, "offs": 0
	, "static": true
	, "const": true
	, "ast": {
		"": "or.b64"
		, "kind": "emit"
		, "type": "uint64"
		, "value": "or.b64"
	}
}, {
	"": "emit.xor"
	, "kind": "typename"
	, "cast": "void"
	, "name": "xor"
	, "owner": "emit"
	, "type": "void"
	, "size": 0
	, "offs": 8880
	, "static": true
	, "const": true
}, {
	"": "emit.xor.u32"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "u32"
	, "owner": "emit.xor"
	, "type": "uint32"
	, "size": 0
	, "offs": 0
	, "static": true
	, "const": true
	, "ast": {
		"": "xor.b32"
		, "kind": "emit"
		, "type": "uint32"
		, "value": "xor.b32"
	}
}, {
	"": "emit.xor.u64"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "u64"
	, "owner": "emit.xor"
	, "type": "uint64"
	, "size": 0
	, "offs": 0
	, "static": true
	, "const": true
	, "ast": {
		"": "xor.b64"
		, "kind": "emit"
		, "type": "uint64"
		, "value": "xor.b64"
	}
}, {
	"": "emit.shl"
	, "kind": "typename"
	, "cast": "void"
	, "name": "shl"
	, "owner": "emit"
	, "type": "void"
	, "size": 0
	, "offs": 9296
	, "static": true
	, "const": true
}, {
	"": "emit.shl.u32"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "u32"
	, "owner": "emit.shl"
	, "type": "uint32"
	, "size": 0
	, "offs": 0
	, "static": true
	, "const": true
	, "ast": {
		"": "shl.b32"
		, "kind": "emit"
		, "type": "uint32"
		, "value": "shl.b32"
	}
}, {
	"": "emit.shl.u64"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "u64"
	, "owner": "emit.shl"
	, "type": "uint64"
	, "size": 0
	, "offs": 0
	, "static": true
	, "const": true
	, "ast": {
		"": "shl.b64"
		, "kind": "emit"
		, "type": "uint64"
		, "value": "shl.b64"
	}
}, {
	"": "emit.shr"
	, "kind": "typename"
	, "cast": "void"
	, "name": "shr"
	, "owner": "emit"
	, "type": "void"
	, "size": 0
	, "offs": 9712
	, "static": true
	, "const": true
}, {
	"": "emit.shr.i32"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "i32"
	, "owner": "emit.shr"
	, "type": "int32"
	, "size": 0
	, "offs": 0
	, "static": true
	, "const": true
	, "ast": {
		"": "sar.b32"
		, "kind": "emit"
		, "type": "int32"
		, "value": "sar.b32"
	}
}, {
	"": "emit.shr.i64"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "i64"
	, "owner": "emit.shr"
	, "type": "int64"
	, "size": 0
	, "offs": 0
	, "static": true
	, "const": true
	, "ast": {
		"": "sar.b64"
		, "kind": "emit"
		, "type": "int64"
		, "value": "sar.b64"
	}
}, {
	"": "emit.shr.u32"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "u32"
	, "owner": "emit.shr"
	, "type": "uint32"
	, "size": 0
	, "offs": 0
	, "static": true
	, "const": true
	, "ast": {
		"": "shr.b32"
		, "kind": "emit"
		, "type": "uint32"
		, "value": "shr.b32"
	}
}, {
	"": "emit.shr.u64"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "u64"
	, "owner": "emit.shr"
	, "type": "uint64"
	, "size": 0
	, "offs": 0
	, "static": true
	, "const": true
	, "ast": {
		"": "shr.b64"
		, "kind": "emit"
		, "type": "uint64"
		, "value": "shr.b64"
	}
}, {
	"": "emit.neg"
	, "kind": "typename"
	, "cast": "void"
	, "name": "neg"
	, "owner": "emit"
	, "type": "void"
	, "size": 0
	, "offs": 10400
	, "static": true
	, "const": true
}, {
	"": "emit.neg.i32"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "i32"
	, "owner": "emit.neg"
	, "type": "int32"
	, "size": 0
	, "offs": 0
	, "static": true
	, "const": true
	, "ast": {
		"": "neg.i32"
		, "kind": "emit"
		, "type": "int32"
		, "value": "neg.i32"
	}
}, {
	"": "emit.neg.i64"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "i64"
	, "owner": "emit.neg"
	, "type": "int64"
	, "size": 0
	, "offs": 0
	, "static": true
	, "const": true
	, "ast": {
		"": "neg.i64"
		, "kind": "emit"
		, "type": "int64"
		, "value": "neg.i64"
	}
}, {
	"": "emit.neg.f32"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "f32"
	, "owner": "emit.neg"
	, "type": "float32"
	, "size": 0
	, "offs": 0
	, "static": true
	, "const": true
	, "ast": {
		"": "neg.f32"
		, "kind": "emit"
		, "type": "float32"
		, "value": "neg.f32"
	}
}, {
	"": "emit.neg.f64"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "f64"
	, "owner": "emit.neg"
	, "type": "float64"
	, "size": 0
	, "offs": 0
	, "static": true
	, "const": true
	, "ast": {
		"": "neg.f64"
		, "kind": "emit"
		, "type": "float64"
		, "value": "neg.f64"
	}
}, {
	"": "emit.neg.p4f"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "p4f"
	, "owner": "emit.neg"
	, "type": "emit.p4x"
	, "size": 0
	, "offs": 0
	, "static": true
	, "const": true
	, "ast": {
		"": "neg.v4f"
		, "kind": "emit"
		, "type": "emit.p4x"
		, "value": "neg.v4f"
	}
}, {
	"": "emit.neg.p2d"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "p2d"
	, "owner": "emit.neg"
	, "type": "emit.p4x"
	, "size": 0
	, "offs": 0
	, "static": true
	, "const": true
	, "ast": {
		"": "neg.v2d"
		, "kind": "emit"
		, "type": "emit.p4x"
		, "value": "neg.v2d"
	}
}, {
	"": "emit.add"
	, "kind": "typename"
	, "cast": "void"
	, "name": "add"
	, "owner": "emit"
	, "type": "void"
	, "size": 0
	, "offs": 11392
	, "static": true
	, "const": true
}, {
	"": "emit.add.i32"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "i32"
	, "owner": "emit.add"
	, "type": "int32"
	, "size": 0
	, "offs": 0
	, "static": true
	, "const": true
	, "ast": {
		"": "add.i32"
		, "kind": "emit"
		, "type": "int32"
		, "value": "add.i32"
	}
}, {
	"": "emit.add.i64"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "i64"
	, "owner": "emit.add"
	, "type": "int64"
	, "size": 0
	, "offs": 0
	, "static": true
	, "const": true
	, "ast": {
		"": "add.i64"
		, "kind": "emit"
		, "type": "int64"
		, "value": "add.i64"
	}
}, {
	"": "emit.add.f32"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "f32"
	, "owner": "emit.add"
	, "type": "float32"
	, "size": 0
	, "offs": 0
	, "static": true
	, "const": true
	, "ast": {
		"": "add.f32"
		, "kind": "emit"
		, "type": "float32"
		, "value": "add.f32"
	}
}, {
	"": "emit.add.f64"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "f64"
	, "owner": "emit.add"
	, "type": "float64"
	, "size": 0
	, "offs": 0
	, "static": true
	, "const": true
	, "ast": {
		"": "add.f64"
		, "kind": "emit"
		, "type": "float64"
		, "value": "add.f64"
	}
}, {
	"": "emit.add.p4f"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "p4f"
	, "owner": "emit.add"
	, "type": "emit.p4x"
	, "size": 0
	, "offs": 0
	, "static": true
	, "const": true
	, "ast": {
		"": "add.v4f"
		, "kind": "emit"
		, "type": "emit.p4x"
		, "value": "add.v4f"
	}
}, {
	"": "emit.add.p2d"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "p2d"
	, "owner": "emit.add"
	, "type": "emit.p4x"
	, "size": 0
	, "offs": 0
	, "static": true
	, "const": true
	, "ast": {
		"": "add.v2d"
		, "kind": "emit"
		, "type": "emit.p4x"
		, "value": "add.v2d"
	}
}, {
	"": "emit.sub"
	, "kind": "typename"
	, "cast": "void"
	, "name": "sub"
	, "owner": "emit"
	, "type": "void"
	, "size": 0
	, "offs": 12352
	, "static": true
	, "const": true
}, {
	"": "emit.sub.i32"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "i32"
	, "owner": "emit.sub"
	, "type": "int32"
	, "size": 0
	, "offs": 0
	, "static": true
	, "const": true
	, "ast": {
		"": "sub.i32"
		, "kind": "emit"
		, "type": "int32"
		, "value": "sub.i32"
	}
}, {
	"": "emit.sub.i64"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "i64"
	, "owner": "emit.sub"
	, "type": "int64"
	, "size": 0
	, "offs": 0
	, "static": true
	, "const": true
	, "ast": {
		"": "sub.i64"
		, "kind": "emit"
		, "type": "int64"
		, "value": "sub.i64"
	}
}, {
	"": "emit.sub.f32"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "f32"
	, "owner": "emit.sub"
	, "type": "float32"
	, "size": 0
	, "offs": 0
	, "static": true
	, "const": true
	, "ast": {
		"": "sub.f32"
		, "kind": "emit"
		, "type": "float32"
		, "value": "sub.f32"
	}
}, {
	"": "emit.sub.f64"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "f64"
	, "owner": "emit.sub"
	, "type": "float64"
	, "size": 0
	, "offs": 0
	, "static": true
	, "const": true
	, "ast": {
		"": "sub.f64"
		, "kind": "emit"
		, "type": "float64"
		, "value": "sub.f64"
	}
}, {
	"": "emit.sub.p4f"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "p4f"
	, "owner": "emit.sub"
	, "type": "emit.p4x"
	, "size": 0
	, "offs": 0
	, "static": true
	, "const": true
	, "ast": {
		"": "sub.v4f"
		, "kind": "emit"
		, "type": "emit.p4x"
		, "value": "sub.v4f"
	}
}, {
	"": "emit.sub.p2d"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "p2d"
	, "owner": "emit.sub"
	, "type": "emit.p4x"
	, "size": 0
	, "offs": 0
	, "static": true
	, "const": true
	, "ast": {
		"": "sub.v2d"
		, "kind": "emit"
		, "type": "emit.p4x"
		, "value": "sub.v2d"
	}
}, {
	"": "emit.mul"
	, "kind": "typename"
	, "cast": "void"
	, "name": "mul"
	, "owner": "emit"
	, "type": "void"
	, "size": 0
	, "offs": 13312
	, "static": true
	, "const": true
}, {
	"": "emit.mul.i32"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "i32"
	, "owner": "emit.mul"
	, "type": "int32"
	, "size": 0
	, "offs": 0
	, "static": true
	, "const": true
	, "ast": {
		"": "mul.i32"
		, "kind": "emit"
		, "type": "int32"
		, "value": "mul.i32"
	}
}, {
	"": "emit.mul.i64"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "i64"
	, "owner": "emit.mul"
	, "type": "int64"
	, "size": 0
	, "offs": 0
	, "static": true
	, "const": true
	, "ast": {
		"": "mul.i64"
		, "kind": "emit"
		, "type": "int64"
		, "value": "mul.i64"
	}
}, {
	"": "emit.mul.u32"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "u32"
	, "owner": "emit.mul"
	, "type": "uint32"
	, "size": 0
	, "offs": 0
	, "static": true
	, "const": true
	, "ast": {
		"": "mul.u32"
		, "kind": "emit"
		, "type": "uint32"
		, "value": "mul.u32"
	}
}, {
	"": "emit.mul.u64"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "u64"
	, "owner": "emit.mul"
	, "type": "uint32"
	, "size": 0
	, "offs": 0
	, "static": true
	, "const": true
	, "ast": {
		"": "mul.u64"
		, "kind": "emit"
		, "type": "uint32"
		, "value": "mul.u64"
	}
}, {
	"": "emit.mul.f32"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "f32"
	, "owner": "emit.mul"
	, "type": "float32"
	, "size": 0
	, "offs": 0
	, "static": true
	, "const": true
	, "ast": {
		"": "mul.f32"
		, "kind": "emit"
		, "type": "float32"
		, "value": "mul.f32"
	}
}, {
	"": "emit.mul.f64"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "f64"
	, "owner": "emit.mul"
	, "type": "float64"
	, "size": 0
	, "offs": 0
	, "static": true
	, "const": true
	, "ast": {
		"": "mul.f64"
		, "kind": "emit"
		, "type": "float64"
		, "value": "mul.f64"
	}
}, {
	"": "emit.mul.p4f"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "p4f"
	, "owner": "emit.mul"
	, "type": "emit.p4x"
	, "size": 0
	, "offs": 0
	, "static": true
	, "const": true
	, "ast": {
		"": "mul.v4f"
		, "kind": "emit"
		, "type": "emit.p4x"
		, "value": "mul.v4f"
	}
}, {
	"": "emit.mul.p2d"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "p2d"
	, "owner": "emit.mul"
	, "type": "emit.p4x"
	, "size": 0
	, "offs": 0
	, "static": true
	, "const": true
	, "ast": {
		"": "mul.v2d"
		, "kind": "emit"
		, "type": "emit.p4x"
		, "value": "mul.v2d"
	}
}, {
	"": "emit.div"
	, "kind": "typename"
	, "cast": "void"
	, "name": "div"
	, "owner": "emit"
	, "type": "void"
	, "size": 0
	, "offs": 14544
	, "static": true
	, "const": true
}, {
	"": "emit.div.i32"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "i32"
	, "owner": "emit.div"
	, "type": "int32"
	, "size": 0
	, "offs": 0
	, "static": true
	, "const": true
	, "ast": {
		"": "div.i32"
		, "kind": "emit"
		, "type": "int32"
		, "value": "div.i32"
	}
}, {
	"": "emit.div.i64"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "i64"
	, "owner": "emit.div"
	, "type": "int64"
	, "size": 0
	, "offs": 0
	, "static": true
	, "const": true
	, "ast": {
		"": "div.i64"
		, "kind": "emit"
		, "type": "int64"
		, "value": "div.i64"
	}
}, {
	"": "emit.div.u32"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "u32"
	, "owner": "emit.div"
	, "type": "uint32"
	, "size": 0
	, "offs": 0
	, "static": true
	, "const": true
	, "ast": {
		"": "div.u32"
		, "kind": "emit"
		, "type": "uint32"
		, "value": "div.u32"
	}
}, {
	"": "emit.div.u64"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "u64"
	, "owner": "emit.div"
	, "type": "uint32"
	, "size": 0
	, "offs": 0
	, "static": true
	, "const": true
	, "ast": {
		"": "div.u64"
		, "kind": "emit"
		, "type": "uint32"
		, "value": "div.u64"
	}
}, {
	"": "emit.div.f32"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "f32"
	, "owner": "emit.div"
	, "type": "float32"
	, "size": 0
	, "offs": 0
	, "static": true
	, "const": true
	, "ast": {
		"": "div.f32"
		, "kind": "emit"
		, "type": "float32"
		, "value": "div.f32"
	}
}, {
	"": "emit.div.f64"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "f64"
	, "owner": "emit.div"
	, "type": "float64"
	, "size": 0
	, "offs": 0
	, "static": true
	, "const": true
	, "ast": {
		"": "div.f64"
		, "kind": "emit"
		, "type": "float64"
		, "value": "div.f64"
	}
}, {
	"": "emit.div.p4f"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "p4f"
	, "owner": "emit.div"
	, "type": "emit.p4x"
	, "size": 0
	, "offs": 0
	, "static": true
	, "const": true
	, "ast": {
		"": "div.v4f"
		, "kind": "emit"
		, "type": "emit.p4x"
		, "value": "div.v4f"
	}
}, {
	"": "emit.div.p2d"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "p2d"
	, "owner": "emit.div"
	, "type": "emit.p4x"
	, "size": 0
	, "offs": 0
	, "static": true
	, "const": true
	, "ast": {
		"": "div.v2d"
		, "kind": "emit"
		, "type": "emit.p4x"
		, "value": "div.v2d"
	}
}, {
	"": "emit.mod"
	, "kind": "typename"
	, "cast": "void"
	, "name": "mod"
	, "owner": "emit"
	, "type": "void"
	, "size": 0
	, "offs": 15776
	, "static": true
	, "const": true
}, {
	"": "emit.mod.i32"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "i32"
	, "owner": "emit.mod"
	, "type": "int32"
	, "size": 0
	, "offs": 0
	, "static": true
	, "const": true
	, "ast": {
		"": "mod.i32"
		, "kind": "emit"
		, "type": "int32"
		, "value": "mod.i32"
	}
}, {
	"": "emit.mod.i64"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "i64"
	, "owner": "emit.mod"
	, "type": "int64"
	, "size": 0
	, "offs": 0
	, "static": true
	, "const": true
	, "ast": {
		"": "mod.i64"
		, "kind": "emit"
		, "type": "int64"
		, "value": "mod.i64"
	}
}, {
	"": "emit.mod.u32"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "u32"
	, "owner": "emit.mod"
	, "type": "uint32"
	, "size": 0
	, "offs": 0
	, "static": true
	, "const": true
	, "ast": {
		"": "mod.u32"
		, "kind": "emit"
		, "type": "uint32"
		, "value": "mod.u32"
	}
}, {
	"": "emit.mod.u64"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "u64"
	, "owner": "emit.mod"
	, "type": "uint32"
	, "size": 0
	, "offs": 0
	, "static": true
	, "const": true
	, "ast": {
		"": "mod.u64"
		, "kind": "emit"
		, "type": "uint32"
		, "value": "mod.u64"
	}
}, {
	"": "emit.mod.f32"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "f32"
	, "owner": "emit.mod"
	, "type": "float32"
	, "size": 0
	, "offs": 0
	, "static": true
	, "const": true
	, "ast": {
		"": "mod.f32"
		, "kind": "emit"
		, "type": "float32"
		, "value": "mod.f32"
	}
}, {
	"": "emit.mod.f64"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "f64"
	, "owner": "emit.mod"
	, "type": "float64"
	, "size": 0
	, "offs": 0
	, "static": true
	, "const": true
	, "ast": {
		"": "mod.f64"
		, "kind": "emit"
		, "type": "float64"
		, "value": "mod.f64"
	}
}, {
	"": "emit.ceq"
	, "kind": "typename"
	, "cast": "void"
	, "name": "ceq"
	, "owner": "emit"
	, "type": "void"
	, "size": 0
	, "offs": 16736
	, "static": true
	, "const": true
}, {
	"": "emit.ceq.i32"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "i32"
	, "owner": "emit.ceq"
	, "type": "bool"
	, "size": 0
	, "offs": 0
	, "static": true
	, "const": true
	, "ast": {
		"": "ceq.i32"
		, "kind": "emit"
		, "type": "bool"
		, "value": "ceq.i32"
	}
}, {
	"": "emit.ceq.i64"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "i64"
	, "owner": "emit.ceq"
	, "type": "bool"
	, "size": 0
	, "offs": 0
	, "static": true
	, "const": true
	, "ast": {
		"": "ceq.i64"
		, "kind": "emit"
		, "type": "bool"
		, "value": "ceq.i64"
	}
}, {
	"": "emit.ceq.f32"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "f32"
	, "owner": "emit.ceq"
	, "type": "bool"
	, "size": 0
	, "offs": 0
	, "static": true
	, "const": true
	, "ast": {
		"": "ceq.f32"
		, "kind": "emit"
		, "type": "bool"
		, "value": "ceq.f32"
	}
}, {
	"": "emit.ceq.f64"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "f64"
	, "owner": "emit.ceq"
	, "type": "bool"
	, "size": 0
	, "offs": 0
	, "static": true
	, "const": true
	, "ast": {
		"": "ceq.f64"
		, "kind": "emit"
		, "type": "bool"
		, "value": "ceq.f64"
	}
}, {
	"": "emit.ceq.p4f"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "p4f"
	, "owner": "emit.ceq"
	, "type": "bool"
	, "size": 0
	, "offs": 0
	, "static": true
	, "const": true
	, "ast": {
		"": "ceq.v4f"
		, "kind": "emit"
		, "type": "bool"
		, "value": "ceq.v4f"
	}
}, {
	"": "emit.ceq.p2d"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "p2d"
	, "owner": "emit.ceq"
	, "type": "bool"
	, "size": 0
	, "offs": 0
	, "static": true
	, "const": true
	, "ast": {
		"": "ceq.v2d"
		, "kind": "emit"
		, "type": "bool"
		, "value": "ceq.v2d"
	}
}, {
	"": "emit.clt"
	, "kind": "typename"
	, "cast": "void"
	, "name": "clt"
	, "owner": "emit"
	, "type": "void"
	, "size": 0
	, "offs": 17696
	, "static": true
	, "const": true
}, {
	"": "emit.clt.i32"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "i32"
	, "owner": "emit.clt"
	, "type": "bool"
	, "size": 0
	, "offs": 0
	, "static": true
	, "const": true
	, "ast": {
		"": "clt.i32"
		, "kind": "emit"
		, "type": "bool"
		, "value": "clt.i32"
	}
}, {
	"": "emit.clt.i64"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "i64"
	, "owner": "emit.clt"
	, "type": "bool"
	, "size": 0
	, "offs": 0
	, "static": true
	, "const": true
	, "ast": {
		"": "clt.i64"
		, "kind": "emit"
		, "type": "bool"
		, "value": "clt.i64"
	}
}, {
	"": "emit.clt.u32"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "u32"
	, "owner": "emit.clt"
	, "type": "bool"
	, "size": 0
	, "offs": 0
	, "static": true
	, "const": true
	, "ast": {
		"": "clt.u32"
		, "kind": "emit"
		, "type": "bool"
		, "value": "clt.u32"
	}
}, {
	"": "emit.clt.u64"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "u64"
	, "owner": "emit.clt"
	, "type": "bool"
	, "size": 0
	, "offs": 0
	, "static": true
	, "const": true
	, "ast": {
		"": "clt.u64"
		, "kind": "emit"
		, "type": "bool"
		, "value": "clt.u64"
	}
}, {
	"": "emit.clt.f32"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "f32"
	, "owner": "emit.clt"
	, "type": "bool"
	, "size": 0
	, "offs": 0
	, "static": true
	, "const": true
	, "ast": {
		"": "clt.f32"
		, "kind": "emit"
		, "type": "bool"
		, "value": "clt.f32"
	}
}, {
	"": "emit.clt.f64"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "f64"
	, "owner": "emit.clt"
	, "type": "bool"
	, "size": 0
	, "offs": 0
	, "static": true
	, "const": true
	, "ast": {
		"": "clt.f64"
		, "kind": "emit"
		, "type": "bool"
		, "value": "clt.f64"
	}
}, {
	"": "emit.cgt"
	, "kind": "typename"
	, "cast": "void"
	, "name": "cgt"
	, "owner": "emit"
	, "type": "void"
	, "size": 0
	, "offs": 18656
	, "static": true
	, "const": true
}, {
	"": "emit.cgt.i32"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "i32"
	, "owner": "emit.cgt"
	, "type": "bool"
	, "size": 0
	, "offs": 0
	, "static": true
	, "const": true
	, "ast": {
		"": "cgt.i32"
		, "kind": "emit"
		, "type": "bool"
		, "value": "cgt.i32"
	}
}, {
	"": "emit.cgt.i64"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "i64"
	, "owner": "emit.cgt"
	, "type": "bool"
	, "size": 0
	, "offs": 0
	, "static": true
	, "const": true
	, "ast": {
		"": "cgt.i64"
		, "kind": "emit"
		, "type": "bool"
		, "value": "cgt.i64"
	}
}, {
	"": "emit.cgt.u32"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "u32"
	, "owner": "emit.cgt"
	, "type": "bool"
	, "size": 0
	, "offs": 0
	, "static": true
	, "const": true
	, "ast": {
		"": "cgt.u32"
		, "kind": "emit"
		, "type": "bool"
		, "value": "cgt.u32"
	}
}, {
	"": "emit.cgt.u64"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "u64"
	, "owner": "emit.cgt"
	, "type": "bool"
	, "size": 0
	, "offs": 0
	, "static": true
	, "const": true
	, "ast": {
		"": "cgt.u64"
		, "kind": "emit"
		, "type": "bool"
		, "value": "cgt.u64"
	}
}, {
	"": "emit.cgt.f32"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "f32"
	, "owner": "emit.cgt"
	, "type": "bool"
	, "size": 0
	, "offs": 0
	, "static": true
	, "const": true
	, "ast": {
		"": "cgt.f32"
		, "kind": "emit"
		, "type": "bool"
		, "value": "cgt.f32"
	}
}, {
	"": "emit.cgt.f64"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "f64"
	, "owner": "emit.cgt"
	, "type": "bool"
	, "size": 0
	, "offs": 0
	, "static": true
	, "const": true
	, "ast": {
		"": "cgt.f64"
		, "kind": "emit"
		, "type": "bool"
		, "value": "cgt.f64"
	}
}, {
	"": "emit.min"
	, "kind": "typename"
	, "cast": "void"
	, "name": "min"
	, "owner": "emit"
	, "type": "void"
	, "size": 0
	, "offs": 19616
	, "static": true
	, "const": true
}, {
	"": "emit.min.p4f"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "p4f"
	, "owner": "emit.min"
	, "type": "emit.p4x"
	, "size": 0
	, "offs": 0
	, "static": true
	, "const": true
	, "ast": {
		"": "min.v4f"
		, "kind": "emit"
		, "type": "emit.p4x"
		, "value": "min.v4f"
	}
}, {
	"": "emit.min.p2d"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "p2d"
	, "owner": "emit.min"
	, "type": "emit.p4x"
	, "size": 0
	, "offs": 0
	, "static": true
	, "const": true
	, "ast": {
		"": "min.v2d"
		, "kind": "emit"
		, "type": "emit.p4x"
		, "value": "min.v2d"
	}
}, {
	"": "emit.max"
	, "kind": "typename"
	, "cast": "void"
	, "name": "max"
	, "owner": "emit"
	, "type": "void"
	, "size": 0
	, "offs": 20032
	, "static": true
	, "const": true
}, {
	"": "emit.max.p4f"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "p4f"
	, "owner": "emit.max"
	, "type": "emit.p4x"
	, "size": 0
	, "offs": 0
	, "static": true
	, "const": true
	, "ast": {
		"": "max.v4f"
		, "kind": "emit"
		, "type": "emit.p4x"
		, "value": "max.v4f"
	}
}, {
	"": "emit.max.p2d"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "p2d"
	, "owner": "emit.max"
	, "type": "emit.p4x"
	, "size": 0
	, "offs": 0
	, "static": true
	, "const": true
	, "ast": {
		"": "max.v2d"
		, "kind": "emit"
		, "type": "emit.p4x"
		, "value": "max.v2d"
	}
}, {
	"": "halt(): void"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "halt"
	, "type": "function"
	, "args": [{
		"": ".result"
		, "kind": "inline"
		, "cast": "inline"
		, "name": ".result"
		, "type": "void"
		, "size": 0
		, "offs": 0
		, "static": false
		, "const": false
	}]
	, "size": 0
	, "offs": 21168
	, "static": true
	, "const": true
	, "ast": {
		"": "nfc(0)"
		, "kind": "emit"
		, "type": "void"
		, "value": "nfc(0)"
	}
}, {
	"": "CLOCKS_PER_SEC"
	, "kind": "inline"
	, "cast": "i32"
	, "name": "CLOCKS_PER_SEC"
	, "type": "int32"
	, "size": 0
	, "offs": 0
	, "static": false
	, "const": false
	, "ast": {
		"": "1000000"
		, "kind": ".literal"
		, "type": "int64"
		, "value": "1000000"
	}
}, {
	"": "RAND_MAX"
	, "kind": "inline"
	, "cast": "i32"
	, "name": "RAND_MAX"
	, "type": "int32"
	, "size": 0
	, "offs": 0
	, "static": false
	, "const": false
	, "ast": {
		"": "2147483647"
		, "kind": ".literal"
		, "type": "int64"
		, "value": "2147483647"
	}
}, {
	"": "raise(file: char[*], line: int32, level: int32, message: char[*], inspect: variant, maxTrace: int32): void"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "raise"
	, "type": "function"
	, "args": [{
		"": ".result"
		, "kind": "inline"
		, "cast": "inline"
		, "name": ".result"
		, "type": "void"
		, "size": 0
		, "offs": 0
		, "static": false
		, "const": false
	}, {
		"": "file"
		, "kind": "variable"
		, "cast": "ref"
		, "name": "file"
		, "type": "char[*]"
		, "size": 4
		, "offs": 4
		, "static": false
		, "const": false
	}, {
		"": "line"
		, "kind": "variable"
		, "cast": "i32"
		, "name": "line"
		, "type": "int32"
		, "size": 4
		, "offs": 8
		, "static": false
		, "const": false
	}, {
		"": "level"
		, "kind": "variable"
		, "cast": "i32"
		, "name": "level"
		, "type": "int32"
		, "size": 4
		, "offs": 12
		, "static": false
		, "const": false
	}, {
		"": "message"
		, "kind": "variable"
		, "cast": "ref"
		, "name": "message"
		, "type": "char[*]"
		, "size": 4
		, "offs": 16
		, "static": false
		, "const": false
	}, {
		"": "inspect"
		, "kind": "variable"
		, "cast": "var"
		, "name": "inspect"
		, "type": "variant"
		, "size": 8
		, "offs": 24
		, "static": false
		, "const": false
	}, {
		"": "maxTrace"
		, "kind": "variable"
		, "cast": "i32"
		, "name": "maxTrace"
		, "type": "int32"
		, "size": 4
		, "offs": 28
		, "static": false
		, "const": false
	}]
	, "size": 0
	, "offs": 25080
	, "static": true
	, "const": true
	, "ast": {
		"": "nfc(5)"
		, "kind": "emit"
		, "type": "void"
		, "value": "nfc(5)"
	}
}, {
	"": "raise.abort"
	, "kind": "inline"
	, "cast": "i32"
	, "name": "abort"
	, "owner": "raise(file: char[*], line: int32, level: int32, message: char[*], inspect: variant, maxTrace: int32): void"
	, "type": "int32"
	, "size": 0
	, "offs": 0
	, "static": true
	, "const": false
	, "ast": {
		"": "-1"
		, "kind": ".literal"
		, "type": "int64"
		, "value": "-1"
	}
}, {
	"": "raise.error"
	, "kind": "inline"
	, "cast": "i32"
	, "name": "error"
	, "owner": "raise(file: char[*], line: int32, level: int32, message: char[*], inspect: variant, maxTrace: int32): void"
	, "type": "int32"
	, "size": 0
	, "offs": 0
	, "static": true
	, "const": false
	, "ast": {
		"": "0"
		, "kind": ".literal"
		, "type": "int64"
		, "value": "0"
	}
}, {
	"": "raise.warn"
	, "kind": "inline"
	, "cast": "i32"
	, "name": "warn"
	, "owner": "raise(file: char[*], line: int32, level: int32, message: char[*], inspect: variant, maxTrace: int32): void"
	, "type": "int32"
	, "size": 0
	, "offs": 0
	, "static": true
	, "const": false
	, "ast": {
		"": "1"
		, "kind": ".literal"
		, "type": "int64"
		, "value": "1"
	}
}, {
	"": "raise.info"
	, "kind": "inline"
	, "cast": "i32"
	, "name": "info"
	, "owner": "raise(file: char[*], line: int32, level: int32, message: char[*], inspect: variant, maxTrace: int32): void"
	, "type": "int32"
	, "size": 0
	, "offs": 0
	, "static": true
	, "const": false
	, "ast": {
		"": "2"
		, "kind": ".literal"
		, "type": "int64"
		, "value": "2"
	}
}, {
	"": "raise.debug"
	, "kind": "inline"
	, "cast": "i32"
	, "name": "debug"
	, "owner": "raise(file: char[*], line: int32, level: int32, message: char[*], inspect: variant, maxTrace: int32): void"
	, "type": "int32"
	, "size": 0
	, "offs": 0
	, "static": true
	, "const": false
	, "ast": {
		"": "3"
		, "kind": ".literal"
		, "type": "int64"
		, "value": "3"
	}
}, {
	"": "raise.verbose"
	, "kind": "inline"
	, "cast": "i32"
	, "name": "verbose"
	, "owner": "raise(file: char[*], line: int32, level: int32, message: char[*], inspect: variant, maxTrace: int32): void"
	, "type": "int32"
	, "size": 0
	, "offs": 0
	, "static": true
	, "const": false
	, "ast": {
		"": "4"
		, "kind": ".literal"
		, "type": "int64"
		, "value": "4"
	}
}, {
	"": "raise.noTrace"
	, "kind": "inline"
	, "cast": "i32"
	, "name": "noTrace"
	, "owner": "raise(file: char[*], line: int32, level: int32, message: char[*], inspect: variant, maxTrace: int32): void"
	, "type": "int32"
	, "size": 0
	, "offs": 0
	, "static": true
	, "const": false
	, "ast": {
		"": "0"
		, "kind": ".literal"
		, "type": "int64"
		, "value": "0"
	}
}, {
	"": "raise.defTrace"
	, "kind": "inline"
	, "cast": "i32"
	, "name": "defTrace"
	, "owner": "raise(file: char[*], line: int32, level: int32, message: char[*], inspect: variant, maxTrace: int32): void"
	, "type": "int32"
	, "size": 0
	, "offs": 0
	, "static": true
	, "const": false
	, "ast": {
		"": "128"
		, "kind": ".literal"
		, "type": "int64"
		, "value": "128"
	}
}, {
	"": "tryExec(args: pointer, action(args: pointer): void): int32"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "tryExec"
	, "type": "function"
	, "args": [{
		"": ".result"
		, "kind": "inline"
		, "cast": "inline"
		, "name": ".result"
		, "type": "int32"
		, "size": 4
		, "offs": 4
		, "static": false
		, "const": false
	}, {
		"": "args"
		, "kind": "variable"
		, "cast": "ref"
		, "name": "args"
		, "type": "pointer"
		, "size": 4
		, "offs": 4
		, "static": false
		, "const": false
	}, {
		"": "action(args: pointer): void"
		, "kind": "variable"
		, "cast": "ref"
		, "name": "action"
		, "type": "function"
		, "args": [{
			"": ".result"
			, "kind": "variable"
			, "cast": "void"
			, "name": ".result"
			, "type": "void"
			, "size": 0
			, "offs": 0
			, "static": false
			, "const": false
		}, {
			"": "args"
			, "kind": "variable"
			, "cast": "ref"
			, "name": "args"
			, "type": "pointer"
			, "size": 4
			, "offs": 4
			, "static": false
			, "const": false
		}]
		, "size": 4
		, "offs": 8
		, "static": false
		, "const": false
	}]
	, "size": 0
	, "offs": 27128
	, "static": true
	, "const": true
	, "ast": {
		"": "nfc(6)"
		, "kind": "emit"
		, "type": "int32"
		, "value": "nfc(6)"
	}
}, {
	"": "System"
	, "kind": "typename"
	, "cast": "void"
	, "name": "System"
	, "type": "void"
	, "size": 0
	, "offs": 29280
	, "static": true
	, "const": true
}, {
	"": "System.exit(code: int32): void"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "exit"
	, "owner": "System"
	, "type": "function"
	, "args": [{
		"": ".result"
		, "kind": "inline"
		, "cast": "inline"
		, "name": ".result"
		, "type": "void"
		, "size": 0
		, "offs": 0
		, "static": false
		, "const": false
	}, {
		"": "code"
		, "kind": "variable"
		, "cast": "i32"
		, "name": "code"
		, "type": "int32"
		, "size": 4
		, "offs": 4
		, "static": false
		, "const": false
	}]
	, "size": 0
	, "offs": 29848
	, "static": true
	, "const": true
	, "ast": {
		"": "nfc(10)"
		, "kind": "emit"
		, "type": "void"
		, "value": "nfc(10)"
	}
}, {
	"": "System.srand(seed: int32): void"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "srand"
	, "owner": "System"
	, "type": "function"
	, "args": [{
		"": ".result"
		, "kind": "inline"
		, "cast": "inline"
		, "name": ".result"
		, "type": "void"
		, "size": 0
		, "offs": 0
		, "static": false
		, "const": false
	}, {
		"": "seed"
		, "kind": "variable"
		, "cast": "i32"
		, "name": "seed"
		, "type": "int32"
		, "size": 4
		, "offs": 4
		, "static": false
		, "const": false
	}]
	, "size": 0
	, "offs": 30320
	, "static": true
	, "const": true
	, "ast": {
		"": "nfc(11)"
		, "kind": "emit"
		, "type": "void"
		, "value": "nfc(11)"
	}
}, {
	"": "System.rand(): int32"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "rand"
	, "owner": "System"
	, "type": "function"
	, "args": [{
		"": ".result"
		, "kind": "inline"
		, "cast": "inline"
		, "name": ".result"
		, "type": "int32"
		, "size": 4
		, "offs": 4
		, "static": false
		, "const": false
	}]
	, "size": 0
	, "offs": 30648
	, "static": true
	, "const": true
	, "ast": {
		"": "nfc(12)"
		, "kind": "emit"
		, "type": "int32"
		, "value": "nfc(12)"
	}
}, {
	"": "System.time(): int32"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "time"
	, "owner": "System"
	, "type": "function"
	, "args": [{
		"": ".result"
		, "kind": "inline"
		, "cast": "inline"
		, "name": ".result"
		, "type": "int32"
		, "size": 4
		, "offs": 4
		, "static": false
		, "const": false
	}]
	, "size": 0
	, "offs": 30976
	, "static": true
	, "const": true
	, "ast": {
		"": "nfc(13)"
		, "kind": "emit"
		, "type": "int32"
		, "value": "nfc(13)"
	}
}, {
	"": "System.clock(): int32"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "clock"
	, "owner": "System"
	, "type": "function"
	, "args": [{
		"": ".result"
		, "kind": "inline"
		, "cast": "inline"
		, "name": ".result"
		, "type": "int32"
		, "size": 4
		, "offs": 4
		, "static": false
		, "const": false
	}]
	, "size": 0
	, "offs": 31304
	, "static": true
	, "const": true
	, "ast": {
		"": "nfc(14)"
		, "kind": "emit"
		, "type": "int32"
		, "value": "nfc(14)"
	}
}, {
	"": "System.millis(): int64"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "millis"
	, "owner": "System"
	, "type": "function"
	, "args": [{
		"": ".result"
		, "kind": "inline"
		, "cast": "inline"
		, "name": ".result"
		, "type": "int64"
		, "size": 8
		, "offs": 8
		, "static": false
		, "const": false
	}]
	, "size": 0
	, "offs": 31632
	, "static": true
	, "const": true
	, "ast": {
		"": "nfc(15)"
		, "kind": "emit"
		, "type": "int64"
		, "value": "nfc(15)"
	}
}, {
	"": "System.sleep(millis: int64): void"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "sleep"
	, "owner": "System"
	, "type": "function"
	, "args": [{
		"": ".result"
		, "kind": "inline"
		, "cast": "inline"
		, "name": ".result"
		, "type": "void"
		, "size": 0
		, "offs": 0
		, "static": false
		, "const": false
	}, {
		"": "millis"
		, "kind": "variable"
		, "cast": "i64"
		, "name": "millis"
		, "type": "int64"
		, "size": 8
		, "offs": 8
		, "static": false
		, "const": false
	}]
	, "size": 0
	, "offs": 32096
	, "static": true
	, "const": true
	, "ast": {
		"": "nfc(16)"
		, "kind": "emit"
		, "type": "void"
		, "value": "nfc(16)"
	}
}, {
	"": "verbose(message: char[*], inspect: variant): void"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "verbose"
	, "type": "function"
	, "file": "stdlib.ci"
	, "line": 5
	, "args": [{
		"": ".result"
		, "kind": "inline"
		, "cast": "void"
		, "name": ".result"
		, "type": "void"
		, "file": "stdlib.ci"
		, "line": 5
		, "size": 0
		, "offs": 0
		, "static": false
		, "const": false
	}, {
		"": "message"
		, "kind": "inline"
		, "cast": "ref"
		, "name": "message"
		, "type": "char[*]"
		, "file": "stdlib.ci"
		, "line": 5
		, "size": 4
		, "offs": 4
		, "static": false
		, "const": false
	}, {
		"": "inspect"
		, "kind": "inline"
		, "cast": "var"
		, "name": "inspect"
		, "type": "variant"
		, "file": "stdlib.ci"
		, "line": 5
		, "size": 8
		, "offs": 12
		, "static": false
		, "const": false
	}]
	, "size": 0
	, "offs": 0
	, "static": false
	, "const": false
	, "ast": {
		"": "raise(raise.verbose, message, inspect, raise.noTrace)"
		, "kind": "()"
		, "type": "void"
		, "file": "stdlib.ci"
		, "line": 5
		, "args": [{
		}, {
			"": "raise.verbose"
			, "kind": "."
			, "type": "int64"
			, "file": "stdlib.ci"
			, "line": 5
			, "left": {
				"": "raise"
				, "kind": ".variable"
				, "type": "void"
				, "file": "stdlib.ci"
				, "line": 5
				, "value": "raise"
			}
			, "right": {
				"": "verbose"
				, "kind": ".variable"
				, "type": "int64"
				, "file": "stdlib.ci"
				, "line": 5
				, "value": "verbose"
			}
		}, {
			"": "message"
			, "kind": ".variable"
			, "type": "char[*]"
			, "file": "stdlib.ci"
			, "line": 5
			, "value": "message"
		}, {
			"": "inspect"
			, "kind": ".variable"
			, "type": "variant"
			, "file": "stdlib.ci"
			, "line": 5
			, "value": "inspect"
		}, {
			"": "raise.noTrace"
			, "kind": "."
			, "type": "int64"
			, "file": "stdlib.ci"
			, "line": 5
			, "left": {
				"": "raise"
				, "kind": ".variable"
				, "type": "void"
				, "file": "stdlib.ci"
				, "line": 5
				, "value": "raise"
			}
			, "right": {
				"": "noTrace"
				, "kind": ".variable"
				, "type": "int64"
				, "file": "stdlib.ci"
				, "line": 5
				, "value": "noTrace"
			}
		}]
	}
}, {
	"": "verbose(message: char[*]): void"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "verbose"
	, "type": "function"
	, "file": "stdlib.ci"
	, "line": 6
	, "args": [{
		"": ".result"
		, "kind": "inline"
		, "cast": "void"
		, "name": ".result"
		, "type": "void"
		, "file": "stdlib.ci"
		, "line": 6
		, "size": 0
		, "offs": 0
		, "static": false
		, "const": false
	}, {
		"": "message"
		, "kind": "inline"
		, "cast": "ref"
		, "name": "message"
		, "type": "char[*]"
		, "file": "stdlib.ci"
		, "line": 6
		, "size": 4
		, "offs": 4
		, "static": false
		, "const": false
	}]
	, "size": 0
	, "offs": 0
	, "static": false
	, "const": false
	, "ast": {
		"": "raise(raise.verbose, message, null, raise.noTrace)"
		, "kind": "()"
		, "type": "void"
		, "file": "stdlib.ci"
		, "line": 6
		, "args": [{
		}, {
			"": "raise.verbose"
			, "kind": "."
			, "type": "int64"
			, "file": "stdlib.ci"
			, "line": 6
			, "left": {
				"": "raise"
				, "kind": ".variable"
				, "type": "void"
				, "file": "stdlib.ci"
				, "line": 6
				, "value": "raise"
			}
			, "right": {
				"": "verbose"
				, "kind": ".variable"
				, "type": "int64"
				, "file": "stdlib.ci"
				, "line": 6
				, "value": "verbose"
			}
		}, {
			"": "message"
			, "kind": ".variable"
			, "type": "char[*]"
			, "file": "stdlib.ci"
			, "line": 6
			, "value": "message"
		}, {
			"": "null"
			, "kind": ".variable"
			, "type": "pointer"
			, "file": "stdlib.ci"
			, "line": 6
			, "value": "null"
		}, {
			"": "raise.noTrace"
			, "kind": "."
			, "type": "int64"
			, "file": "stdlib.ci"
			, "line": 6
			, "left": {
				"": "raise"
				, "kind": ".variable"
				, "type": "void"
				, "file": "stdlib.ci"
				, "line": 6
				, "value": "raise"
			}
			, "right": {
				"": "noTrace"
				, "kind": ".variable"
				, "type": "int64"
				, "file": "stdlib.ci"
				, "line": 6
				, "value": "noTrace"
			}
		}]
	}
}, {
	"": "trace(message: char[*], inspect: variant): void"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "trace"
	, "type": "function"
	, "file": "stdlib.ci"
	, "line": 8
	, "args": [{
		"": ".result"
		, "kind": "inline"
		, "cast": "void"
		, "name": ".result"
		, "type": "void"
		, "file": "stdlib.ci"
		, "line": 8
		, "size": 0
		, "offs": 0
		, "static": false
		, "const": false
	}, {
		"": "message"
		, "kind": "inline"
		, "cast": "ref"
		, "name": "message"
		, "type": "char[*]"
		, "file": "stdlib.ci"
		, "line": 8
		, "size": 4
		, "offs": 4
		, "static": false
		, "const": false
	}, {
		"": "inspect"
		, "kind": "inline"
		, "cast": "var"
		, "name": "inspect"
		, "type": "variant"
		, "file": "stdlib.ci"
		, "line": 8
		, "size": 8
		, "offs": 12
		, "static": false
		, "const": false
	}]
	, "size": 0
	, "offs": 0
	, "static": false
	, "const": false
	, "ast": {
		"": "raise(raise.debug, message, inspect, raise.defTrace)"
		, "kind": "()"
		, "type": "void"
		, "file": "stdlib.ci"
		, "line": 8
		, "args": [{
		}, {
			"": "raise.debug"
			, "kind": "."
			, "type": "int64"
			, "file": "stdlib.ci"
			, "line": 8
			, "left": {
				"": "raise"
				, "kind": ".variable"
				, "type": "void"
				, "file": "stdlib.ci"
				, "line": 8
				, "value": "raise"
			}
			, "right": {
				"": "debug"
				, "kind": ".variable"
				, "type": "int64"
				, "file": "stdlib.ci"
				, "line": 8
				, "value": "debug"
			}
		}, {
			"": "message"
			, "kind": ".variable"
			, "type": "char[*]"
			, "file": "stdlib.ci"
			, "line": 8
			, "value": "message"
		}, {
			"": "inspect"
			, "kind": ".variable"
			, "type": "variant"
			, "file": "stdlib.ci"
			, "line": 8
			, "value": "inspect"
		}, {
			"": "raise.defTrace"
			, "kind": "."
			, "type": "int64"
			, "file": "stdlib.ci"
			, "line": 8
			, "left": {
				"": "raise"
				, "kind": ".variable"
				, "type": "void"
				, "file": "stdlib.ci"
				, "line": 8
				, "value": "raise"
			}
			, "right": {
				"": "defTrace"
				, "kind": ".variable"
				, "type": "int64"
				, "file": "stdlib.ci"
				, "line": 8
				, "value": "defTrace"
			}
		}]
	}
}, {
	"": "trace(message: char[*]): void"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "trace"
	, "type": "function"
	, "file": "stdlib.ci"
	, "line": 9
	, "args": [{
		"": ".result"
		, "kind": "inline"
		, "cast": "void"
		, "name": ".result"
		, "type": "void"
		, "file": "stdlib.ci"
		, "line": 9
		, "size": 0
		, "offs": 0
		, "static": false
		, "const": false
	}, {
		"": "message"
		, "kind": "inline"
		, "cast": "ref"
		, "name": "message"
		, "type": "char[*]"
		, "file": "stdlib.ci"
		, "line": 9
		, "size": 4
		, "offs": 4
		, "static": false
		, "const": false
	}]
	, "size": 0
	, "offs": 0
	, "static": false
	, "const": false
	, "ast": {
		"": "raise(raise.debug, message, null, raise.defTrace)"
		, "kind": "()"
		, "type": "void"
		, "file": "stdlib.ci"
		, "line": 9
		, "args": [{
		}, {
			"": "raise.debug"
			, "kind": "."
			, "type": "int64"
			, "file": "stdlib.ci"
			, "line": 9
			, "left": {
				"": "raise"
				, "kind": ".variable"
				, "type": "void"
				, "file": "stdlib.ci"
				, "line": 9
				, "value": "raise"
			}
			, "right": {
				"": "debug"
				, "kind": ".variable"
				, "type": "int64"
				, "file": "stdlib.ci"
				, "line": 9
				, "value": "debug"
			}
		}, {
			"": "message"
			, "kind": ".variable"
			, "type": "char[*]"
			, "file": "stdlib.ci"
			, "line": 9
			, "value": "message"
		}, {
			"": "null"
			, "kind": ".variable"
			, "type": "pointer"
			, "file": "stdlib.ci"
			, "line": 9
			, "value": "null"
		}, {
			"": "raise.defTrace"
			, "kind": "."
			, "type": "int64"
			, "file": "stdlib.ci"
			, "line": 9
			, "left": {
				"": "raise"
				, "kind": ".variable"
				, "type": "void"
				, "file": "stdlib.ci"
				, "line": 9
				, "value": "raise"
			}
			, "right": {
				"": "defTrace"
				, "kind": ".variable"
				, "type": "int64"
				, "file": "stdlib.ci"
				, "line": 9
				, "value": "defTrace"
			}
		}]
	}
}, {
	"": "debug(message: char[*], inspect: variant): void"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "debug"
	, "type": "function"
	, "file": "stdlib.ci"
	, "line": 11
	, "args": [{
		"": ".result"
		, "kind": "inline"
		, "cast": "void"
		, "name": ".result"
		, "type": "void"
		, "file": "stdlib.ci"
		, "line": 11
		, "size": 0
		, "offs": 0
		, "static": false
		, "const": false
	}, {
		"": "message"
		, "kind": "inline"
		, "cast": "ref"
		, "name": "message"
		, "type": "char[*]"
		, "file": "stdlib.ci"
		, "line": 11
		, "size": 4
		, "offs": 0
		, "static": false
		, "const": false
	}, {
		"": "inspect"
		, "kind": "inline"
		, "cast": "var"
		, "name": "inspect"
		, "type": "variant"
		, "file": "stdlib.ci"
		, "line": 11
		, "size": 8
		, "offs": 0
		, "static": false
		, "const": false
	}]
	, "size": 0
	, "offs": 0
	, "static": false
	, "const": false
	, "ast": {
		"": "raise(raise.debug, message, inspect, raise.noTrace)"
		, "kind": "()"
		, "type": "void"
		, "file": "stdlib.ci"
		, "line": 11
		, "args": [{
		}, {
			"": "raise.debug"
			, "kind": "."
			, "type": "int64"
			, "file": "stdlib.ci"
			, "line": 11
			, "left": {
				"": "raise"
				, "kind": ".variable"
				, "type": "void"
				, "file": "stdlib.ci"
				, "line": 11
				, "value": "raise"
			}
			, "right": {
				"": "debug"
				, "kind": ".variable"
				, "type": "int64"
				, "file": "stdlib.ci"
				, "line": 11
				, "value": "debug"
			}
		}, {
			"": "message"
			, "kind": ".variable"
			, "type": "char[*]"
			, "file": "stdlib.ci"
			, "line": 11
			, "value": "message"
		}, {
			"": "inspect"
			, "kind": ".variable"
			, "type": "variant"
			, "file": "stdlib.ci"
			, "line": 11
			, "value": "inspect"
		}, {
			"": "raise.noTrace"
			, "kind": "."
			, "type": "int64"
			, "file": "stdlib.ci"
			, "line": 11
			, "left": {
				"": "raise"
				, "kind": ".variable"
				, "type": "void"
				, "file": "stdlib.ci"
				, "line": 11
				, "value": "raise"
			}
			, "right": {
				"": "noTrace"
				, "kind": ".variable"
				, "type": "int64"
				, "file": "stdlib.ci"
				, "line": 11
				, "value": "noTrace"
			}
		}]
	}
}, {
	"": "debug(message: char[*]): void"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "debug"
	, "type": "function"
	, "file": "stdlib.ci"
	, "line": 12
	, "args": [{
		"": ".result"
		, "kind": "inline"
		, "cast": "void"
		, "name": ".result"
		, "type": "void"
		, "file": "stdlib.ci"
		, "line": 12
		, "size": 0
		, "offs": 0
		, "static": false
		, "const": false
	}, {
		"": "message"
		, "kind": "inline"
		, "cast": "ref"
		, "name": "message"
		, "type": "char[*]"
		, "file": "stdlib.ci"
		, "line": 12
		, "size": 4
		, "offs": 0
		, "static": false
		, "const": false
	}]
	, "size": 0
	, "offs": 0
	, "static": false
	, "const": false
	, "ast": {
		"": "raise(raise.debug, message, null, raise.noTrace)"
		, "kind": "()"
		, "type": "void"
		, "file": "stdlib.ci"
		, "line": 12
		, "args": [{
		}, {
			"": "raise.debug"
			, "kind": "."
			, "type": "int64"
			, "file": "stdlib.ci"
			, "line": 12
			, "left": {
				"": "raise"
				, "kind": ".variable"
				, "type": "void"
				, "file": "stdlib.ci"
				, "line": 12
				, "value": "raise"
			}
			, "right": {
				"": "debug"
				, "kind": ".variable"
				, "type": "int64"
				, "file": "stdlib.ci"
				, "line": 12
				, "value": "debug"
			}
		}, {
			"": "message"
			, "kind": ".variable"
			, "type": "char[*]"
			, "file": "stdlib.ci"
			, "line": 12
			, "value": "message"
		}, {
			"": "null"
			, "kind": ".variable"
			, "type": "pointer"
			, "file": "stdlib.ci"
			, "line": 12
			, "value": "null"
		}, {
			"": "raise.noTrace"
			, "kind": "."
			, "type": "int64"
			, "file": "stdlib.ci"
			, "line": 12
			, "left": {
				"": "raise"
				, "kind": ".variable"
				, "type": "void"
				, "file": "stdlib.ci"
				, "line": 12
				, "value": "raise"
			}
			, "right": {
				"": "noTrace"
				, "kind": ".variable"
				, "type": "int64"
				, "file": "stdlib.ci"
				, "line": 12
				, "value": "noTrace"
			}
		}]
	}
}, {
	"": "info(message: char[*], inspect: variant): void"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "info"
	, "type": "function"
	, "file": "stdlib.ci"
	, "line": 14
	, "args": [{
		"": ".result"
		, "kind": "inline"
		, "cast": "void"
		, "name": ".result"
		, "type": "void"
		, "file": "stdlib.ci"
		, "line": 14
		, "size": 0
		, "offs": 0
		, "static": false
		, "const": false
	}, {
		"": "message"
		, "kind": "inline"
		, "cast": "ref"
		, "name": "message"
		, "type": "char[*]"
		, "file": "stdlib.ci"
		, "line": 14
		, "size": 4
		, "offs": 4
		, "static": false
		, "const": false
	}, {
		"": "inspect"
		, "kind": "inline"
		, "cast": "var"
		, "name": "inspect"
		, "type": "variant"
		, "file": "stdlib.ci"
		, "line": 14
		, "size": 8
		, "offs": 12
		, "static": false
		, "const": false
	}]
	, "size": 0
	, "offs": 0
	, "static": false
	, "const": false
	, "ast": {
		"": "raise(raise.info, message, inspect, raise.noTrace)"
		, "kind": "()"
		, "type": "void"
		, "file": "stdlib.ci"
		, "line": 14
		, "args": [{
		}, {
			"": "raise.info"
			, "kind": "."
			, "type": "int64"
			, "file": "stdlib.ci"
			, "line": 14
			, "left": {
				"": "raise"
				, "kind": ".variable"
				, "type": "void"
				, "file": "stdlib.ci"
				, "line": 14
				, "value": "raise"
			}
			, "right": {
				"": "info"
				, "kind": ".variable"
				, "type": "int64"
				, "file": "stdlib.ci"
				, "line": 14
				, "value": "info"
			}
		}, {
			"": "message"
			, "kind": ".variable"
			, "type": "char[*]"
			, "file": "stdlib.ci"
			, "line": 14
			, "value": "message"
		}, {
			"": "inspect"
			, "kind": ".variable"
			, "type": "variant"
			, "file": "stdlib.ci"
			, "line": 14
			, "value": "inspect"
		}, {
			"": "raise.noTrace"
			, "kind": "."
			, "type": "int64"
			, "file": "stdlib.ci"
			, "line": 14
			, "left": {
				"": "raise"
				, "kind": ".variable"
				, "type": "void"
				, "file": "stdlib.ci"
				, "line": 14
				, "value": "raise"
			}
			, "right": {
				"": "noTrace"
				, "kind": ".variable"
				, "type": "int64"
				, "file": "stdlib.ci"
				, "line": 14
				, "value": "noTrace"
			}
		}]
	}
}, {
	"": "info(message: char[*]): void"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "info"
	, "type": "function"
	, "file": "stdlib.ci"
	, "line": 15
	, "args": [{
		"": ".result"
		, "kind": "inline"
		, "cast": "void"
		, "name": ".result"
		, "type": "void"
		, "file": "stdlib.ci"
		, "line": 15
		, "size": 0
		, "offs": 0
		, "static": false
		, "const": false
	}, {
		"": "message"
		, "kind": "inline"
		, "cast": "ref"
		, "name": "message"
		, "type": "char[*]"
		, "file": "stdlib.ci"
		, "line": 15
		, "size": 4
		, "offs": 4
		, "static": false
		, "const": false
	}]
	, "size": 0
	, "offs": 0
	, "static": false
	, "const": false
	, "ast": {
		"": "raise(raise.info, message, null, raise.noTrace)"
		, "kind": "()"
		, "type": "void"
		, "file": "stdlib.ci"
		, "line": 15
		, "args": [{
		}, {
			"": "raise.info"
			, "kind": "."
			, "type": "int64"
			, "file": "stdlib.ci"
			, "line": 15
			, "left": {
				"": "raise"
				, "kind": ".variable"
				, "type": "void"
				, "file": "stdlib.ci"
				, "line": 15
				, "value": "raise"
			}
			, "right": {
				"": "info"
				, "kind": ".variable"
				, "type": "int64"
				, "file": "stdlib.ci"
				, "line": 15
				, "value": "info"
			}
		}, {
			"": "message"
			, "kind": ".variable"
			, "type": "char[*]"
			, "file": "stdlib.ci"
			, "line": 15
			, "value": "message"
		}, {
			"": "null"
			, "kind": ".variable"
			, "type": "pointer"
			, "file": "stdlib.ci"
			, "line": 15
			, "value": "null"
		}, {
			"": "raise.noTrace"
			, "kind": "."
			, "type": "int64"
			, "file": "stdlib.ci"
			, "line": 15
			, "left": {
				"": "raise"
				, "kind": ".variable"
				, "type": "void"
				, "file": "stdlib.ci"
				, "line": 15
				, "value": "raise"
			}
			, "right": {
				"": "noTrace"
				, "kind": ".variable"
				, "type": "int64"
				, "file": "stdlib.ci"
				, "line": 15
				, "value": "noTrace"
			}
		}]
	}
}, {
	"": "warn(message: char[*], inspect: variant): void"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "warn"
	, "type": "function"
	, "file": "stdlib.ci"
	, "line": 17
	, "args": [{
		"": ".result"
		, "kind": "inline"
		, "cast": "void"
		, "name": ".result"
		, "type": "void"
		, "file": "stdlib.ci"
		, "line": 17
		, "size": 0
		, "offs": 0
		, "static": false
		, "const": false
	}, {
		"": "message"
		, "kind": "inline"
		, "cast": "ref"
		, "name": "message"
		, "type": "char[*]"
		, "file": "stdlib.ci"
		, "line": 17
		, "size": 4
		, "offs": 4
		, "static": false
		, "const": false
	}, {
		"": "inspect"
		, "kind": "inline"
		, "cast": "var"
		, "name": "inspect"
		, "type": "variant"
		, "file": "stdlib.ci"
		, "line": 17
		, "size": 8
		, "offs": 12
		, "static": false
		, "const": false
	}]
	, "size": 0
	, "offs": 0
	, "static": false
	, "const": false
	, "ast": {
		"": "raise(raise.warn, message, inspect, raise.noTrace)"
		, "kind": "()"
		, "type": "void"
		, "file": "stdlib.ci"
		, "line": 17
		, "args": [{
		}, {
			"": "raise.warn"
			, "kind": "."
			, "type": "int64"
			, "file": "stdlib.ci"
			, "line": 17
			, "left": {
				"": "raise"
				, "kind": ".variable"
				, "type": "void"
				, "file": "stdlib.ci"
				, "line": 17
				, "value": "raise"
			}
			, "right": {
				"": "warn"
				, "kind": ".variable"
				, "type": "int64"
				, "file": "stdlib.ci"
				, "line": 17
				, "value": "warn"
			}
		}, {
			"": "message"
			, "kind": ".variable"
			, "type": "char[*]"
			, "file": "stdlib.ci"
			, "line": 17
			, "value": "message"
		}, {
			"": "inspect"
			, "kind": ".variable"
			, "type": "variant"
			, "file": "stdlib.ci"
			, "line": 17
			, "value": "inspect"
		}, {
			"": "raise.noTrace"
			, "kind": "."
			, "type": "int64"
			, "file": "stdlib.ci"
			, "line": 17
			, "left": {
				"": "raise"
				, "kind": ".variable"
				, "type": "void"
				, "file": "stdlib.ci"
				, "line": 17
				, "value": "raise"
			}
			, "right": {
				"": "noTrace"
				, "kind": ".variable"
				, "type": "int64"
				, "file": "stdlib.ci"
				, "line": 17
				, "value": "noTrace"
			}
		}]
	}
}, {
	"": "warn(message: char[*]): void"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "warn"
	, "type": "function"
	, "file": "stdlib.ci"
	, "line": 18
	, "args": [{
		"": ".result"
		, "kind": "inline"
		, "cast": "void"
		, "name": ".result"
		, "type": "void"
		, "file": "stdlib.ci"
		, "line": 18
		, "size": 0
		, "offs": 0
		, "static": false
		, "const": false
	}, {
		"": "message"
		, "kind": "inline"
		, "cast": "ref"
		, "name": "message"
		, "type": "char[*]"
		, "file": "stdlib.ci"
		, "line": 18
		, "size": 4
		, "offs": 4
		, "static": false
		, "const": false
	}]
	, "size": 0
	, "offs": 0
	, "static": false
	, "const": false
	, "ast": {
		"": "raise(raise.warn, message, null, raise.noTrace)"
		, "kind": "()"
		, "type": "void"
		, "file": "stdlib.ci"
		, "line": 18
		, "args": [{
		}, {
			"": "raise.warn"
			, "kind": "."
			, "type": "int64"
			, "file": "stdlib.ci"
			, "line": 18
			, "left": {
				"": "raise"
				, "kind": ".variable"
				, "type": "void"
				, "file": "stdlib.ci"
				, "line": 18
				, "value": "raise"
			}
			, "right": {
				"": "warn"
				, "kind": ".variable"
				, "type": "int64"
				, "file": "stdlib.ci"
				, "line": 18
				, "value": "warn"
			}
		}, {
			"": "message"
			, "kind": ".variable"
			, "type": "char[*]"
			, "file": "stdlib.ci"
			, "line": 18
			, "value": "message"
		}, {
			"": "null"
			, "kind": ".variable"
			, "type": "pointer"
			, "file": "stdlib.ci"
			, "line": 18
			, "value": "null"
		}, {
			"": "raise.noTrace"
			, "kind": "."
			, "type": "int64"
			, "file": "stdlib.ci"
			, "line": 18
			, "left": {
				"": "raise"
				, "kind": ".variable"
				, "type": "void"
				, "file": "stdlib.ci"
				, "line": 18
				, "value": "raise"
			}
			, "right": {
				"": "noTrace"
				, "kind": ".variable"
				, "type": "int64"
				, "file": "stdlib.ci"
				, "line": 18
				, "value": "noTrace"
			}
		}]
	}
}, {
	"": "error(message: char[*], inspect: variant): void"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "error"
	, "type": "function"
	, "file": "stdlib.ci"
	, "line": 20
	, "args": [{
		"": ".result"
		, "kind": "inline"
		, "cast": "void"
		, "name": ".result"
		, "type": "void"
		, "file": "stdlib.ci"
		, "line": 20
		, "size": 0
		, "offs": 0
		, "static": false
		, "const": false
	}, {
		"": "message"
		, "kind": "inline"
		, "cast": "ref"
		, "name": "message"
		, "type": "char[*]"
		, "file": "stdlib.ci"
		, "line": 20
		, "size": 4
		, "offs": 4
		, "static": false
		, "const": false
	}, {
		"": "inspect"
		, "kind": "inline"
		, "cast": "var"
		, "name": "inspect"
		, "type": "variant"
		, "file": "stdlib.ci"
		, "line": 20
		, "size": 8
		, "offs": 12
		, "static": false
		, "const": false
	}]
	, "size": 0
	, "offs": 0
	, "static": false
	, "const": false
	, "ast": {
		"": "raise(raise.error, message, inspect, raise.defTrace)"
		, "kind": "()"
		, "type": "void"
		, "file": "stdlib.ci"
		, "line": 20
		, "args": [{
		}, {
			"": "raise.error"
			, "kind": "."
			, "type": "int64"
			, "file": "stdlib.ci"
			, "line": 20
			, "left": {
				"": "raise"
				, "kind": ".variable"
				, "type": "void"
				, "file": "stdlib.ci"
				, "line": 20
				, "value": "raise"
			}
			, "right": {
				"": "error"
				, "kind": ".variable"
				, "type": "int64"
				, "file": "stdlib.ci"
				, "line": 20
				, "value": "error"
			}
		}, {
			"": "message"
			, "kind": ".variable"
			, "type": "char[*]"
			, "file": "stdlib.ci"
			, "line": 20
			, "value": "message"
		}, {
			"": "inspect"
			, "kind": ".variable"
			, "type": "variant"
			, "file": "stdlib.ci"
			, "line": 20
			, "value": "inspect"
		}, {
			"": "raise.defTrace"
			, "kind": "."
			, "type": "int64"
			, "file": "stdlib.ci"
			, "line": 20
			, "left": {
				"": "raise"
				, "kind": ".variable"
				, "type": "void"
				, "file": "stdlib.ci"
				, "line": 20
				, "value": "raise"
			}
			, "right": {
				"": "defTrace"
				, "kind": ".variable"
				, "type": "int64"
				, "file": "stdlib.ci"
				, "line": 20
				, "value": "defTrace"
			}
		}]
	}
}, {
	"": "error(message: char[*]): void"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "error"
	, "type": "function"
	, "file": "stdlib.ci"
	, "line": 21
	, "args": [{
		"": ".result"
		, "kind": "inline"
		, "cast": "void"
		, "name": ".result"
		, "type": "void"
		, "file": "stdlib.ci"
		, "line": 21
		, "size": 0
		, "offs": 0
		, "static": false
		, "const": false
	}, {
		"": "message"
		, "kind": "inline"
		, "cast": "ref"
		, "name": "message"
		, "type": "char[*]"
		, "file": "stdlib.ci"
		, "line": 21
		, "size": 4
		, "offs": 4
		, "static": false
		, "const": false
	}]
	, "size": 0
	, "offs": 0
	, "static": false
	, "const": false
	, "ast": {
		"": "raise(raise.error, message, null, raise.defTrace)"
		, "kind": "()"
		, "type": "void"
		, "file": "stdlib.ci"
		, "line": 21
		, "args": [{
		}, {
			"": "raise.error"
			, "kind": "."
			, "type": "int64"
			, "file": "stdlib.ci"
			, "line": 21
			, "left": {
				"": "raise"
				, "kind": ".variable"
				, "type": "void"
				, "file": "stdlib.ci"
				, "line": 21
				, "value": "raise"
			}
			, "right": {
				"": "error"
				, "kind": ".variable"
				, "type": "int64"
				, "file": "stdlib.ci"
				, "line": 21
				, "value": "error"
			}
		}, {
			"": "message"
			, "kind": ".variable"
			, "type": "char[*]"
			, "file": "stdlib.ci"
			, "line": 21
			, "value": "message"
		}, {
			"": "null"
			, "kind": ".variable"
			, "type": "pointer"
			, "file": "stdlib.ci"
			, "line": 21
			, "value": "null"
		}, {
			"": "raise.defTrace"
			, "kind": "."
			, "type": "int64"
			, "file": "stdlib.ci"
			, "line": 21
			, "left": {
				"": "raise"
				, "kind": ".variable"
				, "type": "void"
				, "file": "stdlib.ci"
				, "line": 21
				, "value": "raise"
			}
			, "right": {
				"": "defTrace"
				, "kind": ".variable"
				, "type": "int64"
				, "file": "stdlib.ci"
				, "line": 21
				, "value": "defTrace"
			}
		}]
	}
}, {
	"": "abort(message: char[*], inspect: variant): void"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "abort"
	, "type": "function"
	, "file": "stdlib.ci"
	, "line": 23
	, "args": [{
		"": ".result"
		, "kind": "inline"
		, "cast": "void"
		, "name": ".result"
		, "type": "void"
		, "file": "stdlib.ci"
		, "line": 23
		, "size": 0
		, "offs": 0
		, "static": false
		, "const": false
	}, {
		"": "message"
		, "kind": "inline"
		, "cast": "ref"
		, "name": "message"
		, "type": "char[*]"
		, "file": "stdlib.ci"
		, "line": 23
		, "size": 4
		, "offs": 4
		, "static": false
		, "const": false
	}, {
		"": "inspect"
		, "kind": "inline"
		, "cast": "var"
		, "name": "inspect"
		, "type": "variant"
		, "file": "stdlib.ci"
		, "line": 23
		, "size": 8
		, "offs": 12
		, "static": false
		, "const": false
	}]
	, "size": 0
	, "offs": 0
	, "static": false
	, "const": false
	, "ast": {
		"": "raise(raise.abort, message, inspect, raise.defTrace)"
		, "kind": "()"
		, "type": "void"
		, "file": "stdlib.ci"
		, "line": 23
		, "args": [{
		}, {
			"": "raise.abort"
			, "kind": "."
			, "type": "int64"
			, "file": "stdlib.ci"
			, "line": 23
			, "left": {
				"": "raise"
				, "kind": ".variable"
				, "type": "void"
				, "file": "stdlib.ci"
				, "line": 23
				, "value": "raise"
			}
			, "right": {
				"": "abort"
				, "kind": ".variable"
				, "type": "int64"
				, "file": "stdlib.ci"
				, "line": 23
				, "value": "abort"
			}
		}, {
			"": "message"
			, "kind": ".variable"
			, "type": "char[*]"
			, "file": "stdlib.ci"
			, "line": 23
			, "value": "message"
		}, {
			"": "inspect"
			, "kind": ".variable"
			, "type": "variant"
			, "file": "stdlib.ci"
			, "line": 23
			, "value": "inspect"
		}, {
			"": "raise.defTrace"
			, "kind": "."
			, "type": "int64"
			, "file": "stdlib.ci"
			, "line": 23
			, "left": {
				"": "raise"
				, "kind": ".variable"
				, "type": "void"
				, "file": "stdlib.ci"
				, "line": 23
				, "value": "raise"
			}
			, "right": {
				"": "defTrace"
				, "kind": ".variable"
				, "type": "int64"
				, "file": "stdlib.ci"
				, "line": 23
				, "value": "defTrace"
			}
		}]
	}
}, {
	"": "abort(message: char[*]): void"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "abort"
	, "type": "function"
	, "file": "stdlib.ci"
	, "line": 24
	, "args": [{
		"": ".result"
		, "kind": "inline"
		, "cast": "void"
		, "name": ".result"
		, "type": "void"
		, "file": "stdlib.ci"
		, "line": 24
		, "size": 0
		, "offs": 0
		, "static": false
		, "const": false
	}, {
		"": "message"
		, "kind": "inline"
		, "cast": "ref"
		, "name": "message"
		, "type": "char[*]"
		, "file": "stdlib.ci"
		, "line": 24
		, "size": 4
		, "offs": 0
		, "static": false
		, "const": false
	}]
	, "size": 0
	, "offs": 0
	, "static": false
	, "const": false
	, "ast": {
		"": "raise(raise.abort, message, null, raise.defTrace)"
		, "kind": "()"
		, "type": "void"
		, "file": "stdlib.ci"
		, "line": 24
		, "args": [{
		}, {
			"": "raise.abort"
			, "kind": "."
			, "type": "int64"
			, "file": "stdlib.ci"
			, "line": 24
			, "left": {
				"": "raise"
				, "kind": ".variable"
				, "type": "void"
				, "file": "stdlib.ci"
				, "line": 24
				, "value": "raise"
			}
			, "right": {
				"": "abort"
				, "kind": ".variable"
				, "type": "int64"
				, "file": "stdlib.ci"
				, "line": 24
				, "value": "abort"
			}
		}, {
			"": "message"
			, "kind": ".variable"
			, "type": "char[*]"
			, "file": "stdlib.ci"
			, "line": 24
			, "value": "message"
		}, {
			"": "null"
			, "kind": ".variable"
			, "type": "pointer"
			, "file": "stdlib.ci"
			, "line": 24
			, "value": "null"
		}, {
			"": "raise.defTrace"
			, "kind": "."
			, "type": "int64"
			, "file": "stdlib.ci"
			, "line": 24
			, "left": {
				"": "raise"
				, "kind": ".variable"
				, "type": "void"
				, "file": "stdlib.ci"
				, "line": 24
				, "value": "raise"
			}
			, "right": {
				"": "defTrace"
				, "kind": ".variable"
				, "type": "int64"
				, "file": "stdlib.ci"
				, "line": 24
				, "value": "defTrace"
			}
		}]
	}
}, {
	"": "abort(): void"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "abort"
	, "type": "function"
	, "file": "stdlib.ci"
	, "line": 25
	, "args": [{
		"": ".result"
		, "kind": "inline"
		, "cast": "void"
		, "name": ".result"
		, "type": "void"
		, "file": "stdlib.ci"
		, "line": 25
		, "size": 0
		, "offs": 0
		, "static": false
		, "const": false
	}]
	, "size": 0
	, "offs": 0
	, "static": false
	, "const": false
	, "ast": {
		"": "raise(raise.abort, \"execution aborted!\", null, raise.defTrace)"
		, "kind": "()"
		, "type": "void"
		, "file": "stdlib.ci"
		, "line": 25
		, "args": [{
		}, {
			"": "raise.abort"
			, "kind": "."
			, "type": "int64"
			, "file": "stdlib.ci"
			, "line": 25
			, "left": {
				"": "raise"
				, "kind": ".variable"
				, "type": "void"
				, "file": "stdlib.ci"
				, "line": 25
				, "value": "raise"
			}
			, "right": {
				"": "abort"
				, "kind": ".variable"
				, "type": "int64"
				, "file": "stdlib.ci"
				, "line": 25
				, "value": "abort"
			}
		}, {
			"": "\"execution aborted!\""
			, "kind": ".literal"
			, "type": ".cstr"
			, "file": "stdlib.ci"
			, "line": 25
			, "value": "\"execution aborted!\""
		}, {
			"": "null"
			, "kind": ".variable"
			, "type": "pointer"
			, "file": "stdlib.ci"
			, "line": 25
			, "value": "null"
		}, {
			"": "raise.defTrace"
			, "kind": "."
			, "type": "int64"
			, "file": "stdlib.ci"
			, "line": 25
			, "left": {
				"": "raise"
				, "kind": ".variable"
				, "type": "void"
				, "file": "stdlib.ci"
				, "line": 25
				, "value": "raise"
			}
			, "right": {
				"": "defTrace"
				, "kind": ".variable"
				, "type": "int64"
				, "file": "stdlib.ci"
				, "line": 25
				, "value": "defTrace"
			}
		}]
	}
}, {
	"": "assert(condition: bool, message: char[*], inspect: variant): void"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "assert"
	, "type": "function"
	, "file": "stdlib.ci"
	, "line": 27
	, "args": [{
		"": ".result"
		, "kind": "inline"
		, "cast": "void"
		, "name": ".result"
		, "type": "void"
		, "file": "stdlib.ci"
		, "line": 27
		, "size": 0
		, "offs": 0
		, "static": false
		, "const": false
	}, {
		"": "condition"
		, "kind": "inline"
		, "cast": "bool"
		, "name": "condition"
		, "type": "bool"
		, "file": "stdlib.ci"
		, "line": 27
		, "size": 4
		, "offs": 4
		, "static": false
		, "const": false
	}, {
		"": "message"
		, "kind": "inline"
		, "cast": "ref"
		, "name": "message"
		, "type": "char[*]"
		, "file": "stdlib.ci"
		, "line": 27
		, "size": 4
		, "offs": 8
		, "static": false
		, "const": false
	}, {
		"": "inspect"
		, "kind": "inline"
		, "cast": "var"
		, "name": "inspect"
		, "type": "variant"
		, "file": "stdlib.ci"
		, "line": 27
		, "size": 8
		, "offs": 16
		, "static": false
		, "const": false
	}]
	, "size": 0
	, "offs": 0
	, "static": false
	, "const": false
	, "ast": {
		"": "void(condition ? void(0) : abort(message, inspect))"
		, "kind": "()"
		, "type": "void"
		, "file": "stdlib.ci"
		, "line": 27
		, "args": [{
			"": "condition ? void(0) : abort(message, inspect)"
			, "kind": "?:"
			, "type": "void"
			, "file": "stdlib.ci"
			, "line": 27
			, "test": {
				"": "condition"
				, "kind": ".variable"
				, "type": "bool"
				, "file": "stdlib.ci"
				, "line": 27
				, "value": "condition"
			}
			, "left": {
				"": "void(0)"
				, "kind": "()"
				, "type": "void"
				, "file": "stdlib.ci"
				, "line": 27
				, "args": [{
					"": "0"
					, "kind": ".literal"
					, "type": "int32"
					, "file": "stdlib.ci"
					, "line": 27
					, "value": "0"
				}]
			}
			, "right": {
				"": "abort(message, inspect)"
				, "kind": "()"
				, "type": "void"
				, "file": "stdlib.ci"
				, "line": 27
				, "args": [{
				}, {
					"": "message"
					, "kind": ".variable"
					, "type": "char[*]"
					, "file": "stdlib.ci"
					, "line": 27
					, "value": "message"
				}, {
					"": "inspect"
					, "kind": ".variable"
					, "type": "variant"
					, "file": "stdlib.ci"
					, "line": 27
					, "value": "inspect"
				}]
			}
		}]
	}
}, {
	"": "assert(condition: bool, message: char[*]): void"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "assert"
	, "type": "function"
	, "file": "stdlib.ci"
	, "line": 28
	, "args": [{
		"": ".result"
		, "kind": "inline"
		, "cast": "void"
		, "name": ".result"
		, "type": "void"
		, "file": "stdlib.ci"
		, "line": 28
		, "size": 0
		, "offs": 0
		, "static": false
		, "const": false
	}, {
		"": "condition"
		, "kind": "inline"
		, "cast": "bool"
		, "name": "condition"
		, "type": "bool"
		, "file": "stdlib.ci"
		, "line": 28
		, "size": 4
		, "offs": 0
		, "static": false
		, "const": false
	}, {
		"": "message"
		, "kind": "inline"
		, "cast": "ref"
		, "name": "message"
		, "type": "char[*]"
		, "file": "stdlib.ci"
		, "line": 28
		, "size": 4
		, "offs": 0
		, "static": false
		, "const": false
	}]
	, "size": 0
	, "offs": 0
	, "static": false
	, "const": false
	, "ast": {
		"": "void(condition ? void(0) : abort(message))"
		, "kind": "()"
		, "type": "void"
		, "file": "stdlib.ci"
		, "line": 28
		, "args": [{
			"": "condition ? void(0) : abort(message)"
			, "kind": "?:"
			, "type": "void"
			, "file": "stdlib.ci"
			, "line": 28
			, "test": {
				"": "condition"
				, "kind": ".variable"
				, "type": "bool"
				, "file": "stdlib.ci"
				, "line": 28
				, "value": "condition"
			}
			, "left": {
				"": "void(0)"
				, "kind": "()"
				, "type": "void"
				, "file": "stdlib.ci"
				, "line": 28
				, "args": [{
					"": "0"
					, "kind": ".literal"
					, "type": "int32"
					, "file": "stdlib.ci"
					, "line": 28
					, "value": "0"
				}]
			}
			, "right": {
				"": "abort(message)"
				, "kind": "()"
				, "type": "void"
				, "file": "stdlib.ci"
				, "line": 28
				, "args": [{
					"": "message"
					, "kind": ".variable"
					, "type": "char[*]"
					, "file": "stdlib.ci"
					, "line": 28
					, "value": "message"
				}]
			}
		}]
	}
}, {
	"": "assert(condition: bool): void"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "assert"
	, "type": "function"
	, "file": "stdlib.ci"
	, "line": 29
	, "args": [{
		"": ".result"
		, "kind": "inline"
		, "cast": "void"
		, "name": ".result"
		, "type": "void"
		, "file": "stdlib.ci"
		, "line": 29
		, "size": 0
		, "offs": 0
		, "static": false
		, "const": false
	}, {
		"": "condition"
		, "kind": "inline"
		, "cast": "bool"
		, "name": "condition"
		, "type": "bool"
		, "file": "stdlib.ci"
		, "line": 29
		, "size": 4
		, "offs": 0
		, "static": false
		, "const": false
	}]
	, "size": 0
	, "offs": 0
	, "static": false
	, "const": false
	, "ast": {
		"": "void(condition ? void(0) : abort(\"assertion failed!\"))"
		, "kind": "()"
		, "type": "void"
		, "file": "stdlib.ci"
		, "line": 29
		, "args": [{
			"": "condition ? void(0) : abort(\"assertion failed!\")"
			, "kind": "?:"
			, "type": "void"
			, "file": "stdlib.ci"
			, "line": 29
			, "test": {
				"": "condition"
				, "kind": ".variable"
				, "type": "bool"
				, "file": "stdlib.ci"
				, "line": 29
				, "value": "condition"
			}
			, "left": {
				"": "void(0)"
				, "kind": "()"
				, "type": "void"
				, "file": "stdlib.ci"
				, "line": 29
				, "args": [{
					"": "0"
					, "kind": ".literal"
					, "type": "int32"
					, "file": "stdlib.ci"
					, "line": 29
					, "value": "0"
				}]
			}
			, "right": {
				"": "abort(\"assertion failed!\")"
				, "kind": "()"
				, "type": "void"
				, "file": "stdlib.ci"
				, "line": 29
				, "args": [{
					"": "\"assertion failed!\""
					, "kind": ".literal"
					, "type": ".cstr"
					, "file": "stdlib.ci"
					, "line": 29
					, "value": "\"assertion failed!\""
				}]
			}
		}]
	}
}, {
	"": "sizeof(type: typename): int32"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "sizeof"
	, "type": "function"
	, "file": "stdlib.ci"
	, "line": 33
	, "args": [{
		"": ".result"
		, "kind": "inline"
		, "cast": "i32"
		, "name": ".result"
		, "type": "int32"
		, "file": "stdlib.ci"
		, "line": 33
		, "size": 4
		, "offs": 0
		, "static": false
		, "const": false
	}, {
		"": "type"
		, "kind": "inline"
		, "cast": "ref"
		, "name": "type"
		, "type": "typename"
		, "file": "stdlib.ci"
		, "line": 33
		, "size": 4
		, "offs": 0
		, "static": false
		, "const": false
	}]
	, "size": 0
	, "offs": 0
	, "static": false
	, "const": false
	, "ast": {
		"": "int32(type.size)"
		, "kind": "()"
		, "type": "int32"
		, "file": "stdlib.ci"
		, "line": 33
		, "args": [{
			"": "type.size"
			, "kind": "."
			, "type": "int32"
			, "file": "stdlib.ci"
			, "line": 33
			, "left": {
				"": "type"
				, "kind": ".variable"
				, "type": "typename"
				, "file": "stdlib.ci"
				, "line": 33
				, "value": "type"
			}
			, "right": {
				"": "size"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "stdlib.ci"
				, "line": 33
				, "value": "size"
			}
		}]
	}
}, {
	"": "integer"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "integer"
	, "type": "typename"
	, "file": "test.ci"
	, "line": 4
	, "size": 0
	, "offs": 0
	, "static": false
	, "const": false
	, "ast": {
		"": "int64"
		, "kind": ".variable"
		, "type": "typename"
		, "file": "test.ci"
		, "line": 4
		, "value": "int64"
	}
}, {
	"": "t"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "t"
	, "type": "int32"
	, "file": "extras/Tests/lang.statementIf.ci"
	, "line": 26
	, "size": 4
	, "offs": 4
	, "static": false
	, "const": false
	, "ast": {
		"": "0"
		, "kind": ".literal"
		, "type": "int32"
		, "file": "extras/Tests/lang.statementIf.ci"
		, "line": 26
		, "value": "0"
	}
}, {
	"": "forIdx"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "forIdx"
	, "type": "int32"
	, "file": "extras/Tests/lang.statementFor.ci"
	, "line": 12
	, "size": 4
	, "offs": 8
	, "static": false
	, "const": false
}, {
	"": "rgbF32"
	, "kind": "typename"
	, "cast": "val"
	, "name": "rgbF32"
	, "type": "typename"
	, "file": "extras/Tests/lang.record.ci"
	, "line": 2
	, "size": 16
	, "offs": 55536
	, "static": true
	, "const": true
}, {
	"": "rgbF32.r"
	, "kind": "variable"
	, "cast": "f32"
	, "name": "r"
	, "owner": "rgbF32"
	, "type": "float32"
	, "file": "extras/Tests/lang.record.ci"
	, "line": 3
	, "size": 4
	, "offs": 0
	, "static": false
	, "const": false
}, {
	"": "rgbF32.g"
	, "kind": "variable"
	, "cast": "f32"
	, "name": "g"
	, "owner": "rgbF32"
	, "type": "float32"
	, "file": "extras/Tests/lang.record.ci"
	, "line": 4
	, "size": 4
	, "offs": 4
	, "static": false
	, "const": false
}, {
	"": "rgbF32.b"
	, "kind": "variable"
	, "cast": "f32"
	, "name": "b"
	, "owner": "rgbF32"
	, "type": "float32"
	, "file": "extras/Tests/lang.record.ci"
	, "line": 5
	, "size": 4
	, "offs": 8
	, "static": false
	, "const": false
}, {
	"": "rgbU8"
	, "kind": "typename"
	, "cast": "val"
	, "name": "rgbU8"
	, "type": "typename"
	, "file": "extras/Tests/lang.record.ci"
	, "line": 9
	, "size": 3
	, "offs": 56080
	, "static": true
	, "const": true
}, {
	"": "rgbU8.b"
	, "kind": "variable"
	, "cast": "u32"
	, "name": "b"
	, "owner": "rgbU8"
	, "type": "uint8"
	, "file": "extras/Tests/lang.record.ci"
	, "line": 10
	, "size": 1
	, "offs": 0
	, "static": false
	, "const": false
}, {
	"": "rgbU8.g"
	, "kind": "variable"
	, "cast": "u32"
	, "name": "g"
	, "owner": "rgbU8"
	, "type": "uint8"
	, "file": "extras/Tests/lang.record.ci"
	, "line": 11
	, "size": 1
	, "offs": 1
	, "static": false
	, "const": false
}, {
	"": "rgbU8.r"
	, "kind": "variable"
	, "cast": "u32"
	, "name": "r"
	, "owner": "rgbU8"
	, "type": "uint8"
	, "file": "extras/Tests/lang.record.ci"
	, "line": 12
	, "size": 1
	, "offs": 2
	, "static": false
	, "const": false
}, {
	"": "color"
	, "kind": "typename"
	, "cast": "val"
	, "name": "color"
	, "type": "typename"
	, "file": "extras/Tests/lang.record.ci"
	, "line": 16
	, "size": 4
	, "offs": 56624
	, "static": true
	, "const": true
}, {
	"": "color.col"
	, "kind": "variable"
	, "cast": "u32"
	, "name": "col"
	, "owner": "color"
	, "type": "uint32"
	, "file": "extras/Tests/lang.record.ci"
	, "line": 17
	, "size": 4
	, "offs": 0
	, "static": false
	, "const": false
}, {
	"": "color.rgb"
	, "kind": "variable"
	, "cast": "val"
	, "name": "rgb"
	, "owner": "color"
	, "type": "rgbU8"
	, "file": "extras/Tests/lang.record.ci"
	, "line": 18
	, "size": 3
	, "offs": 0
	, "static": false
	, "const": false
}, {
	"": "Color"
	, "kind": "typename"
	, "cast": "ref"
	, "name": "Color"
	, "type": "object"
	, "file": "extras/Tests/lang.record.ci"
	, "line": 22
	, "size": 20
	, "offs": 57032
	, "static": true
	, "const": true
}, {
	"": "Color.value"
	, "kind": "variable"
	, "cast": "val"
	, "name": "value"
	, "owner": "Color"
	, "type": "rgbF32"
	, "file": "extras/Tests/lang.record.ci"
	, "line": 23
	, "size": 16
	, "offs": 4
	, "static": false
	, "const": false
}, {
	"": "record_pack0"
	, "kind": "typename"
	, "cast": "val"
	, "name": "record_pack0"
	, "type": "typename"
	, "file": "extras/Tests/lang.recordPack.ci"
	, "line": 2
	, "size": 8
	, "offs": 57400
	, "static": true
	, "const": true
}, {
	"": "record_pack0._0"
	, "kind": "variable"
	, "cast": "u32"
	, "name": "_0"
	, "owner": "record_pack0"
	, "type": "uint8"
	, "file": "extras/Tests/lang.recordPack.ci"
	, "line": 3
	, "size": 1
	, "offs": 0
	, "static": false
	, "const": false
}, {
	"": "record_pack0.a"
	, "kind": "variable"
	, "cast": "u64"
	, "name": "a"
	, "owner": "record_pack0"
	, "type": "uint64"
	, "file": "extras/Tests/lang.recordPack.ci"
	, "line": 4
	, "size": 8
	, "offs": 0
	, "static": false
	, "const": false
}, {
	"": "record_pack0._1"
	, "kind": "variable"
	, "cast": "u32"
	, "name": "_1"
	, "owner": "record_pack0"
	, "type": "uint8"
	, "file": "extras/Tests/lang.recordPack.ci"
	, "line": 5
	, "size": 1
	, "offs": 0
	, "static": false
	, "const": false
}, {
	"": "record_pack0.b"
	, "kind": "variable"
	, "cast": "u32"
	, "name": "b"
	, "owner": "record_pack0"
	, "type": "uint32"
	, "file": "extras/Tests/lang.recordPack.ci"
	, "line": 6
	, "size": 4
	, "offs": 0
	, "static": false
	, "const": false
}, {
	"": "record_pack0._2"
	, "kind": "variable"
	, "cast": "u32"
	, "name": "_2"
	, "owner": "record_pack0"
	, "type": "uint8"
	, "file": "extras/Tests/lang.recordPack.ci"
	, "line": 7
	, "size": 1
	, "offs": 0
	, "static": false
	, "const": false
}, {
	"": "record_pack0.c"
	, "kind": "variable"
	, "cast": "u32"
	, "name": "c"
	, "owner": "record_pack0"
	, "type": "uint16"
	, "file": "extras/Tests/lang.recordPack.ci"
	, "line": 8
	, "size": 2
	, "offs": 0
	, "static": false
	, "const": false
}, {
	"": "record_pack1"
	, "kind": "typename"
	, "cast": "val"
	, "name": "record_pack1"
	, "type": "typename"
	, "file": "extras/Tests/lang.recordPack.ci"
	, "line": 12
	, "size": 17
	, "offs": 58352
	, "static": true
	, "const": true
}, {
	"": "record_pack1._0"
	, "kind": "variable"
	, "cast": "u32"
	, "name": "_0"
	, "owner": "record_pack1"
	, "type": "uint8"
	, "file": "extras/Tests/lang.recordPack.ci"
	, "line": 13
	, "size": 1
	, "offs": 0
	, "static": false
	, "const": false
}, {
	"": "record_pack1.a"
	, "kind": "variable"
	, "cast": "u64"
	, "name": "a"
	, "owner": "record_pack1"
	, "type": "uint64"
	, "file": "extras/Tests/lang.recordPack.ci"
	, "line": 14
	, "size": 8
	, "offs": 1
	, "static": false
	, "const": false
}, {
	"": "record_pack1._1"
	, "kind": "variable"
	, "cast": "u32"
	, "name": "_1"
	, "owner": "record_pack1"
	, "type": "uint8"
	, "file": "extras/Tests/lang.recordPack.ci"
	, "line": 15
	, "size": 1
	, "offs": 9
	, "static": false
	, "const": false
}, {
	"": "record_pack1.b"
	, "kind": "variable"
	, "cast": "u32"
	, "name": "b"
	, "owner": "record_pack1"
	, "type": "uint32"
	, "file": "extras/Tests/lang.recordPack.ci"
	, "line": 16
	, "size": 4
	, "offs": 10
	, "static": false
	, "const": false
}, {
	"": "record_pack1._2"
	, "kind": "variable"
	, "cast": "u32"
	, "name": "_2"
	, "owner": "record_pack1"
	, "type": "uint8"
	, "file": "extras/Tests/lang.recordPack.ci"
	, "line": 17
	, "size": 1
	, "offs": 14
	, "static": false
	, "const": false
}, {
	"": "record_pack1.c"
	, "kind": "variable"
	, "cast": "u32"
	, "name": "c"
	, "owner": "record_pack1"
	, "type": "uint16"
	, "file": "extras/Tests/lang.recordPack.ci"
	, "line": 18
	, "size": 2
	, "offs": 15
	, "static": false
	, "const": false
}, {
	"": "record_pack2"
	, "kind": "typename"
	, "cast": "val"
	, "name": "record_pack2"
	, "type": "typename"
	, "file": "extras/Tests/lang.recordPack.ci"
	, "line": 22
	, "size": 20
	, "offs": 59304
	, "static": true
	, "const": true
}, {
	"": "record_pack2._0"
	, "kind": "variable"
	, "cast": "u32"
	, "name": "_0"
	, "owner": "record_pack2"
	, "type": "uint8"
	, "file": "extras/Tests/lang.recordPack.ci"
	, "line": 23
	, "size": 1
	, "offs": 0
	, "static": false
	, "const": false
}, {
	"": "record_pack2.a"
	, "kind": "variable"
	, "cast": "u64"
	, "name": "a"
	, "owner": "record_pack2"
	, "type": "uint64"
	, "file": "extras/Tests/lang.recordPack.ci"
	, "line": 24
	, "size": 8
	, "offs": 2
	, "static": false
	, "const": false
}, {
	"": "record_pack2._1"
	, "kind": "variable"
	, "cast": "u32"
	, "name": "_1"
	, "owner": "record_pack2"
	, "type": "uint8"
	, "file": "extras/Tests/lang.recordPack.ci"
	, "line": 25
	, "size": 1
	, "offs": 10
	, "static": false
	, "const": false
}, {
	"": "record_pack2.b"
	, "kind": "variable"
	, "cast": "u32"
	, "name": "b"
	, "owner": "record_pack2"
	, "type": "uint32"
	, "file": "extras/Tests/lang.recordPack.ci"
	, "line": 26
	, "size": 4
	, "offs": 12
	, "static": false
	, "const": false
}, {
	"": "record_pack2._2"
	, "kind": "variable"
	, "cast": "u32"
	, "name": "_2"
	, "owner": "record_pack2"
	, "type": "uint8"
	, "file": "extras/Tests/lang.recordPack.ci"
	, "line": 27
	, "size": 1
	, "offs": 16
	, "static": false
	, "const": false
}, {
	"": "record_pack2.c"
	, "kind": "variable"
	, "cast": "u32"
	, "name": "c"
	, "owner": "record_pack2"
	, "type": "uint16"
	, "file": "extras/Tests/lang.recordPack.ci"
	, "line": 28
	, "size": 2
	, "offs": 18
	, "static": false
	, "const": false
}, {
	"": "record_pack4"
	, "kind": "typename"
	, "cast": "val"
	, "name": "record_pack4"
	, "type": "typename"
	, "file": "extras/Tests/lang.recordPack.ci"
	, "line": 32
	, "size": 24
	, "offs": 60256
	, "static": true
	, "const": true
}, {
	"": "record_pack4._0"
	, "kind": "variable"
	, "cast": "u32"
	, "name": "_0"
	, "owner": "record_pack4"
	, "type": "uint8"
	, "file": "extras/Tests/lang.recordPack.ci"
	, "line": 33
	, "size": 1
	, "offs": 0
	, "static": false
	, "const": false
}, {
	"": "record_pack4.a"
	, "kind": "variable"
	, "cast": "u64"
	, "name": "a"
	, "owner": "record_pack4"
	, "type": "uint64"
	, "file": "extras/Tests/lang.recordPack.ci"
	, "line": 34
	, "size": 8
	, "offs": 4
	, "static": false
	, "const": false
}, {
	"": "record_pack4._1"
	, "kind": "variable"
	, "cast": "u32"
	, "name": "_1"
	, "owner": "record_pack4"
	, "type": "uint8"
	, "file": "extras/Tests/lang.recordPack.ci"
	, "line": 35
	, "size": 1
	, "offs": 12
	, "static": false
	, "const": false
}, {
	"": "record_pack4.b"
	, "kind": "variable"
	, "cast": "u32"
	, "name": "b"
	, "owner": "record_pack4"
	, "type": "uint32"
	, "file": "extras/Tests/lang.recordPack.ci"
	, "line": 36
	, "size": 4
	, "offs": 16
	, "static": false
	, "const": false
}, {
	"": "record_pack4._2"
	, "kind": "variable"
	, "cast": "u32"
	, "name": "_2"
	, "owner": "record_pack4"
	, "type": "uint8"
	, "file": "extras/Tests/lang.recordPack.ci"
	, "line": 37
	, "size": 1
	, "offs": 20
	, "static": false
	, "const": false
}, {
	"": "record_pack4.c"
	, "kind": "variable"
	, "cast": "u32"
	, "name": "c"
	, "owner": "record_pack4"
	, "type": "uint16"
	, "file": "extras/Tests/lang.recordPack.ci"
	, "line": 38
	, "size": 2
	, "offs": 22
	, "static": false
	, "const": false
}, {
	"": "record_pack8"
	, "kind": "typename"
	, "cast": "val"
	, "name": "record_pack8"
	, "type": "typename"
	, "file": "extras/Tests/lang.recordPack.ci"
	, "line": 42
	, "size": 32
	, "offs": 61208
	, "static": true
	, "const": true
}, {
	"": "record_pack8._0"
	, "kind": "variable"
	, "cast": "u32"
	, "name": "_0"
	, "owner": "record_pack8"
	, "type": "uint8"
	, "file": "extras/Tests/lang.recordPack.ci"
	, "line": 43
	, "size": 1
	, "offs": 0
	, "static": false
	, "const": false
}, {
	"": "record_pack8.a"
	, "kind": "variable"
	, "cast": "u64"
	, "name": "a"
	, "owner": "record_pack8"
	, "type": "uint64"
	, "file": "extras/Tests/lang.recordPack.ci"
	, "line": 44
	, "size": 8
	, "offs": 8
	, "static": false
	, "const": false
}, {
	"": "record_pack8._1"
	, "kind": "variable"
	, "cast": "u32"
	, "name": "_1"
	, "owner": "record_pack8"
	, "type": "uint8"
	, "file": "extras/Tests/lang.recordPack.ci"
	, "line": 45
	, "size": 1
	, "offs": 16
	, "static": false
	, "const": false
}, {
	"": "record_pack8.b"
	, "kind": "variable"
	, "cast": "u32"
	, "name": "b"
	, "owner": "record_pack8"
	, "type": "uint32"
	, "file": "extras/Tests/lang.recordPack.ci"
	, "line": 46
	, "size": 4
	, "offs": 20
	, "static": false
	, "const": false
}, {
	"": "record_pack8._2"
	, "kind": "variable"
	, "cast": "u32"
	, "name": "_2"
	, "owner": "record_pack8"
	, "type": "uint8"
	, "file": "extras/Tests/lang.recordPack.ci"
	, "line": 47
	, "size": 1
	, "offs": 24
	, "static": false
	, "const": false
}, {
	"": "record_pack8.c"
	, "kind": "variable"
	, "cast": "u32"
	, "name": "c"
	, "owner": "record_pack8"
	, "type": "uint16"
	, "file": "extras/Tests/lang.recordPack.ci"
	, "line": 48
	, "size": 2
	, "offs": 26
	, "static": false
	, "const": false
}, {
	"": "record_packDef"
	, "kind": "typename"
	, "cast": "val"
	, "name": "record_packDef"
	, "type": "typename"
	, "file": "extras/Tests/lang.recordPack.ci"
	, "line": 52
	, "size": 32
	, "offs": 62160
	, "static": true
	, "const": true
}, {
	"": "record_packDef._0"
	, "kind": "variable"
	, "cast": "u32"
	, "name": "_0"
	, "owner": "record_packDef"
	, "type": "uint8"
	, "file": "extras/Tests/lang.recordPack.ci"
	, "line": 53
	, "size": 1
	, "offs": 0
	, "static": false
	, "const": false
}, {
	"": "record_packDef.a"
	, "kind": "variable"
	, "cast": "u64"
	, "name": "a"
	, "owner": "record_packDef"
	, "type": "uint64"
	, "file": "extras/Tests/lang.recordPack.ci"
	, "line": 54
	, "size": 8
	, "offs": 8
	, "static": false
	, "const": false
}, {
	"": "record_packDef._1"
	, "kind": "variable"
	, "cast": "u32"
	, "name": "_1"
	, "owner": "record_packDef"
	, "type": "uint8"
	, "file": "extras/Tests/lang.recordPack.ci"
	, "line": 55
	, "size": 1
	, "offs": 16
	, "static": false
	, "const": false
}, {
	"": "record_packDef.b"
	, "kind": "variable"
	, "cast": "u32"
	, "name": "b"
	, "owner": "record_packDef"
	, "type": "uint32"
	, "file": "extras/Tests/lang.recordPack.ci"
	, "line": 56
	, "size": 4
	, "offs": 20
	, "static": false
	, "const": false
}, {
	"": "record_packDef._2"
	, "kind": "variable"
	, "cast": "u32"
	, "name": "_2"
	, "owner": "record_packDef"
	, "type": "uint8"
	, "file": "extras/Tests/lang.recordPack.ci"
	, "line": 57
	, "size": 1
	, "offs": 24
	, "static": false
	, "const": false
}, {
	"": "record_packDef.c"
	, "kind": "variable"
	, "cast": "u32"
	, "name": "c"
	, "owner": "record_packDef"
	, "type": "uint16"
	, "file": "extras/Tests/lang.recordPack.ci"
	, "line": 58
	, "size": 2
	, "offs": 26
	, "static": false
	, "const": false
}, {
	"": "zero(a: int32, b: int32): int32"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "zero"
	, "type": "function"
	, "file": "extras/Tests/lang.inlineArgs.ci"
	, "line": 3
	, "args": [{
		"": ".result"
		, "kind": "inline"
		, "cast": "i32"
		, "name": ".result"
		, "type": "int32"
		, "file": "extras/Tests/lang.inlineArgs.ci"
		, "line": 3
		, "size": 4
		, "offs": 0
		, "static": false
		, "const": false
	}, {
		"": "a"
		, "kind": "inline"
		, "cast": "i32"
		, "name": "a"
		, "type": "int32"
		, "file": "extras/Tests/lang.inlineArgs.ci"
		, "line": 3
		, "size": 4
		, "offs": 0
		, "static": false
		, "const": false
	}, {
		"": "b"
		, "kind": "inline"
		, "cast": "i32"
		, "name": "b"
		, "type": "int32"
		, "file": "extras/Tests/lang.inlineArgs.ci"
		, "line": 3
		, "size": 4
		, "offs": 0
		, "static": false
		, "const": false
	}]
	, "size": 0
	, "offs": 0
	, "static": false
	, "const": false
	, "ast": {
		"": "0"
		, "kind": ".literal"
		, "type": "int32"
		, "file": "extras/Tests/lang.inlineArgs.ci"
		, "line": 3
		, "value": "0"
	}
}, {
	"": "last(a: int32, b: int32): int32"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "last"
	, "type": "function"
	, "file": "extras/Tests/lang.inlineArgs.ci"
	, "line": 4
	, "args": [{
		"": ".result"
		, "kind": "inline"
		, "cast": "i32"
		, "name": ".result"
		, "type": "int32"
		, "file": "extras/Tests/lang.inlineArgs.ci"
		, "line": 4
		, "size": 4
		, "offs": 0
		, "static": false
		, "const": false
	}, {
		"": "a"
		, "kind": "inline"
		, "cast": "i32"
		, "name": "a"
		, "type": "int32"
		, "file": "extras/Tests/lang.inlineArgs.ci"
		, "line": 4
		, "size": 4
		, "offs": 0
		, "static": false
		, "const": false
	}, {
		"": "b"
		, "kind": "inline"
		, "cast": "i32"
		, "name": "b"
		, "type": "int32"
		, "file": "extras/Tests/lang.inlineArgs.ci"
		, "line": 4
		, "size": 4
		, "offs": 0
		, "static": false
		, "const": false
	}]
	, "size": 0
	, "offs": 0
	, "static": false
	, "const": false
	, "ast": {
		"": "b"
		, "kind": ".variable"
		, "type": "int32"
		, "file": "extras/Tests/lang.inlineArgs.ci"
		, "line": 4
		, "value": "b"
	}
}, {
	"": "sum(a: int32, b: int32): int32"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "sum"
	, "type": "function"
	, "file": "extras/Tests/lang.inlineArgs.ci"
	, "line": 5
	, "args": [{
		"": ".result"
		, "kind": "inline"
		, "cast": "i32"
		, "name": ".result"
		, "type": "int32"
		, "file": "extras/Tests/lang.inlineArgs.ci"
		, "line": 5
		, "size": 4
		, "offs": 0
		, "static": false
		, "const": false
	}, {
		"": "a"
		, "kind": "inline"
		, "cast": "i32"
		, "name": "a"
		, "type": "int32"
		, "file": "extras/Tests/lang.inlineArgs.ci"
		, "line": 5
		, "size": 4
		, "offs": 0
		, "static": false
		, "const": false
	}, {
		"": "b"
		, "kind": "inline"
		, "cast": "i32"
		, "name": "b"
		, "type": "int32"
		, "file": "extras/Tests/lang.inlineArgs.ci"
		, "line": 5
		, "size": 4
		, "offs": 0
		, "static": false
		, "const": false
	}]
	, "size": 0
	, "offs": 0
	, "static": false
	, "const": false
	, "ast": {
		"": "a + b"
		, "kind": "+"
		, "type": "int32"
		, "file": "extras/Tests/lang.inlineArgs.ci"
		, "line": 5
		, "left": {
			"": "a"
			, "kind": ".variable"
			, "type": "int32"
			, "file": "extras/Tests/lang.inlineArgs.ci"
			, "line": 5
			, "value": "a"
		}
		, "right": {
			"": "b"
			, "kind": ".variable"
			, "type": "int32"
			, "file": "extras/Tests/lang.inlineArgs.ci"
			, "line": 5
			, "value": "b"
		}
	}
}, {
	"": "any(a: int32, b: int32): int32"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "any"
	, "type": "function"
	, "file": "extras/Tests/lang.inlineArgs.ci"
	, "line": 6
	, "args": [{
		"": ".result"
		, "kind": "inline"
		, "cast": "i32"
		, "name": ".result"
		, "type": "int32"
		, "file": "extras/Tests/lang.inlineArgs.ci"
		, "line": 6
		, "size": 4
		, "offs": 0
		, "static": false
		, "const": false
	}, {
		"": "a"
		, "kind": "variable"
		, "cast": "i32"
		, "name": "a"
		, "type": "int32"
		, "file": "extras/Tests/lang.inlineArgs.ci"
		, "line": 6
		, "size": 4
		, "offs": 4
		, "static": false
		, "const": false
	}, {
		"": "b"
		, "kind": "inline"
		, "cast": "i32"
		, "name": "b"
		, "type": "int32"
		, "file": "extras/Tests/lang.inlineArgs.ci"
		, "line": 6
		, "size": 4
		, "offs": 4
		, "static": false
		, "const": false
	}]
	, "size": 0
	, "offs": 0
	, "static": false
	, "const": false
	, "ast": {
		"": "(a) ? a : b"
		, "kind": "?:"
		, "type": "int32"
		, "file": "extras/Tests/lang.inlineArgs.ci"
		, "line": 6
		, "test": {
			"": "(a)"
			, "kind": "()"
			, "type": "bool"
			, "file": "extras/Tests/lang.inlineArgs.ci"
			, "line": 6
			, "args": [{
				"": "a"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.inlineArgs.ci"
				, "line": 6
				, "value": "a"
			}]
		}
		, "left": {
			"": "a"
			, "kind": ".variable"
			, "type": "int32"
			, "file": "extras/Tests/lang.inlineArgs.ci"
			, "line": 6
			, "value": "a"
		}
		, "right": {
			"": "b"
			, "kind": ".variable"
			, "type": "int32"
			, "file": "extras/Tests/lang.inlineArgs.ci"
			, "line": 6
			, "value": "b"
		}
	}
}, {
	"": "min(a: int32, b: int32): int32"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "min"
	, "type": "function"
	, "file": "extras/Tests/lang.inlineArgs.ci"
	, "line": 7
	, "args": [{
		"": ".result"
		, "kind": "inline"
		, "cast": "i32"
		, "name": ".result"
		, "type": "int32"
		, "file": "extras/Tests/lang.inlineArgs.ci"
		, "line": 7
		, "size": 4
		, "offs": 0
		, "static": false
		, "const": false
	}, {
		"": "a"
		, "kind": "variable"
		, "cast": "i32"
		, "name": "a"
		, "type": "int32"
		, "file": "extras/Tests/lang.inlineArgs.ci"
		, "line": 7
		, "size": 4
		, "offs": 4
		, "static": false
		, "const": false
	}, {
		"": "b"
		, "kind": "variable"
		, "cast": "i32"
		, "name": "b"
		, "type": "int32"
		, "file": "extras/Tests/lang.inlineArgs.ci"
		, "line": 7
		, "size": 4
		, "offs": 8
		, "static": false
		, "const": false
	}]
	, "size": 0
	, "offs": 0
	, "static": false
	, "const": false
	, "ast": {
		"": "a < b ? a : b"
		, "kind": "?:"
		, "type": "int32"
		, "file": "extras/Tests/lang.inlineArgs.ci"
		, "line": 7
		, "test": {
			"": "a < b"
			, "kind": "<"
			, "type": "bool"
			, "file": "extras/Tests/lang.inlineArgs.ci"
			, "line": 7
			, "left": {
				"": "a"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.inlineArgs.ci"
				, "line": 7
				, "value": "a"
			}
			, "right": {
				"": "b"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.inlineArgs.ci"
				, "line": 7
				, "value": "b"
			}
		}
		, "left": {
			"": "a"
			, "kind": ".variable"
			, "type": "int32"
			, "file": "extras/Tests/lang.inlineArgs.ci"
			, "line": 7
			, "value": "a"
		}
		, "right": {
			"": "b"
			, "kind": ".variable"
			, "type": "int32"
			, "file": "extras/Tests/lang.inlineArgs.ci"
			, "line": 7
			, "value": "b"
		}
	}
}, {
	"": "sum(a: int32, b: int32, c: int32): int32"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "sum"
	, "type": "function"
	, "file": "extras/Tests/lang.inlineArgs.ci"
	, "line": 9
	, "args": [{
		"": ".result"
		, "kind": "inline"
		, "cast": "i32"
		, "name": ".result"
		, "type": "int32"
		, "file": "extras/Tests/lang.inlineArgs.ci"
		, "line": 9
		, "size": 4
		, "offs": 0
		, "static": false
		, "const": false
	}, {
		"": "a"
		, "kind": "inline"
		, "cast": "i32"
		, "name": "a"
		, "type": "int32"
		, "file": "extras/Tests/lang.inlineArgs.ci"
		, "line": 9
		, "size": 4
		, "offs": 4
		, "static": false
		, "const": false
	}, {
		"": "b"
		, "kind": "inline"
		, "cast": "i32"
		, "name": "b"
		, "type": "int32"
		, "file": "extras/Tests/lang.inlineArgs.ci"
		, "line": 9
		, "size": 4
		, "offs": 8
		, "static": false
		, "const": false
	}, {
		"": "c"
		, "kind": "inline"
		, "cast": "i32"
		, "name": "c"
		, "type": "int32"
		, "file": "extras/Tests/lang.inlineArgs.ci"
		, "line": 9
		, "size": 4
		, "offs": 12
		, "static": false
		, "const": false
	}]
	, "size": 0
	, "offs": 0
	, "static": false
	, "const": false
	, "ast": {
		"": "sum(sum(a, b), c)"
		, "kind": "()"
		, "type": "int32"
		, "file": "extras/Tests/lang.inlineArgs.ci"
		, "line": 9
		, "args": [{
		}, {
			"": "sum(a, b)"
			, "kind": "()"
			, "type": "int32"
			, "file": "extras/Tests/lang.inlineArgs.ci"
			, "line": 9
			, "args": [{
			}, {
				"": "a"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.inlineArgs.ci"
				, "line": 9
				, "value": "a"
			}, {
				"": "b"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.inlineArgs.ci"
				, "line": 9
				, "value": "b"
			}]
		}, {
			"": "c"
			, "kind": ".variable"
			, "type": "int32"
			, "file": "extras/Tests/lang.inlineArgs.ci"
			, "line": 9
			, "value": "c"
		}]
	}
}, {
	"": "any(a: int32, b: int32, c: int32): int32"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "any"
	, "type": "function"
	, "file": "extras/Tests/lang.inlineArgs.ci"
	, "line": 10
	, "args": [{
		"": ".result"
		, "kind": "inline"
		, "cast": "i32"
		, "name": ".result"
		, "type": "int32"
		, "file": "extras/Tests/lang.inlineArgs.ci"
		, "line": 10
		, "size": 4
		, "offs": 0
		, "static": false
		, "const": false
	}, {
		"": "a"
		, "kind": "inline"
		, "cast": "i32"
		, "name": "a"
		, "type": "int32"
		, "file": "extras/Tests/lang.inlineArgs.ci"
		, "line": 10
		, "size": 4
		, "offs": 0
		, "static": false
		, "const": false
	}, {
		"": "b"
		, "kind": "inline"
		, "cast": "i32"
		, "name": "b"
		, "type": "int32"
		, "file": "extras/Tests/lang.inlineArgs.ci"
		, "line": 10
		, "size": 4
		, "offs": 0
		, "static": false
		, "const": false
	}, {
		"": "c"
		, "kind": "inline"
		, "cast": "i32"
		, "name": "c"
		, "type": "int32"
		, "file": "extras/Tests/lang.inlineArgs.ci"
		, "line": 10
		, "size": 4
		, "offs": 0
		, "static": false
		, "const": false
	}]
	, "size": 0
	, "offs": 0
	, "static": false
	, "const": false
	, "ast": {
		"": "any(any(a, b), c)"
		, "kind": "()"
		, "type": "int32"
		, "file": "extras/Tests/lang.inlineArgs.ci"
		, "line": 10
		, "args": [{
		}, {
			"": "any(a, b)"
			, "kind": "()"
			, "type": "int32"
			, "file": "extras/Tests/lang.inlineArgs.ci"
			, "line": 10
			, "args": [{
			}, {
				"": "a"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.inlineArgs.ci"
				, "line": 10
				, "value": "a"
			}, {
				"": "b"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.inlineArgs.ci"
				, "line": 10
				, "value": "b"
			}]
		}, {
			"": "c"
			, "kind": ".variable"
			, "type": "int32"
			, "file": "extras/Tests/lang.inlineArgs.ci"
			, "line": 10
			, "value": "c"
		}]
	}
}, {
	"": "min(a: int32, b: int32, c: int32): int32"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "min"
	, "type": "function"
	, "file": "extras/Tests/lang.inlineArgs.ci"
	, "line": 11
	, "args": [{
		"": ".result"
		, "kind": "inline"
		, "cast": "i32"
		, "name": ".result"
		, "type": "int32"
		, "file": "extras/Tests/lang.inlineArgs.ci"
		, "line": 11
		, "size": 4
		, "offs": 0
		, "static": false
		, "const": false
	}, {
		"": "a"
		, "kind": "inline"
		, "cast": "i32"
		, "name": "a"
		, "type": "int32"
		, "file": "extras/Tests/lang.inlineArgs.ci"
		, "line": 11
		, "size": 4
		, "offs": 0
		, "static": false
		, "const": false
	}, {
		"": "b"
		, "kind": "inline"
		, "cast": "i32"
		, "name": "b"
		, "type": "int32"
		, "file": "extras/Tests/lang.inlineArgs.ci"
		, "line": 11
		, "size": 4
		, "offs": 0
		, "static": false
		, "const": false
	}, {
		"": "c"
		, "kind": "inline"
		, "cast": "i32"
		, "name": "c"
		, "type": "int32"
		, "file": "extras/Tests/lang.inlineArgs.ci"
		, "line": 11
		, "size": 4
		, "offs": 0
		, "static": false
		, "const": false
	}]
	, "size": 0
	, "offs": 0
	, "static": false
	, "const": false
	, "ast": {
		"": "min(min(a, b), c)"
		, "kind": "()"
		, "type": "int32"
		, "file": "extras/Tests/lang.inlineArgs.ci"
		, "line": 11
		, "args": [{
		}, {
			"": "min(a, b)"
			, "kind": "()"
			, "type": "int32"
			, "file": "extras/Tests/lang.inlineArgs.ci"
			, "line": 11
			, "args": [{
			}, {
				"": "a"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.inlineArgs.ci"
				, "line": 11
				, "value": "a"
			}, {
				"": "b"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.inlineArgs.ci"
				, "line": 11
				, "value": "b"
			}]
		}, {
			"": "c"
			, "kind": ".variable"
			, "type": "int32"
			, "file": "extras/Tests/lang.inlineArgs.ci"
			, "line": 11
			, "value": "c"
		}]
	}
}, {
	"": "ma"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "ma"
	, "type": "int32"
	, "file": "extras/Tests/lang.inlineArgs.ci"
	, "line": 16
	, "size": 4
	, "offs": 12
	, "static": false
	, "const": false
	, "ast": {
		"": "3"
		, "kind": ".literal"
		, "type": "int32"
		, "file": "extras/Tests/lang.inlineArgs.ci"
		, "line": 16
		, "value": "3"
	}
}, {
	"": "mb"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "mb"
	, "type": "int32"
	, "file": "extras/Tests/lang.inlineArgs.ci"
	, "line": 17
	, "size": 4
	, "offs": 16
	, "static": false
	, "const": false
	, "ast": {
		"": "6"
		, "kind": ".literal"
		, "type": "int32"
		, "file": "extras/Tests/lang.inlineArgs.ci"
		, "line": 17
		, "value": "6"
	}
}, {
	"": "mc"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "mc"
	, "type": "int32"
	, "file": "extras/Tests/lang.inlineArgs.ci"
	, "line": 18
	, "size": 4
	, "offs": 20
	, "static": false
	, "const": false
	, "ast": {
		"": "9"
		, "kind": ".literal"
		, "type": "int32"
		, "file": "extras/Tests/lang.inlineArgs.ci"
		, "line": 18
		, "value": "9"
	}
}, {
	"": "zeroVal"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "zeroVal"
	, "type": "int32"
	, "file": "extras/Tests/lang.inlineArgs.ci"
	, "line": 20
	, "size": 4
	, "offs": 24
	, "static": false
	, "const": false
	, "ast": {
		"": "zero(2, 3)"
		, "kind": "()"
		, "type": "int32"
		, "file": "extras/Tests/lang.inlineArgs.ci"
		, "line": 20
		, "args": [{
		}, {
			"": "2"
			, "kind": ".literal"
			, "type": "int32"
			, "file": "extras/Tests/lang.inlineArgs.ci"
			, "line": 20
			, "value": "2"
		}, {
			"": "3"
			, "kind": ".literal"
			, "type": "int32"
			, "file": "extras/Tests/lang.inlineArgs.ci"
			, "line": 20
			, "value": "3"
		}]
	}
}, {
	"": "zeroVar"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "zeroVar"
	, "type": "int32"
	, "file": "extras/Tests/lang.inlineArgs.ci"
	, "line": 21
	, "size": 4
	, "offs": 28
	, "static": false
	, "const": false
	, "ast": {
		"": "zero(ma, mb)"
		, "kind": "()"
		, "type": "int32"
		, "file": "extras/Tests/lang.inlineArgs.ci"
		, "line": 21
		, "args": [{
		}, {
			"": "ma"
			, "kind": ".variable"
			, "type": "int32"
			, "file": "extras/Tests/lang.inlineArgs.ci"
			, "line": 21
			, "value": "ma"
		}, {
			"": "mb"
			, "kind": ".variable"
			, "type": "int32"
			, "file": "extras/Tests/lang.inlineArgs.ci"
			, "line": 21
			, "value": "mb"
		}]
	}
}, {
	"": "zeroXpr"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "zeroXpr"
	, "type": "int32"
	, "file": "extras/Tests/lang.inlineArgs.ci"
	, "line": 22
	, "size": 4
	, "offs": 32
	, "static": false
	, "const": false
	, "ast": {
		"": "zero(ma + mb, mb + mc)"
		, "kind": "()"
		, "type": "int32"
		, "file": "extras/Tests/lang.inlineArgs.ci"
		, "line": 22
		, "args": [{
		}, {
			"": "ma + mb"
			, "kind": "+"
			, "type": "int32"
			, "file": "extras/Tests/lang.inlineArgs.ci"
			, "line": 22
			, "left": {
				"": "ma"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.inlineArgs.ci"
				, "line": 22
				, "value": "ma"
			}
			, "right": {
				"": "mb"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.inlineArgs.ci"
				, "line": 22
				, "value": "mb"
			}
		}, {
			"": "mb + mc"
			, "kind": "+"
			, "type": "int32"
			, "file": "extras/Tests/lang.inlineArgs.ci"
			, "line": 22
			, "left": {
				"": "mb"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.inlineArgs.ci"
				, "line": 22
				, "value": "mb"
			}
			, "right": {
				"": "mc"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.inlineArgs.ci"
				, "line": 22
				, "value": "mc"
			}
		}]
	}
}, {
	"": "lastVal"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "lastVal"
	, "type": "int32"
	, "file": "extras/Tests/lang.inlineArgs.ci"
	, "line": 24
	, "size": 4
	, "offs": 36
	, "static": false
	, "const": false
	, "ast": {
		"": "last(2, 3)"
		, "kind": "()"
		, "type": "int32"
		, "file": "extras/Tests/lang.inlineArgs.ci"
		, "line": 24
		, "args": [{
		}, {
			"": "2"
			, "kind": ".literal"
			, "type": "int32"
			, "file": "extras/Tests/lang.inlineArgs.ci"
			, "line": 24
			, "value": "2"
		}, {
			"": "3"
			, "kind": ".literal"
			, "type": "int32"
			, "file": "extras/Tests/lang.inlineArgs.ci"
			, "line": 24
			, "value": "3"
		}]
	}
}, {
	"": "lastVar"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "lastVar"
	, "type": "int32"
	, "file": "extras/Tests/lang.inlineArgs.ci"
	, "line": 25
	, "size": 4
	, "offs": 40
	, "static": false
	, "const": false
	, "ast": {
		"": "last(ma, mb)"
		, "kind": "()"
		, "type": "int32"
		, "file": "extras/Tests/lang.inlineArgs.ci"
		, "line": 25
		, "args": [{
		}, {
			"": "ma"
			, "kind": ".variable"
			, "type": "int32"
			, "file": "extras/Tests/lang.inlineArgs.ci"
			, "line": 25
			, "value": "ma"
		}, {
			"": "mb"
			, "kind": ".variable"
			, "type": "int32"
			, "file": "extras/Tests/lang.inlineArgs.ci"
			, "line": 25
			, "value": "mb"
		}]
	}
}, {
	"": "lastXpr"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "lastXpr"
	, "type": "int32"
	, "file": "extras/Tests/lang.inlineArgs.ci"
	, "line": 26
	, "size": 4
	, "offs": 44
	, "static": false
	, "const": false
	, "ast": {
		"": "last(ma + mb, mb + mc)"
		, "kind": "()"
		, "type": "int32"
		, "file": "extras/Tests/lang.inlineArgs.ci"
		, "line": 26
		, "args": [{
		}, {
			"": "ma + mb"
			, "kind": "+"
			, "type": "int32"
			, "file": "extras/Tests/lang.inlineArgs.ci"
			, "line": 26
			, "left": {
				"": "ma"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.inlineArgs.ci"
				, "line": 26
				, "value": "ma"
			}
			, "right": {
				"": "mb"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.inlineArgs.ci"
				, "line": 26
				, "value": "mb"
			}
		}, {
			"": "mb + mc"
			, "kind": "+"
			, "type": "int32"
			, "file": "extras/Tests/lang.inlineArgs.ci"
			, "line": 26
			, "left": {
				"": "mb"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.inlineArgs.ci"
				, "line": 26
				, "value": "mb"
			}
			, "right": {
				"": "mc"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.inlineArgs.ci"
				, "line": 26
				, "value": "mc"
			}
		}]
	}
}, {
	"": "sum2Val"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "sum2Val"
	, "type": "int32"
	, "file": "extras/Tests/lang.inlineArgs.ci"
	, "line": 28
	, "size": 4
	, "offs": 48
	, "static": false
	, "const": false
	, "ast": {
		"": "sum(3, 12)"
		, "kind": "()"
		, "type": "int32"
		, "file": "extras/Tests/lang.inlineArgs.ci"
		, "line": 28
		, "args": [{
		}, {
			"": "3"
			, "kind": ".literal"
			, "type": "int32"
			, "file": "extras/Tests/lang.inlineArgs.ci"
			, "line": 28
			, "value": "3"
		}, {
			"": "12"
			, "kind": ".literal"
			, "type": "int32"
			, "file": "extras/Tests/lang.inlineArgs.ci"
			, "line": 28
			, "value": "12"
		}]
	}
}, {
	"": "sum2Var"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "sum2Var"
	, "type": "int32"
	, "file": "extras/Tests/lang.inlineArgs.ci"
	, "line": 29
	, "size": 4
	, "offs": 52
	, "static": false
	, "const": false
	, "ast": {
		"": "sum(ma, mb)"
		, "kind": "()"
		, "type": "int32"
		, "file": "extras/Tests/lang.inlineArgs.ci"
		, "line": 29
		, "args": [{
		}, {
			"": "ma"
			, "kind": ".variable"
			, "type": "int32"
			, "file": "extras/Tests/lang.inlineArgs.ci"
			, "line": 29
			, "value": "ma"
		}, {
			"": "mb"
			, "kind": ".variable"
			, "type": "int32"
			, "file": "extras/Tests/lang.inlineArgs.ci"
			, "line": 29
			, "value": "mb"
		}]
	}
}, {
	"": "sum2Xpr"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "sum2Xpr"
	, "type": "int32"
	, "file": "extras/Tests/lang.inlineArgs.ci"
	, "line": 30
	, "size": 4
	, "offs": 56
	, "static": false
	, "const": false
	, "ast": {
		"": "sum(ma + mb, mb + mc)"
		, "kind": "()"
		, "type": "int32"
		, "file": "extras/Tests/lang.inlineArgs.ci"
		, "line": 30
		, "args": [{
		}, {
			"": "ma + mb"
			, "kind": "+"
			, "type": "int32"
			, "file": "extras/Tests/lang.inlineArgs.ci"
			, "line": 30
			, "left": {
				"": "ma"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.inlineArgs.ci"
				, "line": 30
				, "value": "ma"
			}
			, "right": {
				"": "mb"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.inlineArgs.ci"
				, "line": 30
				, "value": "mb"
			}
		}, {
			"": "mb + mc"
			, "kind": "+"
			, "type": "int32"
			, "file": "extras/Tests/lang.inlineArgs.ci"
			, "line": 30
			, "left": {
				"": "mb"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.inlineArgs.ci"
				, "line": 30
				, "value": "mb"
			}
			, "right": {
				"": "mc"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.inlineArgs.ci"
				, "line": 30
				, "value": "mc"
			}
		}]
	}
}, {
	"": "any2Val"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "any2Val"
	, "type": "int32"
	, "file": "extras/Tests/lang.inlineArgs.ci"
	, "line": 32
	, "size": 4
	, "offs": 60
	, "static": false
	, "const": false
	, "ast": {
		"": "any(3, 12)"
		, "kind": "()"
		, "type": "int32"
		, "file": "extras/Tests/lang.inlineArgs.ci"
		, "line": 32
		, "args": [{
		}, {
			"": "3"
			, "kind": ".literal"
			, "type": "int32"
			, "file": "extras/Tests/lang.inlineArgs.ci"
			, "line": 32
			, "value": "3"
		}, {
			"": "12"
			, "kind": ".literal"
			, "type": "int32"
			, "file": "extras/Tests/lang.inlineArgs.ci"
			, "line": 32
			, "value": "12"
		}]
	}
}, {
	"": "any2Var"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "any2Var"
	, "type": "int32"
	, "file": "extras/Tests/lang.inlineArgs.ci"
	, "line": 33
	, "size": 4
	, "offs": 64
	, "static": false
	, "const": false
	, "ast": {
		"": "any(ma, mb)"
		, "kind": "()"
		, "type": "int32"
		, "file": "extras/Tests/lang.inlineArgs.ci"
		, "line": 33
		, "args": [{
		}, {
			"": "ma"
			, "kind": ".variable"
			, "type": "int32"
			, "file": "extras/Tests/lang.inlineArgs.ci"
			, "line": 33
			, "value": "ma"
		}, {
			"": "mb"
			, "kind": ".variable"
			, "type": "int32"
			, "file": "extras/Tests/lang.inlineArgs.ci"
			, "line": 33
			, "value": "mb"
		}]
	}
}, {
	"": "any2Xpr"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "any2Xpr"
	, "type": "int32"
	, "file": "extras/Tests/lang.inlineArgs.ci"
	, "line": 34
	, "size": 4
	, "offs": 68
	, "static": false
	, "const": false
	, "ast": {
		"": "any(ma + mb, mb + mc)"
		, "kind": "()"
		, "type": "int32"
		, "file": "extras/Tests/lang.inlineArgs.ci"
		, "line": 34
		, "args": [{
		}, {
			"": "ma + mb"
			, "kind": "+"
			, "type": "int32"
			, "file": "extras/Tests/lang.inlineArgs.ci"
			, "line": 34
			, "left": {
				"": "ma"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.inlineArgs.ci"
				, "line": 34
				, "value": "ma"
			}
			, "right": {
				"": "mb"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.inlineArgs.ci"
				, "line": 34
				, "value": "mb"
			}
		}, {
			"": "mb + mc"
			, "kind": "+"
			, "type": "int32"
			, "file": "extras/Tests/lang.inlineArgs.ci"
			, "line": 34
			, "left": {
				"": "mb"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.inlineArgs.ci"
				, "line": 34
				, "value": "mb"
			}
			, "right": {
				"": "mc"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.inlineArgs.ci"
				, "line": 34
				, "value": "mc"
			}
		}]
	}
}, {
	"": "min2Val"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "min2Val"
	, "type": "int32"
	, "file": "extras/Tests/lang.inlineArgs.ci"
	, "line": 36
	, "size": 4
	, "offs": 72
	, "static": false
	, "const": false
	, "ast": {
		"": "min(3, 12)"
		, "kind": "()"
		, "type": "int32"
		, "file": "extras/Tests/lang.inlineArgs.ci"
		, "line": 36
		, "args": [{
		}, {
			"": "3"
			, "kind": ".literal"
			, "type": "int32"
			, "file": "extras/Tests/lang.inlineArgs.ci"
			, "line": 36
			, "value": "3"
		}, {
			"": "12"
			, "kind": ".literal"
			, "type": "int32"
			, "file": "extras/Tests/lang.inlineArgs.ci"
			, "line": 36
			, "value": "12"
		}]
	}
}, {
	"": "min2Var"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "min2Var"
	, "type": "int32"
	, "file": "extras/Tests/lang.inlineArgs.ci"
	, "line": 37
	, "size": 4
	, "offs": 76
	, "static": false
	, "const": false
	, "ast": {
		"": "min(ma, mb)"
		, "kind": "()"
		, "type": "int32"
		, "file": "extras/Tests/lang.inlineArgs.ci"
		, "line": 37
		, "args": [{
		}, {
			"": "ma"
			, "kind": ".variable"
			, "type": "int32"
			, "file": "extras/Tests/lang.inlineArgs.ci"
			, "line": 37
			, "value": "ma"
		}, {
			"": "mb"
			, "kind": ".variable"
			, "type": "int32"
			, "file": "extras/Tests/lang.inlineArgs.ci"
			, "line": 37
			, "value": "mb"
		}]
	}
}, {
	"": "min2Xpr"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "min2Xpr"
	, "type": "int32"
	, "file": "extras/Tests/lang.inlineArgs.ci"
	, "line": 38
	, "size": 4
	, "offs": 80
	, "static": false
	, "const": false
	, "ast": {
		"": "min(ma + mb, mb + mc)"
		, "kind": "()"
		, "type": "int32"
		, "file": "extras/Tests/lang.inlineArgs.ci"
		, "line": 38
		, "args": [{
		}, {
			"": "ma + mb"
			, "kind": "+"
			, "type": "int32"
			, "file": "extras/Tests/lang.inlineArgs.ci"
			, "line": 38
			, "left": {
				"": "ma"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.inlineArgs.ci"
				, "line": 38
				, "value": "ma"
			}
			, "right": {
				"": "mb"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.inlineArgs.ci"
				, "line": 38
				, "value": "mb"
			}
		}, {
			"": "mb + mc"
			, "kind": "+"
			, "type": "int32"
			, "file": "extras/Tests/lang.inlineArgs.ci"
			, "line": 38
			, "left": {
				"": "mb"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.inlineArgs.ci"
				, "line": 38
				, "value": "mb"
			}
			, "right": {
				"": "mc"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.inlineArgs.ci"
				, "line": 38
				, "value": "mc"
			}
		}]
	}
}, {
	"": "any3Val"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "any3Val"
	, "type": "int32"
	, "file": "extras/Tests/lang.inlineArgs.ci"
	, "line": 45
	, "size": 4
	, "offs": 84
	, "static": false
	, "const": false
	, "ast": {
		"": "any(3, 2, 6)"
		, "kind": "()"
		, "type": "int32"
		, "file": "extras/Tests/lang.inlineArgs.ci"
		, "line": 45
		, "args": [{
		}, {
			"": "3"
			, "kind": ".literal"
			, "type": "int32"
			, "file": "extras/Tests/lang.inlineArgs.ci"
			, "line": 45
			, "value": "3"
		}, {
			"": "2"
			, "kind": ".literal"
			, "type": "int32"
			, "file": "extras/Tests/lang.inlineArgs.ci"
			, "line": 45
			, "value": "2"
		}, {
			"": "6"
			, "kind": ".literal"
			, "type": "int32"
			, "file": "extras/Tests/lang.inlineArgs.ci"
			, "line": 45
			, "value": "6"
		}]
	}
}, {
	"": "any3Var"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "any3Var"
	, "type": "int32"
	, "file": "extras/Tests/lang.inlineArgs.ci"
	, "line": 46
	, "size": 4
	, "offs": 88
	, "static": false
	, "const": false
	, "ast": {
		"": "any(ma, mb, mc)"
		, "kind": "()"
		, "type": "int32"
		, "file": "extras/Tests/lang.inlineArgs.ci"
		, "line": 46
		, "args": [{
		}, {
			"": "ma"
			, "kind": ".variable"
			, "type": "int32"
			, "file": "extras/Tests/lang.inlineArgs.ci"
			, "line": 46
			, "value": "ma"
		}, {
			"": "mb"
			, "kind": ".variable"
			, "type": "int32"
			, "file": "extras/Tests/lang.inlineArgs.ci"
			, "line": 46
			, "value": "mb"
		}, {
			"": "mc"
			, "kind": ".variable"
			, "type": "int32"
			, "file": "extras/Tests/lang.inlineArgs.ci"
			, "line": 46
			, "value": "mc"
		}]
	}
}, {
	"": "any3Xpr"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "any3Xpr"
	, "type": "int32"
	, "file": "extras/Tests/lang.inlineArgs.ci"
	, "line": 47
	, "size": 4
	, "offs": 92
	, "static": false
	, "const": false
	, "ast": {
		"": "any(ma + mb, mb + mc, mc + ma)"
		, "kind": "()"
		, "type": "int32"
		, "file": "extras/Tests/lang.inlineArgs.ci"
		, "line": 47
		, "args": [{
		}, {
			"": "ma + mb"
			, "kind": "+"
			, "type": "int32"
			, "file": "extras/Tests/lang.inlineArgs.ci"
			, "line": 47
			, "left": {
				"": "ma"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.inlineArgs.ci"
				, "line": 47
				, "value": "ma"
			}
			, "right": {
				"": "mb"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.inlineArgs.ci"
				, "line": 47
				, "value": "mb"
			}
		}, {
			"": "mb + mc"
			, "kind": "+"
			, "type": "int32"
			, "file": "extras/Tests/lang.inlineArgs.ci"
			, "line": 47
			, "left": {
				"": "mb"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.inlineArgs.ci"
				, "line": 47
				, "value": "mb"
			}
			, "right": {
				"": "mc"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.inlineArgs.ci"
				, "line": 47
				, "value": "mc"
			}
		}, {
			"": "mc + ma"
			, "kind": "+"
			, "type": "int32"
			, "file": "extras/Tests/lang.inlineArgs.ci"
			, "line": 47
			, "left": {
				"": "mc"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.inlineArgs.ci"
				, "line": 47
				, "value": "mc"
			}
			, "right": {
				"": "ma"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.inlineArgs.ci"
				, "line": 47
				, "value": "ma"
			}
		}]
	}
}, {
	"": "min3Val"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "min3Val"
	, "type": "int32"
	, "file": "extras/Tests/lang.inlineArgs.ci"
	, "line": 49
	, "size": 4
	, "offs": 96
	, "static": false
	, "const": false
	, "ast": {
		"": "min(3, 2, 6)"
		, "kind": "()"
		, "type": "int32"
		, "file": "extras/Tests/lang.inlineArgs.ci"
		, "line": 49
		, "args": [{
		}, {
			"": "3"
			, "kind": ".literal"
			, "type": "int32"
			, "file": "extras/Tests/lang.inlineArgs.ci"
			, "line": 49
			, "value": "3"
		}, {
			"": "2"
			, "kind": ".literal"
			, "type": "int32"
			, "file": "extras/Tests/lang.inlineArgs.ci"
			, "line": 49
			, "value": "2"
		}, {
			"": "6"
			, "kind": ".literal"
			, "type": "int32"
			, "file": "extras/Tests/lang.inlineArgs.ci"
			, "line": 49
			, "value": "6"
		}]
	}
}, {
	"": "min3Var"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "min3Var"
	, "type": "int32"
	, "file": "extras/Tests/lang.inlineArgs.ci"
	, "line": 50
	, "size": 4
	, "offs": 100
	, "static": false
	, "const": false
	, "ast": {
		"": "min(ma, mb, mc)"
		, "kind": "()"
		, "type": "int32"
		, "file": "extras/Tests/lang.inlineArgs.ci"
		, "line": 50
		, "args": [{
		}, {
			"": "ma"
			, "kind": ".variable"
			, "type": "int32"
			, "file": "extras/Tests/lang.inlineArgs.ci"
			, "line": 50
			, "value": "ma"
		}, {
			"": "mb"
			, "kind": ".variable"
			, "type": "int32"
			, "file": "extras/Tests/lang.inlineArgs.ci"
			, "line": 50
			, "value": "mb"
		}, {
			"": "mc"
			, "kind": ".variable"
			, "type": "int32"
			, "file": "extras/Tests/lang.inlineArgs.ci"
			, "line": 50
			, "value": "mc"
		}]
	}
}, {
	"": "min3Xpr"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "min3Xpr"
	, "type": "int32"
	, "file": "extras/Tests/lang.inlineArgs.ci"
	, "line": 51
	, "size": 4
	, "offs": 104
	, "static": false
	, "const": false
	, "ast": {
		"": "min(ma + mb, mb + mc, mc + ma)"
		, "kind": "()"
		, "type": "int32"
		, "file": "extras/Tests/lang.inlineArgs.ci"
		, "line": 51
		, "args": [{
		}, {
			"": "ma + mb"
			, "kind": "+"
			, "type": "int32"
			, "file": "extras/Tests/lang.inlineArgs.ci"
			, "line": 51
			, "left": {
				"": "ma"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.inlineArgs.ci"
				, "line": 51
				, "value": "ma"
			}
			, "right": {
				"": "mb"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.inlineArgs.ci"
				, "line": 51
				, "value": "mb"
			}
		}, {
			"": "mb + mc"
			, "kind": "+"
			, "type": "int32"
			, "file": "extras/Tests/lang.inlineArgs.ci"
			, "line": 51
			, "left": {
				"": "mb"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.inlineArgs.ci"
				, "line": 51
				, "value": "mb"
			}
			, "right": {
				"": "mc"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.inlineArgs.ci"
				, "line": 51
				, "value": "mc"
			}
		}, {
			"": "mc + ma"
			, "kind": "+"
			, "type": "int32"
			, "file": "extras/Tests/lang.inlineArgs.ci"
			, "line": 51
			, "left": {
				"": "mc"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.inlineArgs.ci"
				, "line": 51
				, "value": "mc"
			}
			, "right": {
				"": "ma"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.inlineArgs.ci"
				, "line": 51
				, "value": "ma"
			}
		}]
	}
}, {
	"": "overload"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "overload"
	, "type": "typename"
	, "file": "extras/Tests/test.inlineOverload.ci"
	, "line": 3
	, "size": 0
	, "offs": 0
	, "static": false
	, "const": false
	, "ast": {
		"": "1"
		, "kind": ".literal"
		, "type": "int32"
		, "file": "extras/Tests/test.inlineOverload.ci"
		, "line": 3
		, "value": "1"
	}
}, {
	"": "overload(): int32"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "overload"
	, "type": "function"
	, "file": "extras/Tests/test.inlineOverload.ci"
	, "line": 4
	, "args": [{
		"": ".result"
		, "kind": "inline"
		, "cast": "i32"
		, "name": ".result"
		, "type": "int32"
		, "file": "extras/Tests/test.inlineOverload.ci"
		, "line": 4
		, "size": 4
		, "offs": 0
		, "static": false
		, "const": false
	}]
	, "size": 0
	, "offs": 0
	, "static": false
	, "const": false
	, "ast": {
		"": "2"
		, "kind": ".literal"
		, "type": "int32"
		, "file": "extras/Tests/test.inlineOverload.ci"
		, "line": 4
		, "value": "2"
	}
}, {
	"": "overload(a: int32): int32"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "overload"
	, "type": "function"
	, "file": "extras/Tests/test.inlineOverload.ci"
	, "line": 5
	, "args": [{
		"": ".result"
		, "kind": "inline"
		, "cast": "i32"
		, "name": ".result"
		, "type": "int32"
		, "file": "extras/Tests/test.inlineOverload.ci"
		, "line": 5
		, "size": 4
		, "offs": 0
		, "static": false
		, "const": false
	}, {
		"": "a"
		, "kind": "inline"
		, "cast": "i32"
		, "name": "a"
		, "type": "int32"
		, "file": "extras/Tests/test.inlineOverload.ci"
		, "line": 5
		, "size": 4
		, "offs": 0
		, "static": false
		, "const": false
	}]
	, "size": 0
	, "offs": 0
	, "static": false
	, "const": false
	, "ast": {
		"": "3"
		, "kind": ".literal"
		, "type": "int32"
		, "file": "extras/Tests/test.inlineOverload.ci"
		, "line": 5
		, "value": "3"
	}
}, {
	"": "overload(a: float32): int32"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "overload"
	, "type": "function"
	, "file": "extras/Tests/test.inlineOverload.ci"
	, "line": 6
	, "args": [{
		"": ".result"
		, "kind": "inline"
		, "cast": "i32"
		, "name": ".result"
		, "type": "int32"
		, "file": "extras/Tests/test.inlineOverload.ci"
		, "line": 6
		, "size": 4
		, "offs": 0
		, "static": false
		, "const": false
	}, {
		"": "a"
		, "kind": "inline"
		, "cast": "f32"
		, "name": "a"
		, "type": "float32"
		, "file": "extras/Tests/test.inlineOverload.ci"
		, "line": 6
		, "size": 4
		, "offs": 4
		, "static": false
		, "const": false
	}]
	, "size": 0
	, "offs": 0
	, "static": false
	, "const": false
	, "ast": {
		"": "4"
		, "kind": ".literal"
		, "type": "int32"
		, "file": "extras/Tests/test.inlineOverload.ci"
		, "line": 6
		, "value": "4"
	}
}, {
	"": "overload(a: int32, b: int32): int32"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "overload"
	, "type": "function"
	, "file": "extras/Tests/test.inlineOverload.ci"
	, "line": 7
	, "args": [{
		"": ".result"
		, "kind": "inline"
		, "cast": "i32"
		, "name": ".result"
		, "type": "int32"
		, "file": "extras/Tests/test.inlineOverload.ci"
		, "line": 7
		, "size": 4
		, "offs": 0
		, "static": false
		, "const": false
	}, {
		"": "a"
		, "kind": "inline"
		, "cast": "i32"
		, "name": "a"
		, "type": "int32"
		, "file": "extras/Tests/test.inlineOverload.ci"
		, "line": 7
		, "size": 4
		, "offs": 0
		, "static": false
		, "const": false
	}, {
		"": "b"
		, "kind": "inline"
		, "cast": "i32"
		, "name": "b"
		, "type": "int32"
		, "file": "extras/Tests/test.inlineOverload.ci"
		, "line": 7
		, "size": 4
		, "offs": 0
		, "static": false
		, "const": false
	}]
	, "size": 0
	, "offs": 0
	, "static": false
	, "const": false
	, "ast": {
		"": "5"
		, "kind": ".literal"
		, "type": "int32"
		, "file": "extras/Tests/test.inlineOverload.ci"
		, "line": 7
		, "value": "5"
	}
}, {
	"": "overload1"
	, "kind": "variable"
	, "cast": "f32"
	, "name": "overload1"
	, "type": "float32"
	, "file": "extras/Tests/test.inlineOverload.ci"
	, "line": 9
	, "size": 4
	, "offs": 108
	, "static": false
	, "const": false
	, "ast": {
		"": "overload"
		, "kind": ".variable"
		, "type": "int32"
		, "file": "extras/Tests/test.inlineOverload.ci"
		, "line": 9
		, "value": "overload"
	}
}, {
	"": "overload2"
	, "kind": "variable"
	, "cast": "f32"
	, "name": "overload2"
	, "type": "float32"
	, "file": "extras/Tests/test.inlineOverload.ci"
	, "line": 10
	, "size": 4
	, "offs": 112
	, "static": false
	, "const": false
	, "ast": {
		"": "overload()"
		, "kind": "()"
		, "type": "int32"
		, "file": "extras/Tests/test.inlineOverload.ci"
		, "line": 10
		, "args": [{
		}]
	}
}, {
	"": "overload3"
	, "kind": "variable"
	, "cast": "f32"
	, "name": "overload3"
	, "type": "float32"
	, "file": "extras/Tests/test.inlineOverload.ci"
	, "line": 11
	, "size": 4
	, "offs": 116
	, "static": false
	, "const": false
	, "ast": {
		"": "overload(0)"
		, "kind": "()"
		, "type": "int32"
		, "file": "extras/Tests/test.inlineOverload.ci"
		, "line": 11
		, "args": [{
			"": "0"
			, "kind": ".literal"
			, "type": "int32"
			, "file": "extras/Tests/test.inlineOverload.ci"
			, "line": 11
			, "value": "0"
		}]
	}
}, {
	"": "overload4"
	, "kind": "variable"
	, "cast": "f32"
	, "name": "overload4"
	, "type": "float32"
	, "file": "extras/Tests/test.inlineOverload.ci"
	, "line": 12
	, "size": 4
	, "offs": 120
	, "static": false
	, "const": false
	, "ast": {
		"": "overload(0.000000)"
		, "kind": "()"
		, "type": "int32"
		, "file": "extras/Tests/test.inlineOverload.ci"
		, "line": 12
		, "args": [{
			"": "0.000000"
			, "kind": ".literal"
			, "type": "float64"
			, "file": "extras/Tests/test.inlineOverload.ci"
			, "line": 12
			, "value": "0.000000"
		}]
	}
}, {
	"": "overload5"
	, "kind": "variable"
	, "cast": "f32"
	, "name": "overload5"
	, "type": "float32"
	, "file": "extras/Tests/test.inlineOverload.ci"
	, "line": 13
	, "size": 4
	, "offs": 124
	, "static": false
	, "const": false
	, "ast": {
		"": "overload(0, 0)"
		, "kind": "()"
		, "type": "int32"
		, "file": "extras/Tests/test.inlineOverload.ci"
		, "line": 13
		, "args": [{
		}, {
			"": "0"
			, "kind": ".literal"
			, "type": "int32"
			, "file": "extras/Tests/test.inlineOverload.ci"
			, "line": 13
			, "value": "0"
		}, {
			"": "0"
			, "kind": ".literal"
			, "type": "int32"
			, "file": "extras/Tests/test.inlineOverload.ci"
			, "line": 13
			, "value": "0"
		}]
	}
}, {
	"": "emitldz32"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "emitldz32"
	, "type": "int32"
	, "file": "extras/Tests/lang.inlineEmit.ci"
	, "line": 3
	, "size": 4
	, "offs": 128
	, "static": false
	, "const": false
	, "ast": {
		"": "emit(load.z32)"
		, "kind": "()"
		, "type": "emit"
		, "file": "extras/Tests/lang.inlineEmit.ci"
		, "line": 3
		, "args": [{
			"": "load.z32"
			, "kind": "."
			, "type": "int32"
			, "file": "extras/Tests/lang.inlineEmit.ci"
			, "line": 3
			, "left": {
				"": "load"
				, "kind": ".variable"
				, "type": "void"
				, "file": "extras/Tests/lang.inlineEmit.ci"
				, "line": 3
				, "value": "load"
			}
			, "right": {
				"": "z32"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.inlineEmit.ci"
				, "line": 3
				, "value": "z32"
			}
		}]
	}
}, {
	"": "emitldz64"
	, "kind": "variable"
	, "cast": "i64"
	, "name": "emitldz64"
	, "type": "int64"
	, "file": "extras/Tests/lang.inlineEmit.ci"
	, "line": 4
	, "size": 8
	, "offs": 136
	, "static": false
	, "const": false
	, "ast": {
		"": "emit(load.z64)"
		, "kind": "()"
		, "type": "emit"
		, "file": "extras/Tests/lang.inlineEmit.ci"
		, "line": 4
		, "args": [{
			"": "load.z64"
			, "kind": "."
			, "type": "int64"
			, "file": "extras/Tests/lang.inlineEmit.ci"
			, "line": 4
			, "left": {
				"": "load"
				, "kind": ".variable"
				, "type": "void"
				, "file": "extras/Tests/lang.inlineEmit.ci"
				, "line": 4
				, "value": "load"
			}
			, "right": {
				"": "z64"
				, "kind": ".variable"
				, "type": "int64"
				, "file": "extras/Tests/lang.inlineEmit.ci"
				, "line": 4
				, "value": "z64"
			}
		}]
	}
}, {
	"": "emitA"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "emitA"
	, "type": "int32"
	, "file": "extras/Tests/lang.inlineEmit.ci"
	, "line": 6
	, "size": 4
	, "offs": 140
	, "static": false
	, "const": false
	, "ast": {
		"": "42"
		, "kind": ".literal"
		, "type": "int32"
		, "file": "extras/Tests/lang.inlineEmit.ci"
		, "line": 6
		, "value": "42"
	}
}, {
	"": "emitB"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "emitB"
	, "type": "int32"
	, "file": "extras/Tests/lang.inlineEmit.ci"
	, "line": 7
	, "size": 4
	, "offs": 144
	, "static": false
	, "const": false
	, "ast": {
		"": "96"
		, "kind": ".literal"
		, "type": "int32"
		, "file": "extras/Tests/lang.inlineEmit.ci"
		, "line": 7
		, "value": "96"
	}
}, {
	"": "emitAddI32"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "emitAddI32"
	, "type": "int32"
	, "file": "extras/Tests/lang.inlineEmit.ci"
	, "line": 9
	, "size": 4
	, "offs": 148
	, "static": false
	, "const": false
	, "ast": {
		"": "emit(int32(emitA), int32(emitB), add.i32)"
		, "kind": "()"
		, "type": "emit"
		, "file": "extras/Tests/lang.inlineEmit.ci"
		, "line": 9
		, "args": [{
		}, {
			"": "int32(emitA)"
			, "kind": "()"
			, "type": "int32"
			, "file": "extras/Tests/lang.inlineEmit.ci"
			, "line": 9
			, "args": [{
				"": "emitA"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.inlineEmit.ci"
				, "line": 9
				, "value": "emitA"
			}]
		}, {
			"": "int32(emitB)"
			, "kind": "()"
			, "type": "int32"
			, "file": "extras/Tests/lang.inlineEmit.ci"
			, "line": 9
			, "args": [{
				"": "emitB"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.inlineEmit.ci"
				, "line": 9
				, "value": "emitB"
			}]
		}, {
			"": "add.i32"
			, "kind": "."
			, "type": "int32"
			, "file": "extras/Tests/lang.inlineEmit.ci"
			, "line": 9
			, "left": {
				"": "add"
				, "kind": ".variable"
				, "type": "void"
				, "file": "extras/Tests/lang.inlineEmit.ci"
				, "line": 9
				, "value": "add"
			}
			, "right": {
				"": "i32"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.inlineEmit.ci"
				, "line": 9
				, "value": "i32"
			}
		}]
	}
}, {
	"": "emitDivI32"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "emitDivI32"
	, "type": "int32"
	, "file": "extras/Tests/lang.inlineEmit.ci"
	, "line": 10
	, "size": 4
	, "offs": 152
	, "static": false
	, "const": false
	, "ast": {
		"": "emit(int32(10), int32(5), div.i32)"
		, "kind": "()"
		, "type": "emit"
		, "file": "extras/Tests/lang.inlineEmit.ci"
		, "line": 10
		, "args": [{
		}, {
			"": "int32(10)"
			, "kind": "()"
			, "type": "int32"
			, "file": "extras/Tests/lang.inlineEmit.ci"
			, "line": 10
			, "args": [{
				"": "10"
				, "kind": ".literal"
				, "type": "int32"
				, "file": "extras/Tests/lang.inlineEmit.ci"
				, "line": 10
				, "value": "10"
			}]
		}, {
			"": "int32(5)"
			, "kind": "()"
			, "type": "int32"
			, "file": "extras/Tests/lang.inlineEmit.ci"
			, "line": 10
			, "args": [{
				"": "5"
				, "kind": ".literal"
				, "type": "int32"
				, "file": "extras/Tests/lang.inlineEmit.ci"
				, "line": 10
				, "value": "5"
			}]
		}, {
			"": "div.i32"
			, "kind": "."
			, "type": "int32"
			, "file": "extras/Tests/lang.inlineEmit.ci"
			, "line": 10
			, "left": {
				"": "div"
				, "kind": ".variable"
				, "type": "void"
				, "file": "extras/Tests/lang.inlineEmit.ci"
				, "line": 10
				, "value": "div"
			}
			, "right": {
				"": "i32"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.inlineEmit.ci"
				, "line": 10
				, "value": "i32"
			}
		}]
	}
}, {
	"": "emitNfcF32"
	, "kind": "variable"
	, "cast": "f32"
	, "name": "emitNfcF32"
	, "type": "float32"
	, "file": "extras/Tests/lang.inlineEmit.ci"
	, "line": 11
	, "size": 4
	, "offs": 156
	, "static": false
	, "const": false
	, "ast": {
		"": "emit(float32(3.140000 / (2)), float32.sin)"
		, "kind": "()"
		, "type": "emit"
		, "file": "extras/Tests/lang.inlineEmit.ci"
		, "line": 11
		, "args": [{
		}, {
			"": "float32(3.140000 / (2))"
			, "kind": "()"
			, "type": "float32"
			, "file": "extras/Tests/lang.inlineEmit.ci"
			, "line": 11
			, "args": [{
				"": "3.140000 / (2)"
				, "kind": "/"
				, "type": "float64"
				, "file": "extras/Tests/lang.inlineEmit.ci"
				, "line": 11
				, "left": {
					"": "3.140000"
					, "kind": ".literal"
					, "type": "float64"
					, "file": "extras/Tests/lang.inlineEmit.ci"
					, "line": 11
					, "value": "3.140000"
				}
				, "right": {
					"": "(2)"
					, "kind": "()"
					, "type": "float64"
					, "file": "extras/Tests/lang.inlineEmit.ci"
					, "line": 11
					, "args": [{
						"": "2"
						, "kind": ".literal"
						, "type": "int32"
						, "file": "extras/Tests/lang.inlineEmit.ci"
						, "line": 11
						, "value": "2"
					}]
				}
			}]
		}, {
			"": "float32.sin"
			, "kind": "."
			, "type": "float32"
			, "file": "extras/Tests/lang.inlineEmit.ci"
			, "line": 11
			, "left": {
				"": "float32"
				, "kind": ".variable"
				, "type": "typename"
				, "file": "extras/Tests/lang.inlineEmit.ci"
				, "line": 11
				, "value": "float32"
			}
			, "right": {
				"": "sin"
				, "kind": ".variable"
				, "type": "float32"
				, "file": "extras/Tests/lang.inlineEmit.ci"
				, "line": 11
				, "value": "sin"
			}
		}]
	}
}, {
	"": "sizeofVoid"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "sizeofVoid"
	, "type": "int32"
	, "file": "extras/Tests/lang.reflection.ci"
	, "line": 3
	, "size": 4
	, "offs": 160
	, "static": false
	, "const": false
	, "ast": {
		"": "sizeof(void)"
		, "kind": "()"
		, "type": "int32"
		, "file": "extras/Tests/lang.reflection.ci"
		, "line": 3
		, "args": [{
			"": "void"
			, "kind": ".variable"
			, "type": "typename"
			, "file": "extras/Tests/lang.reflection.ci"
			, "line": 3
			, "value": "void"
		}]
	}
}, {
	"": "sizeofBool"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "sizeofBool"
	, "type": "int32"
	, "file": "extras/Tests/lang.reflection.ci"
	, "line": 4
	, "size": 4
	, "offs": 164
	, "static": false
	, "const": false
	, "ast": {
		"": "sizeof(bool)"
		, "kind": "()"
		, "type": "int32"
		, "file": "extras/Tests/lang.reflection.ci"
		, "line": 4
		, "args": [{
			"": "bool"
			, "kind": ".variable"
			, "type": "typename"
			, "file": "extras/Tests/lang.reflection.ci"
			, "line": 4
			, "value": "bool"
		}]
	}
}, {
	"": "sizeofChar"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "sizeofChar"
	, "type": "int32"
	, "file": "extras/Tests/lang.reflection.ci"
	, "line": 5
	, "size": 4
	, "offs": 168
	, "static": false
	, "const": false
	, "ast": {
		"": "sizeof(char)"
		, "kind": "()"
		, "type": "int32"
		, "file": "extras/Tests/lang.reflection.ci"
		, "line": 5
		, "args": [{
			"": "char"
			, "kind": ".variable"
			, "type": "typename"
			, "file": "extras/Tests/lang.reflection.ci"
			, "line": 5
			, "value": "char"
		}]
	}
}, {
	"": "sizeofInt8"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "sizeofInt8"
	, "type": "int32"
	, "file": "extras/Tests/lang.reflection.ci"
	, "line": 6
	, "size": 4
	, "offs": 172
	, "static": false
	, "const": false
	, "ast": {
		"": "sizeof(int8)"
		, "kind": "()"
		, "type": "int32"
		, "file": "extras/Tests/lang.reflection.ci"
		, "line": 6
		, "args": [{
			"": "int8"
			, "kind": ".variable"
			, "type": "typename"
			, "file": "extras/Tests/lang.reflection.ci"
			, "line": 6
			, "value": "int8"
		}]
	}
}, {
	"": "sizeofInt16"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "sizeofInt16"
	, "type": "int32"
	, "file": "extras/Tests/lang.reflection.ci"
	, "line": 7
	, "size": 4
	, "offs": 176
	, "static": false
	, "const": false
	, "ast": {
		"": "sizeof(int16)"
		, "kind": "()"
		, "type": "int32"
		, "file": "extras/Tests/lang.reflection.ci"
		, "line": 7
		, "args": [{
			"": "int16"
			, "kind": ".variable"
			, "type": "typename"
			, "file": "extras/Tests/lang.reflection.ci"
			, "line": 7
			, "value": "int16"
		}]
	}
}, {
	"": "sizeofInt32"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "sizeofInt32"
	, "type": "int32"
	, "file": "extras/Tests/lang.reflection.ci"
	, "line": 8
	, "size": 4
	, "offs": 180
	, "static": false
	, "const": false
	, "ast": {
		"": "sizeof(int32)"
		, "kind": "()"
		, "type": "int32"
		, "file": "extras/Tests/lang.reflection.ci"
		, "line": 8
		, "args": [{
			"": "int32"
			, "kind": ".variable"
			, "type": "typename"
			, "file": "extras/Tests/lang.reflection.ci"
			, "line": 8
			, "value": "int32"
		}]
	}
}, {
	"": "sizeofInt64"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "sizeofInt64"
	, "type": "int32"
	, "file": "extras/Tests/lang.reflection.ci"
	, "line": 9
	, "size": 4
	, "offs": 184
	, "static": false
	, "const": false
	, "ast": {
		"": "sizeof(int64)"
		, "kind": "()"
		, "type": "int32"
		, "file": "extras/Tests/lang.reflection.ci"
		, "line": 9
		, "args": [{
			"": "int64"
			, "kind": ".variable"
			, "type": "typename"
			, "file": "extras/Tests/lang.reflection.ci"
			, "line": 9
			, "value": "int64"
		}]
	}
}, {
	"": "sizeofUint8"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "sizeofUint8"
	, "type": "int32"
	, "file": "extras/Tests/lang.reflection.ci"
	, "line": 10
	, "size": 4
	, "offs": 188
	, "static": false
	, "const": false
	, "ast": {
		"": "sizeof(uint8)"
		, "kind": "()"
		, "type": "int32"
		, "file": "extras/Tests/lang.reflection.ci"
		, "line": 10
		, "args": [{
			"": "uint8"
			, "kind": ".variable"
			, "type": "typename"
			, "file": "extras/Tests/lang.reflection.ci"
			, "line": 10
			, "value": "uint8"
		}]
	}
}, {
	"": "sizeofUint16"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "sizeofUint16"
	, "type": "int32"
	, "file": "extras/Tests/lang.reflection.ci"
	, "line": 11
	, "size": 4
	, "offs": 192
	, "static": false
	, "const": false
	, "ast": {
		"": "sizeof(uint16)"
		, "kind": "()"
		, "type": "int32"
		, "file": "extras/Tests/lang.reflection.ci"
		, "line": 11
		, "args": [{
			"": "uint16"
			, "kind": ".variable"
			, "type": "typename"
			, "file": "extras/Tests/lang.reflection.ci"
			, "line": 11
			, "value": "uint16"
		}]
	}
}, {
	"": "sizeofUint32"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "sizeofUint32"
	, "type": "int32"
	, "file": "extras/Tests/lang.reflection.ci"
	, "line": 12
	, "size": 4
	, "offs": 196
	, "static": false
	, "const": false
	, "ast": {
		"": "sizeof(uint32)"
		, "kind": "()"
		, "type": "int32"
		, "file": "extras/Tests/lang.reflection.ci"
		, "line": 12
		, "args": [{
			"": "uint32"
			, "kind": ".variable"
			, "type": "typename"
			, "file": "extras/Tests/lang.reflection.ci"
			, "line": 12
			, "value": "uint32"
		}]
	}
}, {
	"": "sizeofUint64"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "sizeofUint64"
	, "type": "int32"
	, "file": "extras/Tests/lang.reflection.ci"
	, "line": 13
	, "size": 4
	, "offs": 200
	, "static": false
	, "const": false
	, "ast": {
		"": "sizeof(uint64)"
		, "kind": "()"
		, "type": "int32"
		, "file": "extras/Tests/lang.reflection.ci"
		, "line": 13
		, "args": [{
			"": "uint64"
			, "kind": ".variable"
			, "type": "typename"
			, "file": "extras/Tests/lang.reflection.ci"
			, "line": 13
			, "value": "uint64"
		}]
	}
}, {
	"": "sizeofFloat32"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "sizeofFloat32"
	, "type": "int32"
	, "file": "extras/Tests/lang.reflection.ci"
	, "line": 14
	, "size": 4
	, "offs": 204
	, "static": false
	, "const": false
	, "ast": {
		"": "sizeof(float32)"
		, "kind": "()"
		, "type": "int32"
		, "file": "extras/Tests/lang.reflection.ci"
		, "line": 14
		, "args": [{
			"": "float32"
			, "kind": ".variable"
			, "type": "typename"
			, "file": "extras/Tests/lang.reflection.ci"
			, "line": 14
			, "value": "float32"
		}]
	}
}, {
	"": "sizeofFloat64"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "sizeofFloat64"
	, "type": "int32"
	, "file": "extras/Tests/lang.reflection.ci"
	, "line": 15
	, "size": 4
	, "offs": 208
	, "static": false
	, "const": false
	, "ast": {
		"": "sizeof(float64)"
		, "kind": "()"
		, "type": "int32"
		, "file": "extras/Tests/lang.reflection.ci"
		, "line": 15
		, "args": [{
			"": "float64"
			, "kind": ".variable"
			, "type": "typename"
			, "file": "extras/Tests/lang.reflection.ci"
			, "line": 15
			, "value": "float64"
		}]
	}
}, {
	"": "sizeofPointer"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "sizeofPointer"
	, "type": "int32"
	, "file": "extras/Tests/lang.reflection.ci"
	, "line": 16
	, "size": 4
	, "offs": 212
	, "static": false
	, "const": false
	, "ast": {
		"": "sizeof(pointer)"
		, "kind": "()"
		, "type": "int32"
		, "file": "extras/Tests/lang.reflection.ci"
		, "line": 16
		, "args": [{
			"": "pointer"
			, "kind": ".variable"
			, "type": "typename"
			, "file": "extras/Tests/lang.reflection.ci"
			, "line": 16
			, "value": "pointer"
		}]
	}
}, {
	"": "sizeofVariant"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "sizeofVariant"
	, "type": "int32"
	, "file": "extras/Tests/lang.reflection.ci"
	, "line": 17
	, "size": 4
	, "offs": 216
	, "static": false
	, "const": false
	, "ast": {
		"": "sizeof(variant)"
		, "kind": "()"
		, "type": "int32"
		, "file": "extras/Tests/lang.reflection.ci"
		, "line": 17
		, "args": [{
			"": "variant"
			, "kind": ".variable"
			, "type": "typename"
			, "file": "extras/Tests/lang.reflection.ci"
			, "line": 17
			, "value": "variant"
		}]
	}
}, {
	"": "sizeofTypename"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "sizeofTypename"
	, "type": "int32"
	, "file": "extras/Tests/lang.reflection.ci"
	, "line": 18
	, "size": 4
	, "offs": 220
	, "static": false
	, "const": false
	, "ast": {
		"": "sizeof(typename)"
		, "kind": "()"
		, "type": "int32"
		, "file": "extras/Tests/lang.reflection.ci"
		, "line": 18
		, "args": [{
			"": "typename"
			, "kind": ".variable"
			, "type": "typename"
			, "file": "extras/Tests/lang.reflection.ci"
			, "line": 18
			, "value": "typename"
		}]
	}
}, {
	"": "sizeofFunction"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "sizeofFunction"
	, "type": "int32"
	, "file": "extras/Tests/lang.reflection.ci"
	, "line": 19
	, "size": 4
	, "offs": 224
	, "static": false
	, "const": false
	, "ast": {
		"": "sizeof(function)"
		, "kind": "()"
		, "type": "int32"
		, "file": "extras/Tests/lang.reflection.ci"
		, "line": 19
		, "args": [{
			"": "function"
			, "kind": ".variable"
			, "type": "typename"
			, "file": "extras/Tests/lang.reflection.ci"
			, "line": 19
			, "value": "function"
		}]
	}
}, {
	"": "sizeofObject"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "sizeofObject"
	, "type": "int32"
	, "file": "extras/Tests/lang.reflection.ci"
	, "line": 20
	, "size": 4
	, "offs": 228
	, "static": false
	, "const": false
	, "ast": {
		"": "sizeof(object)"
		, "kind": "()"
		, "type": "int32"
		, "file": "extras/Tests/lang.reflection.ci"
		, "line": 20
		, "args": [{
			"": "object"
			, "kind": ".variable"
			, "type": "typename"
			, "file": "extras/Tests/lang.reflection.ci"
			, "line": 20
			, "value": "object"
		}]
	}
}, {
	"": "RecordSizeof"
	, "kind": "typename"
	, "cast": "ref"
	, "name": "RecordSizeof"
	, "type": "object"
	, "file": "extras/Tests/lang.reflection.ci"
	, "line": 22
	, "size": 12
	, "offs": 77808
	, "static": true
	, "const": true
}, {
	"": "RecordSizeof.x"
	, "kind": "variable"
	, "cast": "i64"
	, "name": "x"
	, "owner": "RecordSizeof"
	, "type": "int64"
	, "file": "extras/Tests/lang.reflection.ci"
	, "line": 23
	, "size": 8
	, "offs": 4
	, "static": false
	, "const": false
	, "ast": {
		"": "0"
		, "kind": ".literal"
		, "type": "int32"
		, "file": "extras/Tests/lang.reflection.ci"
		, "line": 23
		, "value": "0"
	}
}, {
	"": "RecordSizeofExt"
	, "kind": "typename"
	, "cast": "ref"
	, "name": "RecordSizeofExt"
	, "type": "RecordSizeof"
	, "file": "extras/Tests/lang.reflection.ci"
	, "line": 26
	, "size": 16
	, "offs": 78080
	, "static": true
	, "const": true
}, {
	"": "RecordSizeofExt.y"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "y"
	, "owner": "RecordSizeofExt"
	, "type": "int32"
	, "file": "extras/Tests/lang.reflection.ci"
	, "line": 27
	, "size": 4
	, "offs": 12
	, "static": false
	, "const": false
	, "ast": {
		"": "0"
		, "kind": ".literal"
		, "type": "int32"
		, "file": "extras/Tests/lang.reflection.ci"
		, "line": 27
		, "value": "0"
	}
}, {
	"": "typeofRecord"
	, "kind": "variable"
	, "cast": "ref"
	, "name": "typeofRecord"
	, "type": "typename"
	, "file": "extras/Tests/lang.reflection.ci"
	, "line": 30
	, "size": 4
	, "offs": 232
	, "static": false
	, "const": false
	, "ast": {
		"": "RecordSizeofExt"
		, "kind": ".variable"
		, "type": "RecordSizeof"
		, "file": "extras/Tests/lang.reflection.ci"
		, "line": 30
		, "value": "RecordSizeofExt"
	}
}, {
	"": "nameOfRecord"
	, "kind": "variable"
	, "cast": "ref"
	, "name": "nameOfRecord"
	, "type": "char[*]"
	, "file": "extras/Tests/lang.reflection.ci"
	, "line": 31
	, "size": 4
	, "offs": 236
	, "static": false
	, "const": false
	, "ast": {
		"": "typename.name(typeofRecord)"
		, "kind": "()"
		, "type": "typename"
		, "file": "extras/Tests/lang.reflection.ci"
		, "line": 31
		, "args": [{
			"": "typeofRecord"
			, "kind": ".variable"
			, "type": "typename"
			, "file": "extras/Tests/lang.reflection.ci"
			, "line": 31
			, "value": "typeofRecord"
		}]
	}
}, {
	"": "offsetOfRecord"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "offsetOfRecord"
	, "type": "int32"
	, "file": "extras/Tests/lang.reflection.ci"
	, "line": 32
	, "size": 4
	, "offs": 240
	, "static": false
	, "const": false
	, "ast": {
		"": "typeofRecord.offset"
		, "kind": "."
		, "type": "int32"
		, "file": "extras/Tests/lang.reflection.ci"
		, "line": 32
		, "left": {
			"": "typeofRecord"
			, "kind": ".variable"
			, "type": "typename"
			, "file": "extras/Tests/lang.reflection.ci"
			, "line": 32
			, "value": "typeofRecord"
		}
		, "right": {
			"": "offset"
			, "kind": ".variable"
			, "type": "int32"
			, "file": "extras/Tests/lang.reflection.ci"
			, "line": 32
			, "value": "offset"
		}
	}
}, {
	"": "sizeOfRecord"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "sizeOfRecord"
	, "type": "int32"
	, "file": "extras/Tests/lang.reflection.ci"
	, "line": 33
	, "size": 4
	, "offs": 244
	, "static": false
	, "const": false
	, "ast": {
		"": "sizeof(typeofRecord)"
		, "kind": "()"
		, "type": "int32"
		, "file": "extras/Tests/lang.reflection.ci"
		, "line": 33
		, "args": [{
			"": "typeofRecord"
			, "kind": ".variable"
			, "type": "typename"
			, "file": "extras/Tests/lang.reflection.ci"
			, "line": 33
			, "value": "typeofRecord"
		}]
	}
}, {
	"": "fileOfRecord"
	, "kind": "variable"
	, "cast": "ref"
	, "name": "fileOfRecord"
	, "type": "char[*]"
	, "file": "extras/Tests/lang.reflection.ci"
	, "line": 34
	, "size": 4
	, "offs": 248
	, "static": false
	, "const": false
	, "ast": {
		"": "typename.file(typeofRecord)"
		, "kind": "()"
		, "type": "typename"
		, "file": "extras/Tests/lang.reflection.ci"
		, "line": 34
		, "args": [{
			"": "typeofRecord"
			, "kind": ".variable"
			, "type": "typename"
			, "file": "extras/Tests/lang.reflection.ci"
			, "line": 34
			, "value": "typeofRecord"
		}]
	}
}, {
	"": "lineOfRecord"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "lineOfRecord"
	, "type": "int32"
	, "file": "extras/Tests/lang.reflection.ci"
	, "line": 35
	, "size": 4
	, "offs": 252
	, "static": false
	, "const": false
	, "ast": {
		"": "typename.line(typeofRecord)"
		, "kind": "()"
		, "type": "int32"
		, "file": "extras/Tests/lang.reflection.ci"
		, "line": 35
		, "args": [{
			"": "typeofRecord"
			, "kind": ".variable"
			, "type": "typename"
			, "file": "extras/Tests/lang.reflection.ci"
			, "line": 35
			, "value": "typeofRecord"
		}]
	}
}, {
	"": "typeofBase"
	, "kind": "variable"
	, "cast": "ref"
	, "name": "typeofBase"
	, "type": "typename"
	, "file": "extras/Tests/lang.reflection.ci"
	, "line": 37
	, "size": 4
	, "offs": 256
	, "static": false
	, "const": false
	, "ast": {
		"": "typename.base(typeofRecord)"
		, "kind": "()"
		, "type": "typename"
		, "file": "extras/Tests/lang.reflection.ci"
		, "line": 37
		, "args": [{
			"": "typeofRecord"
			, "kind": ".variable"
			, "type": "typename"
			, "file": "extras/Tests/lang.reflection.ci"
			, "line": 37
			, "value": "typeofRecord"
		}]
	}
}, {
	"": "nameOfBase"
	, "kind": "variable"
	, "cast": "ref"
	, "name": "nameOfBase"
	, "type": "char[*]"
	, "file": "extras/Tests/lang.reflection.ci"
	, "line": 38
	, "size": 4
	, "offs": 260
	, "static": false
	, "const": false
	, "ast": {
		"": "typename.name(typeofBase)"
		, "kind": "()"
		, "type": "typename"
		, "file": "extras/Tests/lang.reflection.ci"
		, "line": 38
		, "args": [{
			"": "typeofBase"
			, "kind": ".variable"
			, "type": "typename"
			, "file": "extras/Tests/lang.reflection.ci"
			, "line": 38
			, "value": "typeofBase"
		}]
	}
}, {
	"": "offsetOfBase"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "offsetOfBase"
	, "type": "int32"
	, "file": "extras/Tests/lang.reflection.ci"
	, "line": 39
	, "size": 4
	, "offs": 264
	, "static": false
	, "const": false
	, "ast": {
		"": "typeofBase.offset"
		, "kind": "."
		, "type": "int32"
		, "file": "extras/Tests/lang.reflection.ci"
		, "line": 39
		, "left": {
			"": "typeofBase"
			, "kind": ".variable"
			, "type": "typename"
			, "file": "extras/Tests/lang.reflection.ci"
			, "line": 39
			, "value": "typeofBase"
		}
		, "right": {
			"": "offset"
			, "kind": ".variable"
			, "type": "int32"
			, "file": "extras/Tests/lang.reflection.ci"
			, "line": 39
			, "value": "offset"
		}
	}
}, {
	"": "sizeOfBase"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "sizeOfBase"
	, "type": "int32"
	, "file": "extras/Tests/lang.reflection.ci"
	, "line": 40
	, "size": 4
	, "offs": 268
	, "static": false
	, "const": false
	, "ast": {
		"": "sizeof(typeofBase)"
		, "kind": "()"
		, "type": "int32"
		, "file": "extras/Tests/lang.reflection.ci"
		, "line": 40
		, "args": [{
			"": "typeofBase"
			, "kind": ".variable"
			, "type": "typename"
			, "file": "extras/Tests/lang.reflection.ci"
			, "line": 40
			, "value": "typeofBase"
		}]
	}
}, {
	"": "fileOfBase"
	, "kind": "variable"
	, "cast": "ref"
	, "name": "fileOfBase"
	, "type": "char[*]"
	, "file": "extras/Tests/lang.reflection.ci"
	, "line": 41
	, "size": 4
	, "offs": 272
	, "static": false
	, "const": false
	, "ast": {
		"": "typename.file(typeofBase)"
		, "kind": "()"
		, "type": "typename"
		, "file": "extras/Tests/lang.reflection.ci"
		, "line": 41
		, "args": [{
			"": "typeofBase"
			, "kind": ".variable"
			, "type": "typename"
			, "file": "extras/Tests/lang.reflection.ci"
			, "line": 41
			, "value": "typeofBase"
		}]
	}
}, {
	"": "lineOfBase"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "lineOfBase"
	, "type": "int32"
	, "file": "extras/Tests/lang.reflection.ci"
	, "line": 42
	, "size": 4
	, "offs": 276
	, "static": false
	, "const": false
	, "ast": {
		"": "typename.line(typeofBase)"
		, "kind": "()"
		, "type": "int32"
		, "file": "extras/Tests/lang.reflection.ci"
		, "line": 42
		, "args": [{
			"": "typeofBase"
			, "kind": ".variable"
			, "type": "typename"
			, "file": "extras/Tests/lang.reflection.ci"
			, "line": 42
			, "value": "typeofBase"
		}]
	}
}, {
	"": "typeofBase1"
	, "kind": "variable"
	, "cast": "ref"
	, "name": "typeofBase1"
	, "type": "typename"
	, "file": "extras/Tests/lang.reflection.ci"
	, "line": 44
	, "size": 4
	, "offs": 280
	, "static": false
	, "const": false
	, "ast": {
		"": "typename.base(typeofBase)"
		, "kind": "()"
		, "type": "typename"
		, "file": "extras/Tests/lang.reflection.ci"
		, "line": 44
		, "args": [{
			"": "typeofBase"
			, "kind": ".variable"
			, "type": "typename"
			, "file": "extras/Tests/lang.reflection.ci"
			, "line": 44
			, "value": "typeofBase"
		}]
	}
}, {
	"": "offsetOfBase1"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "offsetOfBase1"
	, "type": "int32"
	, "file": "extras/Tests/lang.reflection.ci"
	, "line": 45
	, "size": 4
	, "offs": 284
	, "static": false
	, "const": false
	, "ast": {
		"": "typeofBase1.offset"
		, "kind": "."
		, "type": "int32"
		, "file": "extras/Tests/lang.reflection.ci"
		, "line": 45
		, "left": {
			"": "typeofBase1"
			, "kind": ".variable"
			, "type": "typename"
			, "file": "extras/Tests/lang.reflection.ci"
			, "line": 45
			, "value": "typeofBase1"
		}
		, "right": {
			"": "offset"
			, "kind": ".variable"
			, "type": "int32"
			, "file": "extras/Tests/lang.reflection.ci"
			, "line": 45
			, "value": "offset"
		}
	}
}, {
	"": "sizeOfBase1"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "sizeOfBase1"
	, "type": "int32"
	, "file": "extras/Tests/lang.reflection.ci"
	, "line": 46
	, "size": 4
	, "offs": 288
	, "static": false
	, "const": false
	, "ast": {
		"": "typeofBase1.size"
		, "kind": "."
		, "type": "int32"
		, "file": "extras/Tests/lang.reflection.ci"
		, "line": 46
		, "left": {
			"": "typeofBase1"
			, "kind": ".variable"
			, "type": "typename"
			, "file": "extras/Tests/lang.reflection.ci"
			, "line": 46
			, "value": "typeofBase1"
		}
		, "right": {
			"": "size"
			, "kind": ".variable"
			, "type": "int32"
			, "file": "extras/Tests/lang.reflection.ci"
			, "line": 46
			, "value": "size"
		}
	}
}, {
	"": "typeofBase2"
	, "kind": "variable"
	, "cast": "ref"
	, "name": "typeofBase2"
	, "type": "typename"
	, "file": "extras/Tests/lang.reflection.ci"
	, "line": 48
	, "size": 4
	, "offs": 292
	, "static": false
	, "const": false
	, "ast": {
		"": "typename.base(typeofBase1)"
		, "kind": "()"
		, "type": "typename"
		, "file": "extras/Tests/lang.reflection.ci"
		, "line": 48
		, "args": [{
			"": "typeofBase1"
			, "kind": ".variable"
			, "type": "typename"
			, "file": "extras/Tests/lang.reflection.ci"
			, "line": 48
			, "value": "typeofBase1"
		}]
	}
}, {
	"": "offsetOfBase2"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "offsetOfBase2"
	, "type": "int32"
	, "file": "extras/Tests/lang.reflection.ci"
	, "line": 49
	, "size": 4
	, "offs": 296
	, "static": false
	, "const": false
	, "ast": {
		"": "typeofBase2.offset"
		, "kind": "."
		, "type": "int32"
		, "file": "extras/Tests/lang.reflection.ci"
		, "line": 49
		, "left": {
			"": "typeofBase2"
			, "kind": ".variable"
			, "type": "typename"
			, "file": "extras/Tests/lang.reflection.ci"
			, "line": 49
			, "value": "typeofBase2"
		}
		, "right": {
			"": "offset"
			, "kind": ".variable"
			, "type": "int32"
			, "file": "extras/Tests/lang.reflection.ci"
			, "line": 49
			, "value": "offset"
		}
	}
}, {
	"": "sizeOfBase2"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "sizeOfBase2"
	, "type": "int32"
	, "file": "extras/Tests/lang.reflection.ci"
	, "line": 50
	, "size": 4
	, "offs": 300
	, "static": false
	, "const": false
	, "ast": {
		"": "typeofBase2.size"
		, "kind": "."
		, "type": "int32"
		, "file": "extras/Tests/lang.reflection.ci"
		, "line": 50
		, "left": {
			"": "typeofBase2"
			, "kind": ".variable"
			, "type": "typename"
			, "file": "extras/Tests/lang.reflection.ci"
			, "line": 50
			, "value": "typeofBase2"
		}
		, "right": {
			"": "size"
			, "kind": ".variable"
			, "type": "int32"
			, "file": "extras/Tests/lang.reflection.ci"
			, "line": 50
			, "value": "size"
		}
	}
}, {
	"": "empty(): void"
	, "kind": "function"
	, "cast": "inline"
	, "name": "empty"
	, "type": "function"
	, "file": "extras/Tests/lang.function.ci"
	, "line": 5
	, "args": [{
		"": ".result"
		, "kind": "variable"
		, "cast": "void"
		, "name": ".result"
		, "type": "void"
		, "file": "extras/Tests/lang.function.ci"
		, "line": 5
		, "size": 0
		, "offs": 0
		, "static": false
		, "const": false
	}]
	, "size": 1
	, "offs": 149536
	, "static": true
	, "const": true
	, "ast": {
		"": "{...}"
		, "kind": "{}"
		, "type": "void"
		, "stmt": [{
		}]
	}
	, "asm": [{
		"instruction": "ret"
		, "name": "ret"
		, "code": "0x03"
		, "offs": 149536
		, "size": 1
	}]
}, {
	"": "funAdd(x: int32, y: int32): int32"
	, "kind": "function"
	, "cast": "inline"
	, "name": "funAdd"
	, "type": "function"
	, "file": "extras/Tests/lang.function.ci"
	, "line": 8
	, "args": [{
		"": ".result"
		, "kind": "variable"
		, "cast": "i32"
		, "name": ".result"
		, "type": "int32"
		, "file": "extras/Tests/lang.function.ci"
		, "line": 8
		, "size": 4
		, "offs": 4
		, "static": false
		, "const": false
	}, {
		"": "x"
		, "kind": "variable"
		, "cast": "i32"
		, "name": "x"
		, "type": "int32"
		, "file": "extras/Tests/lang.function.ci"
		, "line": 8
		, "size": 4
		, "offs": 8
		, "static": false
		, "const": false
	}, {
		"": "y"
		, "kind": "variable"
		, "cast": "i32"
		, "name": "y"
		, "type": "int32"
		, "file": "extras/Tests/lang.function.ci"
		, "line": 8
		, "size": 4
		, "offs": 12
		, "static": false
		, "const": false
	}]
	, "size": 8
	, "offs": 149537
	, "static": true
	, "const": true
	, "ast": {
		"": "{...}"
		, "kind": "{}"
		, "type": "void"
		, "file": "extras/Tests/lang.function.ci"
		, "line": 8
		, "stmt": [{
			"": "return .result := x + y;"
			, "kind": "return"
			, "type": "void"
			, "file": "extras/Tests/lang.function.ci"
			, "line": 9
			, "stmt": {
				"": ".result := x + y"
				, "kind": ":="
				, "type": "int32"
				, "left": {
					"": ".result"
					, "kind": ".variable"
					, "type": "int32"
					, "value": ".result"
				}
				, "right": {
					"": "x + y"
					, "kind": "+"
					, "type": "int32"
					, "file": "extras/Tests/lang.function.ci"
					, "line": 9
					, "left": {
						"": "x"
						, "kind": ".variable"
						, "type": "int32"
						, "file": "extras/Tests/lang.function.ci"
						, "line": 9
						, "value": "x"
					}
					, "right": {
						"": "y"
						, "kind": ".variable"
						, "type": "int32"
						, "file": "extras/Tests/lang.function.ci"
						, "line": 9
						, "value": "y"
					}
				}
			}
		}]
	}
	, "asm": [{
		"instruction": "dup.x1 sp(2)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 149537
		, "size": 2
	}, {
		"instruction": "dup.x1 sp(2)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 149539
		, "size": 2
	}, {
		"instruction": "add.i32"
		, "name": "add.i32"
		, "code": "0x51"
		, "offs": 149541
		, "size": 1
	}, {
		"instruction": "set.x1 sp(4)"
		, "name": "set.x1"
		, "code": "0x15"
		, "offs": 149542
		, "size": 2
	}, {
		"instruction": "ret"
		, "name": "ret"
		, "code": "0x03"
		, "offs": 149544
		, "size": 1
	}]
}, {
	"": "funAddResult"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "funAddResult"
	, "type": "int32"
	, "file": "extras/Tests/lang.function.ci"
	, "line": 13
	, "size": 4
	, "offs": 304
	, "static": false
	, "const": false
	, "ast": {
		"": "funAdd(2, 7)"
		, "kind": "()"
		, "type": "int32"
		, "file": "extras/Tests/lang.function.ci"
		, "line": 13
		, "args": [{
		}, {
			"": "2"
			, "kind": ".literal"
			, "type": "int32"
			, "file": "extras/Tests/lang.function.ci"
			, "line": 13
			, "value": "2"
		}, {
			"": "7"
			, "kind": ".literal"
			, "type": "int32"
			, "file": "extras/Tests/lang.function.ci"
			, "line": 13
			, "value": "7"
		}]
	}
}, {
	"": "funAddRef(x: int32, y: int32): int32"
	, "kind": "variable"
	, "cast": "ref"
	, "name": "funAddRef"
	, "type": "function"
	, "file": "extras/Tests/lang.function.ci"
	, "line": 16
	, "args": [{
		"": ".result"
		, "kind": "variable"
		, "cast": "i32"
		, "name": ".result"
		, "type": "int32"
		, "file": "extras/Tests/lang.function.ci"
		, "line": 16
		, "size": 4
		, "offs": 4
		, "static": false
		, "const": false
	}, {
		"": "x"
		, "kind": "variable"
		, "cast": "i32"
		, "name": "x"
		, "type": "int32"
		, "file": "extras/Tests/lang.function.ci"
		, "line": 16
		, "size": 4
		, "offs": 8
		, "static": false
		, "const": false
	}, {
		"": "y"
		, "kind": "variable"
		, "cast": "i32"
		, "name": "y"
		, "type": "int32"
		, "file": "extras/Tests/lang.function.ci"
		, "line": 16
		, "size": 4
		, "offs": 12
		, "static": false
		, "const": false
	}]
	, "size": 4
	, "offs": 308
	, "static": false
	, "const": false
	, "ast": {
		"": "funAdd"
		, "kind": ".variable"
		, "type": "function"
		, "file": "extras/Tests/lang.function.ci"
		, "line": 16
		, "value": "funAdd"
	}
}, {
	"": "funAddRefResult"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "funAddRefResult"
	, "type": "int32"
	, "file": "extras/Tests/lang.function.ci"
	, "line": 19
	, "size": 4
	, "offs": 312
	, "static": false
	, "const": false
	, "ast": {
		"": "funAddRef(2, 8)"
		, "kind": "()"
		, "type": "int32"
		, "file": "extras/Tests/lang.function.ci"
		, "line": 19
		, "args": [{
		}, {
			"": "2"
			, "kind": ".literal"
			, "type": "int32"
			, "file": "extras/Tests/lang.function.ci"
			, "line": 19
			, "value": "2"
		}, {
			"": "8"
			, "kind": ".literal"
			, "type": "int32"
			, "file": "extras/Tests/lang.function.ci"
			, "line": 19
			, "value": "8"
		}]
	}
}, {
	"": "funMul(x: int32, y: int32): int32"
	, "kind": "variable"
	, "cast": "ref"
	, "name": "funMul"
	, "type": "function"
	, "file": "extras/Tests/lang.function.ci"
	, "line": 22
	, "args": [{
		"": ".result"
		, "kind": "variable"
		, "cast": "i32"
		, "name": ".result"
		, "type": "int32"
		, "file": "extras/Tests/lang.function.ci"
		, "line": 22
		, "size": 4
		, "offs": 4
		, "static": false
		, "const": false
	}, {
		"": "x"
		, "kind": "variable"
		, "cast": "i32"
		, "name": "x"
		, "type": "int32"
		, "file": "extras/Tests/lang.function.ci"
		, "line": 22
		, "size": 4
		, "offs": 8
		, "static": false
		, "const": false
	}, {
		"": "y"
		, "kind": "variable"
		, "cast": "i32"
		, "name": "y"
		, "type": "int32"
		, "file": "extras/Tests/lang.function.ci"
		, "line": 22
		, "size": 4
		, "offs": 12
		, "static": false
		, "const": false
	}]
	, "size": 4
	, "offs": 316
	, "static": false
	, "const": false
	, "ast": {
		"": "funMul"
		, "kind": ".variable"
		, "type": "function"
		, "value": "funMul"
	}
}, {
	"": "funMulResult"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "funMulResult"
	, "type": "int32"
	, "file": "extras/Tests/lang.function.ci"
	, "line": 25
	, "size": 4
	, "offs": 320
	, "static": false
	, "const": false
	, "ast": {
		"": "funMul(2, 6)"
		, "kind": "()"
		, "type": "int32"
		, "file": "extras/Tests/lang.function.ci"
		, "line": 25
		, "args": [{
		}, {
			"": "2"
			, "kind": ".literal"
			, "type": "int32"
			, "file": "extras/Tests/lang.function.ci"
			, "line": 25
			, "value": "2"
		}, {
			"": "6"
			, "kind": ".literal"
			, "type": "int32"
			, "file": "extras/Tests/lang.function.ci"
			, "line": 25
			, "value": "6"
		}]
	}
}, {
	"": "funMulRef(x: int32, y: int32): int32"
	, "kind": "variable"
	, "cast": "ref"
	, "name": "funMulRef"
	, "type": "function"
	, "file": "extras/Tests/lang.function.ci"
	, "line": 28
	, "args": [{
		"": ".result"
		, "kind": "variable"
		, "cast": "i32"
		, "name": ".result"
		, "type": "int32"
		, "file": "extras/Tests/lang.function.ci"
		, "line": 28
		, "size": 4
		, "offs": 4
		, "static": false
		, "const": false
	}, {
		"": "x"
		, "kind": "variable"
		, "cast": "i32"
		, "name": "x"
		, "type": "int32"
		, "file": "extras/Tests/lang.function.ci"
		, "line": 28
		, "size": 4
		, "offs": 8
		, "static": false
		, "const": false
	}, {
		"": "y"
		, "kind": "variable"
		, "cast": "i32"
		, "name": "y"
		, "type": "int32"
		, "file": "extras/Tests/lang.function.ci"
		, "line": 28
		, "size": 4
		, "offs": 12
		, "static": false
		, "const": false
	}]
	, "size": 4
	, "offs": 324
	, "static": false
	, "const": false
	, "ast": {
		"": "funMul"
		, "kind": ".variable"
		, "type": "function"
		, "file": "extras/Tests/lang.function.ci"
		, "line": 28
		, "value": "funMul"
	}
}, {
	"": "funMulRefResult"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "funMulRefResult"
	, "type": "int32"
	, "file": "extras/Tests/lang.function.ci"
	, "line": 31
	, "size": 4
	, "offs": 328
	, "static": false
	, "const": false
	, "ast": {
		"": "funMulRef(2, 7)"
		, "kind": "()"
		, "type": "int32"
		, "file": "extras/Tests/lang.function.ci"
		, "line": 31
		, "args": [{
		}, {
			"": "2"
			, "kind": ".literal"
			, "type": "int32"
			, "file": "extras/Tests/lang.function.ci"
			, "line": 31
			, "value": "2"
		}, {
			"": "7"
			, "kind": ".literal"
			, "type": "int32"
			, "file": "extras/Tests/lang.function.ci"
			, "line": 31
			, "value": "7"
		}]
	}
}, {
	"": "funMul(x: int32, y: int32): int32"
	, "kind": "function"
	, "cast": "inline"
	, "name": "funMul"
	, "type": "function"
	, "file": "extras/Tests/lang.function.ci"
	, "line": 34
	, "args": [{
		"": ".result"
		, "kind": "variable"
		, "cast": "i32"
		, "name": ".result"
		, "type": "int32"
		, "file": "extras/Tests/lang.function.ci"
		, "line": 34
		, "size": 4
		, "offs": 4
		, "static": false
		, "const": false
	}, {
		"": "x"
		, "kind": "variable"
		, "cast": "i32"
		, "name": "x"
		, "type": "int32"
		, "file": "extras/Tests/lang.function.ci"
		, "line": 34
		, "size": 4
		, "offs": 8
		, "static": false
		, "const": false
	}, {
		"": "y"
		, "kind": "variable"
		, "cast": "i32"
		, "name": "y"
		, "type": "int32"
		, "file": "extras/Tests/lang.function.ci"
		, "line": 34
		, "size": 4
		, "offs": 12
		, "static": false
		, "const": false
	}]
	, "size": 8
	, "offs": 149545
	, "static": true
	, "const": true
	, "ast": {
		"": "{...}"
		, "kind": "{}"
		, "type": "void"
		, "file": "extras/Tests/lang.function.ci"
		, "line": 34
		, "stmt": [{
			"": "return .result := x * y;"
			, "kind": "return"
			, "type": "void"
			, "file": "extras/Tests/lang.function.ci"
			, "line": 35
			, "stmt": {
				"": ".result := x * y"
				, "kind": ":="
				, "type": "int32"
				, "left": {
					"": ".result"
					, "kind": ".variable"
					, "type": "int32"
					, "value": ".result"
				}
				, "right": {
					"": "x * y"
					, "kind": "*"
					, "type": "int32"
					, "file": "extras/Tests/lang.function.ci"
					, "line": 35
					, "left": {
						"": "x"
						, "kind": ".variable"
						, "type": "int32"
						, "file": "extras/Tests/lang.function.ci"
						, "line": 35
						, "value": "x"
					}
					, "right": {
						"": "y"
						, "kind": ".variable"
						, "type": "int32"
						, "file": "extras/Tests/lang.function.ci"
						, "line": 35
						, "value": "y"
					}
				}
			}
		}]
	}
	, "asm": [{
		"instruction": "dup.x1 sp(2)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 149545
		, "size": 2
	}, {
		"instruction": "dup.x1 sp(2)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 149547
		, "size": 2
	}, {
		"instruction": "mul.i32"
		, "name": "mul.i32"
		, "code": "0x53"
		, "offs": 149549
		, "size": 1
	}, {
		"instruction": "set.x1 sp(4)"
		, "name": "set.x1"
		, "code": "0x15"
		, "offs": 149550
		, "size": 2
	}, {
		"instruction": "ret"
		, "name": "ret"
		, "code": "0x03"
		, "offs": 149552
		, "size": 1
	}]
}, {
	"": "fib(n: uint32): uint32"
	, "kind": "function"
	, "cast": "inline"
	, "name": "fib"
	, "type": "function"
	, "file": "extras/Tests/lang.function.ci"
	, "line": 39
	, "args": [{
		"": ".result"
		, "kind": "variable"
		, "cast": "u32"
		, "name": ".result"
		, "type": "uint32"
		, "file": "extras/Tests/lang.function.ci"
		, "line": 39
		, "size": 4
		, "offs": 4
		, "static": false
		, "const": false
	}, {
		"": "n"
		, "kind": "variable"
		, "cast": "u32"
		, "name": "n"
		, "type": "uint32"
		, "file": "extras/Tests/lang.function.ci"
		, "line": 39
		, "size": 4
		, "offs": 8
		, "static": false
		, "const": false
	}]
	, "size": 86
	, "offs": 149553
	, "static": true
	, "const": true
	, "ast": {
		"": "{...}"
		, "kind": "{}"
		, "type": "void"
		, "file": "extras/Tests/lang.function.ci"
		, "line": 39
		, "stmt": [{
			"": "if (n <= (1))"
			, "kind": "if"
			, "type": "void"
			, "file": "extras/Tests/lang.function.ci"
			, "line": 40
			, "test": {
				"": "n <= (1)"
				, "kind": "<="
				, "type": "bool"
				, "file": "extras/Tests/lang.function.ci"
				, "line": 40
				, "left": {
					"": "n"
					, "kind": ".variable"
					, "type": "uint32"
					, "file": "extras/Tests/lang.function.ci"
					, "line": 40
					, "value": "n"
				}
				, "right": {
					"": "(1)"
					, "kind": "()"
					, "type": "uint32"
					, "file": "extras/Tests/lang.function.ci"
					, "line": 40
					, "args": [{
						"": "1"
						, "kind": ".literal"
						, "type": "int32"
						, "file": "extras/Tests/lang.function.ci"
						, "line": 40
						, "value": "1"
					}]
				}
			}
			, "then": {
				"": "{...}"
				, "kind": "{}"
				, "type": "void"
				, "file": "extras/Tests/lang.function.ci"
				, "line": 40
				, "stmt": [{
					"": "if (n <= (0))"
					, "kind": "if"
					, "type": "void"
					, "file": "extras/Tests/lang.function.ci"
					, "line": 41
					, "test": {
						"": "n <= (0)"
						, "kind": "<="
						, "type": "bool"
						, "file": "extras/Tests/lang.function.ci"
						, "line": 41
						, "left": {
							"": "n"
							, "kind": ".variable"
							, "type": "uint32"
							, "file": "extras/Tests/lang.function.ci"
							, "line": 41
							, "value": "n"
						}
						, "right": {
							"": "(0)"
							, "kind": "()"
							, "type": "uint32"
							, "file": "extras/Tests/lang.function.ci"
							, "line": 41
							, "args": [{
								"": "0"
								, "kind": ".literal"
								, "type": "int32"
								, "file": "extras/Tests/lang.function.ci"
								, "line": 41
								, "value": "0"
							}]
						}
					}
					, "then": {
						"": "{...}"
						, "kind": "{}"
						, "type": "void"
						, "file": "extras/Tests/lang.function.ci"
						, "line": 41
						, "stmt": [{
							"": "return .result := (0);"
							, "kind": "return"
							, "type": "void"
							, "file": "extras/Tests/lang.function.ci"
							, "line": 42
							, "stmt": {
								"": ".result := (0)"
								, "kind": ":="
								, "type": "uint32"
								, "left": {
									"": ".result"
									, "kind": ".variable"
									, "type": "uint32"
									, "value": ".result"
								}
								, "right": {
									"": "(0)"
									, "kind": "()"
									, "type": "uint32"
									, "file": "extras/Tests/lang.function.ci"
									, "line": 42
									, "args": [{
										"": "0"
										, "kind": ".literal"
										, "type": "int32"
										, "file": "extras/Tests/lang.function.ci"
										, "line": 42
										, "value": "0"
									}]
								}
							}
						}]
					}
				}, {
					"": "return .result := (1);"
					, "kind": "return"
					, "type": "void"
					, "file": "extras/Tests/lang.function.ci"
					, "line": 44
					, "stmt": {
						"": ".result := (1)"
						, "kind": ":="
						, "type": "uint32"
						, "left": {
							"": ".result"
							, "kind": ".variable"
							, "type": "uint32"
							, "value": ".result"
						}
						, "right": {
							"": "(1)"
							, "kind": "()"
							, "type": "uint32"
							, "file": "extras/Tests/lang.function.ci"
							, "line": 44
							, "args": [{
								"": "1"
								, "kind": ".literal"
								, "type": "int32"
								, "file": "extras/Tests/lang.function.ci"
								, "line": 44
								, "value": "1"
							}]
						}
					}
				}]
			}
		}, {
			"": "return .result := fib(n - (1)) + fib(n - (2));"
			, "kind": "return"
			, "type": "void"
			, "file": "extras/Tests/lang.function.ci"
			, "line": 46
			, "stmt": {
				"": ".result := fib(n - (1)) + fib(n - (2))"
				, "kind": ":="
				, "type": "uint32"
				, "left": {
					"": ".result"
					, "kind": ".variable"
					, "type": "uint32"
					, "value": ".result"
				}
				, "right": {
					"": "fib(n - (1)) + fib(n - (2))"
					, "kind": "+"
					, "type": "uint32"
					, "file": "extras/Tests/lang.function.ci"
					, "line": 46
					, "left": {
						"": "fib(n - (1))"
						, "kind": "()"
						, "type": "uint32"
						, "file": "extras/Tests/lang.function.ci"
						, "line": 46
						, "args": [{
							"": "n - (1)"
							, "kind": "-"
							, "type": "uint32"
							, "file": "extras/Tests/lang.function.ci"
							, "line": 46
							, "left": {
								"": "n"
								, "kind": ".variable"
								, "type": "uint32"
								, "file": "extras/Tests/lang.function.ci"
								, "line": 46
								, "value": "n"
							}
							, "right": {
								"": "(1)"
								, "kind": "()"
								, "type": "uint32"
								, "file": "extras/Tests/lang.function.ci"
								, "line": 46
								, "args": [{
									"": "1"
									, "kind": ".literal"
									, "type": "int32"
									, "file": "extras/Tests/lang.function.ci"
									, "line": 46
									, "value": "1"
								}]
							}
						}]
					}
					, "right": {
						"": "fib(n - (2))"
						, "kind": "()"
						, "type": "uint32"
						, "file": "extras/Tests/lang.function.ci"
						, "line": 46
						, "args": [{
							"": "n - (2)"
							, "kind": "-"
							, "type": "uint32"
							, "file": "extras/Tests/lang.function.ci"
							, "line": 46
							, "left": {
								"": "n"
								, "kind": ".variable"
								, "type": "uint32"
								, "file": "extras/Tests/lang.function.ci"
								, "line": 46
								, "value": "n"
							}
							, "right": {
								"": "(2)"
								, "kind": "()"
								, "type": "uint32"
								, "file": "extras/Tests/lang.function.ci"
								, "line": 46
								, "args": [{
									"": "2"
									, "kind": ".literal"
									, "type": "int32"
									, "file": "extras/Tests/lang.function.ci"
									, "line": 46
									, "value": "2"
								}]
							}
						}]
					}
				}
			}
		}]
	}
	, "asm": [{
		"instruction": "dup.x1 sp(1)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 149553
		, "size": 2
	}, {
		"instruction": "load.c32 1"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 149555
		, "size": 5
	}, {
		"instruction": "cgt.u32"
		, "name": "cgt.u32"
		, "code": "0x39"
		, "offs": 149560
		, "size": 1
	}, {
		"instruction": "jnz +32"
		, "name": "jnz"
		, "code": "0x05"
		, "offs": 149561
		, "size": 4
	}, {
		"instruction": "dup.x1 sp(1)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 149565
		, "size": 2
	}, {
		"instruction": "load.c32 0"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 149567
		, "size": 5
	}, {
		"instruction": "cgt.u32"
		, "name": "cgt.u32"
		, "code": "0x39"
		, "offs": 149572
		, "size": 1
	}, {
		"instruction": "jnz +12"
		, "name": "jnz"
		, "code": "0x05"
		, "offs": 149573
		, "size": 4
	}, {
		"instruction": "load.c32 0"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 149577
		, "size": 5
	}, {
		"instruction": "set.x1 sp(3)"
		, "name": "set.x1"
		, "code": "0x15"
		, "offs": 149582
		, "size": 2
	}, {
		"instruction": "ret"
		, "name": "ret"
		, "code": "0x03"
		, "offs": 149584
		, "size": 1
	}, {
		"instruction": "load.c32 1"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 149585
		, "size": 5
	}, {
		"instruction": "set.x1 sp(3)"
		, "name": "set.x1"
		, "code": "0x15"
		, "offs": 149590
		, "size": 2
	}, {
		"instruction": "ret"
		, "name": "ret"
		, "code": "0x03"
		, "offs": 149592
		, "size": 1
	}, {
		"instruction": "load.c32 0"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 149593
		, "size": 5
	}, {
		"instruction": "dup.x1 sp(2)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 149598
		, "size": 2
	}, {
		"instruction": "inc.i32(-1)"
		, "name": "inc.i32"
		, "code": "0x0b"
		, "offs": 149600
		, "size": 4
	}, {
		"instruction": "load.ref .024831"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 149604
		, "size": 5
	}, {
		"instruction": "call"
		, "name": "call"
		, "code": "0x02"
		, "offs": 149609
		, "size": 1
	}, {
		"instruction": "inc.sp(-4)"
		, "name": "inc.sp"
		, "code": "0x10"
		, "offs": 149610
		, "size": 4
	}, {
		"instruction": "load.c32 0"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 149614
		, "size": 5
	}, {
		"instruction": "dup.x1 sp(3)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 149619
		, "size": 2
	}, {
		"instruction": "inc.i32(-2)"
		, "name": "inc.i32"
		, "code": "0x0b"
		, "offs": 149621
		, "size": 4
	}, {
		"instruction": "load.ref .024831"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 149625
		, "size": 5
	}, {
		"instruction": "call"
		, "name": "call"
		, "code": "0x02"
		, "offs": 149630
		, "size": 1
	}, {
		"instruction": "inc.sp(-4)"
		, "name": "inc.sp"
		, "code": "0x10"
		, "offs": 149631
		, "size": 4
	}, {
		"instruction": "add.i32"
		, "name": "add.i32"
		, "code": "0x51"
		, "offs": 149635
		, "size": 1
	}, {
		"instruction": "set.x1 sp(3)"
		, "name": "set.x1"
		, "code": "0x15"
		, "offs": 149636
		, "size": 2
	}, {
		"instruction": "ret"
		, "name": "ret"
		, "code": "0x03"
		, "offs": 149638
		, "size": 1
	}]
}, {
	"": "fibonacci_13"
	, "kind": "variable"
	, "cast": "u32"
	, "name": "fibonacci_13"
	, "type": "uint32"
	, "file": "extras/Tests/lang.function.ci"
	, "line": 50
	, "size": 4
	, "offs": 332
	, "static": false
	, "const": false
	, "ast": {
		"": "fib(13)"
		, "kind": "()"
		, "type": "uint32"
		, "file": "extras/Tests/lang.function.ci"
		, "line": 50
		, "args": [{
			"": "13"
			, "kind": ".literal"
			, "type": "int32"
			, "file": "extras/Tests/lang.function.ci"
			, "line": 50
			, "value": "13"
		}]
	}
}, {
	"": "a"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "a"
	, "type": "typename"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 3
	, "size": 0
	, "offs": 0
	, "static": false
	, "const": false
	, "ast": {
		"": "96.300000"
		, "kind": ".literal"
		, "type": "float64"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 3
		, "value": "96.300000"
	}
}, {
	"": "b"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "b"
	, "type": "typename"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 4
	, "size": 0
	, "offs": 0
	, "static": false
	, "const": false
	, "ast": {
		"": "42.140000"
		, "kind": ".literal"
		, "type": "float64"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 4
		, "value": "42.140000"
	}
}, {
	"": "shift"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "shift"
	, "type": "int32"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 5
	, "size": 4
	, "offs": 336
	, "static": false
	, "const": false
	, "ast": {
		"": "2"
		, "kind": ".literal"
		, "type": "int32"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 5
		, "value": "2"
	}
}, {
	"": "boolA"
	, "kind": "variable"
	, "cast": "bool"
	, "name": "boolA"
	, "type": "bool"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 7
	, "size": 1
	, "offs": 340
	, "static": false
	, "const": false
	, "ast": {
		"": "true"
		, "kind": ".variable"
		, "type": "bool"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 7
		, "value": "true"
	}
}, {
	"": "boolB"
	, "kind": "variable"
	, "cast": "bool"
	, "name": "boolB"
	, "type": "bool"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 8
	, "size": 1
	, "offs": 344
	, "static": false
	, "const": false
	, "ast": {
		"": "!false"
		, "kind": "!"
		, "type": "bool"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 8
		, "right": {
			"": "false"
			, "kind": ".variable"
			, "type": "bool"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 8
			, "value": "false"
		}
	}
}, {
	"": "boolAnd"
	, "kind": "variable"
	, "cast": "bool"
	, "name": "boolAnd"
	, "type": "bool"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 17
	, "size": 1
	, "offs": 348
	, "static": false
	, "const": false
	, "ast": {
		"": "boolA & boolB"
		, "kind": "&"
		, "type": "bool"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 17
		, "left": {
			"": "boolA"
			, "kind": ".variable"
			, "type": "bool"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 17
			, "value": "boolA"
		}
		, "right": {
			"": "boolB"
			, "kind": ".variable"
			, "type": "bool"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 17
			, "value": "boolB"
		}
	}
}, {
	"": "boolIor"
	, "kind": "variable"
	, "cast": "bool"
	, "name": "boolIor"
	, "type": "bool"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 18
	, "size": 1
	, "offs": 352
	, "static": false
	, "const": false
	, "ast": {
		"": "boolA | boolB"
		, "kind": "|"
		, "type": "bool"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 18
		, "left": {
			"": "boolA"
			, "kind": ".variable"
			, "type": "bool"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 18
			, "value": "boolA"
		}
		, "right": {
			"": "boolB"
			, "kind": ".variable"
			, "type": "bool"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 18
			, "value": "boolB"
		}
	}
}, {
	"": "boolXor"
	, "kind": "variable"
	, "cast": "bool"
	, "name": "boolXor"
	, "type": "bool"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 19
	, "size": 1
	, "offs": 356
	, "static": false
	, "const": false
	, "ast": {
		"": "boolA ^ boolB"
		, "kind": "^"
		, "type": "bool"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 19
		, "left": {
			"": "boolA"
			, "kind": ".variable"
			, "type": "bool"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 19
			, "value": "boolA"
		}
		, "right": {
			"": "boolB"
			, "kind": ".variable"
			, "type": "bool"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 19
			, "value": "boolB"
		}
	}
}, {
	"": "boolNot"
	, "kind": "variable"
	, "cast": "bool"
	, "name": "boolNot"
	, "type": "bool"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 22
	, "size": 1
	, "offs": 360
	, "static": false
	, "const": false
	, "ast": {
		"": "!boolB"
		, "kind": "!"
		, "type": "bool"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 22
		, "right": {
			"": "boolB"
			, "kind": ".variable"
			, "type": "bool"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 22
			, "value": "boolB"
		}
	}
}, {
	"": "boolCeq"
	, "kind": "variable"
	, "cast": "bool"
	, "name": "boolCeq"
	, "type": "bool"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 23
	, "size": 1
	, "offs": 364
	, "static": false
	, "const": false
	, "ast": {
		"": "boolA == boolB"
		, "kind": "=="
		, "type": "bool"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 23
		, "left": {
			"": "boolA"
			, "kind": ".variable"
			, "type": "bool"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 23
			, "value": "boolA"
		}
		, "right": {
			"": "boolB"
			, "kind": ".variable"
			, "type": "bool"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 23
			, "value": "boolB"
		}
	}
}, {
	"": "boolCne"
	, "kind": "variable"
	, "cast": "bool"
	, "name": "boolCne"
	, "type": "bool"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 24
	, "size": 1
	, "offs": 368
	, "static": false
	, "const": false
	, "ast": {
		"": "boolA != boolB"
		, "kind": "!="
		, "type": "bool"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 24
		, "left": {
			"": "boolA"
			, "kind": ".variable"
			, "type": "bool"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 24
			, "value": "boolA"
		}
		, "right": {
			"": "boolB"
			, "kind": ".variable"
			, "type": "bool"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 24
			, "value": "boolB"
		}
	}
}, {
	"": "boolClt"
	, "kind": "variable"
	, "cast": "bool"
	, "name": "boolClt"
	, "type": "bool"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 25
	, "size": 1
	, "offs": 372
	, "static": false
	, "const": false
	, "ast": {
		"": "boolA < boolB"
		, "kind": "<"
		, "type": "bool"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 25
		, "left": {
			"": "boolA"
			, "kind": ".variable"
			, "type": "bool"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 25
			, "value": "boolA"
		}
		, "right": {
			"": "boolB"
			, "kind": ".variable"
			, "type": "bool"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 25
			, "value": "boolB"
		}
	}
}, {
	"": "boolCle"
	, "kind": "variable"
	, "cast": "bool"
	, "name": "boolCle"
	, "type": "bool"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 26
	, "size": 1
	, "offs": 376
	, "static": false
	, "const": false
	, "ast": {
		"": "boolA <= boolB"
		, "kind": "<="
		, "type": "bool"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 26
		, "left": {
			"": "boolA"
			, "kind": ".variable"
			, "type": "bool"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 26
			, "value": "boolA"
		}
		, "right": {
			"": "boolB"
			, "kind": ".variable"
			, "type": "bool"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 26
			, "value": "boolB"
		}
	}
}, {
	"": "boolCgt"
	, "kind": "variable"
	, "cast": "bool"
	, "name": "boolCgt"
	, "type": "bool"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 27
	, "size": 1
	, "offs": 380
	, "static": false
	, "const": false
	, "ast": {
		"": "boolA > boolB"
		, "kind": ">"
		, "type": "bool"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 27
		, "left": {
			"": "boolA"
			, "kind": ".variable"
			, "type": "bool"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 27
			, "value": "boolA"
		}
		, "right": {
			"": "boolB"
			, "kind": ".variable"
			, "type": "bool"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 27
			, "value": "boolB"
		}
	}
}, {
	"": "boolCge"
	, "kind": "variable"
	, "cast": "bool"
	, "name": "boolCge"
	, "type": "bool"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 28
	, "size": 1
	, "offs": 384
	, "static": false
	, "const": false
	, "ast": {
		"": "boolA >= boolB"
		, "kind": ">="
		, "type": "bool"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 28
		, "left": {
			"": "boolA"
			, "kind": ".variable"
			, "type": "bool"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 28
			, "value": "boolA"
		}
		, "right": {
			"": "boolB"
			, "kind": ".variable"
			, "type": "bool"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 28
			, "value": "boolB"
		}
	}
}, {
	"": "chrA"
	, "kind": "variable"
	, "cast": "u32"
	, "name": "chrA"
	, "type": "char"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 30
	, "size": 1
	, "offs": 388
	, "static": false
	, "const": false
	, "ast": {
		"": "'a'"
		, "kind": ".literal"
		, "type": "char"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 30
		, "value": "'a'"
	}
}, {
	"": "chrB"
	, "kind": "variable"
	, "cast": "u32"
	, "name": "chrB"
	, "type": "char"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 31
	, "size": 1
	, "offs": 392
	, "static": false
	, "const": false
	, "ast": {
		"": "'b'"
		, "kind": ".literal"
		, "type": "char"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 31
		, "value": "'b'"
	}
}, {
	"": "chrPls"
	, "kind": "variable"
	, "cast": "u32"
	, "name": "chrPls"
	, "type": "char"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 32
	, "size": 1
	, "offs": 396
	, "static": false
	, "const": false
	, "ast": {
		"": "+chrB"
		, "kind": "+"
		, "type": "char"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 32
		, "right": {
			"": "chrB"
			, "kind": ".variable"
			, "type": "char"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 32
			, "value": "chrB"
		}
	}
}, {
	"": "chrNeg"
	, "kind": "variable"
	, "cast": "u32"
	, "name": "chrNeg"
	, "type": "char"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 33
	, "size": 1
	, "offs": 400
	, "static": false
	, "const": false
	, "ast": {
		"": "-chrB"
		, "kind": "-"
		, "type": "char"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 33
		, "right": {
			"": "chrB"
			, "kind": ".variable"
			, "type": "char"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 33
			, "value": "chrB"
		}
	}
}, {
	"": "chrCmt"
	, "kind": "variable"
	, "cast": "u32"
	, "name": "chrCmt"
	, "type": "char"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 34
	, "size": 1
	, "offs": 404
	, "static": false
	, "const": false
	, "ast": {
		"": "~chrB"
		, "kind": "~"
		, "type": "char"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 34
		, "right": {
			"": "chrB"
			, "kind": ".variable"
			, "type": "char"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 34
			, "value": "chrB"
		}
	}
}, {
	"": "chrAdd"
	, "kind": "variable"
	, "cast": "u32"
	, "name": "chrAdd"
	, "type": "char"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 35
	, "size": 1
	, "offs": 408
	, "static": false
	, "const": false
	, "ast": {
		"": "chrA + chrB"
		, "kind": "+"
		, "type": "char"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 35
		, "left": {
			"": "chrA"
			, "kind": ".variable"
			, "type": "char"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 35
			, "value": "chrA"
		}
		, "right": {
			"": "chrB"
			, "kind": ".variable"
			, "type": "char"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 35
			, "value": "chrB"
		}
	}
}, {
	"": "chrSub"
	, "kind": "variable"
	, "cast": "u32"
	, "name": "chrSub"
	, "type": "char"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 36
	, "size": 1
	, "offs": 412
	, "static": false
	, "const": false
	, "ast": {
		"": "chrA - chrB"
		, "kind": "-"
		, "type": "char"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 36
		, "left": {
			"": "chrA"
			, "kind": ".variable"
			, "type": "char"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 36
			, "value": "chrA"
		}
		, "right": {
			"": "chrB"
			, "kind": ".variable"
			, "type": "char"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 36
			, "value": "chrB"
		}
	}
}, {
	"": "chrMul"
	, "kind": "variable"
	, "cast": "u32"
	, "name": "chrMul"
	, "type": "char"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 37
	, "size": 1
	, "offs": 416
	, "static": false
	, "const": false
	, "ast": {
		"": "chrA * chrB"
		, "kind": "*"
		, "type": "char"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 37
		, "left": {
			"": "chrA"
			, "kind": ".variable"
			, "type": "char"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 37
			, "value": "chrA"
		}
		, "right": {
			"": "chrB"
			, "kind": ".variable"
			, "type": "char"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 37
			, "value": "chrB"
		}
	}
}, {
	"": "chrDiv"
	, "kind": "variable"
	, "cast": "u32"
	, "name": "chrDiv"
	, "type": "char"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 38
	, "size": 1
	, "offs": 420
	, "static": false
	, "const": false
	, "ast": {
		"": "chrA / chrB"
		, "kind": "/"
		, "type": "char"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 38
		, "left": {
			"": "chrA"
			, "kind": ".variable"
			, "type": "char"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 38
			, "value": "chrA"
		}
		, "right": {
			"": "chrB"
			, "kind": ".variable"
			, "type": "char"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 38
			, "value": "chrB"
		}
	}
}, {
	"": "chrMod"
	, "kind": "variable"
	, "cast": "u32"
	, "name": "chrMod"
	, "type": "char"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 39
	, "size": 1
	, "offs": 424
	, "static": false
	, "const": false
	, "ast": {
		"": "chrA % chrB"
		, "kind": "%"
		, "type": "char"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 39
		, "left": {
			"": "chrA"
			, "kind": ".variable"
			, "type": "char"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 39
			, "value": "chrA"
		}
		, "right": {
			"": "chrB"
			, "kind": ".variable"
			, "type": "char"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 39
			, "value": "chrB"
		}
	}
}, {
	"": "chrAnd"
	, "kind": "variable"
	, "cast": "u32"
	, "name": "chrAnd"
	, "type": "char"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 40
	, "size": 1
	, "offs": 428
	, "static": false
	, "const": false
	, "ast": {
		"": "chrA & chrB"
		, "kind": "&"
		, "type": "char"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 40
		, "left": {
			"": "chrA"
			, "kind": ".variable"
			, "type": "char"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 40
			, "value": "chrA"
		}
		, "right": {
			"": "chrB"
			, "kind": ".variable"
			, "type": "char"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 40
			, "value": "chrB"
		}
	}
}, {
	"": "chrIor"
	, "kind": "variable"
	, "cast": "u32"
	, "name": "chrIor"
	, "type": "char"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 41
	, "size": 1
	, "offs": 432
	, "static": false
	, "const": false
	, "ast": {
		"": "chrA | chrB"
		, "kind": "|"
		, "type": "char"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 41
		, "left": {
			"": "chrA"
			, "kind": ".variable"
			, "type": "char"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 41
			, "value": "chrA"
		}
		, "right": {
			"": "chrB"
			, "kind": ".variable"
			, "type": "char"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 41
			, "value": "chrB"
		}
	}
}, {
	"": "chrXor"
	, "kind": "variable"
	, "cast": "u32"
	, "name": "chrXor"
	, "type": "char"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 42
	, "size": 1
	, "offs": 436
	, "static": false
	, "const": false
	, "ast": {
		"": "chrA ^ chrB"
		, "kind": "^"
		, "type": "char"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 42
		, "left": {
			"": "chrA"
			, "kind": ".variable"
			, "type": "char"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 42
			, "value": "chrA"
		}
		, "right": {
			"": "chrB"
			, "kind": ".variable"
			, "type": "char"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 42
			, "value": "chrB"
		}
	}
}, {
	"": "chrShl"
	, "kind": "variable"
	, "cast": "u32"
	, "name": "chrShl"
	, "type": "char"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 43
	, "size": 1
	, "offs": 440
	, "static": false
	, "const": false
	, "ast": {
		"": "(chrA) << shift"
		, "kind": "<<"
		, "type": "int32"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 43
		, "left": {
			"": "(chrA)"
			, "kind": "()"
			, "type": "int32"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 43
			, "args": [{
				"": "chrA"
				, "kind": ".variable"
				, "type": "char"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 43
				, "value": "chrA"
			}]
		}
		, "right": {
			"": "shift"
			, "kind": ".variable"
			, "type": "int32"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 43
			, "value": "shift"
		}
	}
}, {
	"": "chrShr"
	, "kind": "variable"
	, "cast": "u32"
	, "name": "chrShr"
	, "type": "char"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 44
	, "size": 1
	, "offs": 444
	, "static": false
	, "const": false
	, "ast": {
		"": "(chrA) >> shift"
		, "kind": ">>"
		, "type": "int32"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 44
		, "left": {
			"": "(chrA)"
			, "kind": "()"
			, "type": "int32"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 44
			, "args": [{
				"": "chrA"
				, "kind": ".variable"
				, "type": "char"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 44
				, "value": "chrA"
			}]
		}
		, "right": {
			"": "shift"
			, "kind": ".variable"
			, "type": "int32"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 44
			, "value": "shift"
		}
	}
}, {
	"": "chrNot"
	, "kind": "variable"
	, "cast": "bool"
	, "name": "chrNot"
	, "type": "bool"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 45
	, "size": 1
	, "offs": 448
	, "static": false
	, "const": false
	, "ast": {
		"": "!(chrB)"
		, "kind": "!"
		, "type": "bool"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 45
		, "right": {
			"": "(chrB)"
			, "kind": "()"
			, "type": "bool"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 45
			, "args": [{
				"": "chrB"
				, "kind": ".variable"
				, "type": "char"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 45
				, "value": "chrB"
			}]
		}
	}
}, {
	"": "chrCeq"
	, "kind": "variable"
	, "cast": "bool"
	, "name": "chrCeq"
	, "type": "bool"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 46
	, "size": 1
	, "offs": 452
	, "static": false
	, "const": false
	, "ast": {
		"": "chrA == chrB"
		, "kind": "=="
		, "type": "bool"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 46
		, "left": {
			"": "chrA"
			, "kind": ".variable"
			, "type": "char"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 46
			, "value": "chrA"
		}
		, "right": {
			"": "chrB"
			, "kind": ".variable"
			, "type": "char"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 46
			, "value": "chrB"
		}
	}
}, {
	"": "chrCne"
	, "kind": "variable"
	, "cast": "bool"
	, "name": "chrCne"
	, "type": "bool"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 47
	, "size": 1
	, "offs": 456
	, "static": false
	, "const": false
	, "ast": {
		"": "chrA != chrB"
		, "kind": "!="
		, "type": "bool"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 47
		, "left": {
			"": "chrA"
			, "kind": ".variable"
			, "type": "char"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 47
			, "value": "chrA"
		}
		, "right": {
			"": "chrB"
			, "kind": ".variable"
			, "type": "char"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 47
			, "value": "chrB"
		}
	}
}, {
	"": "chrClt"
	, "kind": "variable"
	, "cast": "bool"
	, "name": "chrClt"
	, "type": "bool"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 48
	, "size": 1
	, "offs": 460
	, "static": false
	, "const": false
	, "ast": {
		"": "chrA < chrB"
		, "kind": "<"
		, "type": "bool"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 48
		, "left": {
			"": "chrA"
			, "kind": ".variable"
			, "type": "char"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 48
			, "value": "chrA"
		}
		, "right": {
			"": "chrB"
			, "kind": ".variable"
			, "type": "char"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 48
			, "value": "chrB"
		}
	}
}, {
	"": "chrCle"
	, "kind": "variable"
	, "cast": "bool"
	, "name": "chrCle"
	, "type": "bool"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 49
	, "size": 1
	, "offs": 464
	, "static": false
	, "const": false
	, "ast": {
		"": "chrA <= chrB"
		, "kind": "<="
		, "type": "bool"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 49
		, "left": {
			"": "chrA"
			, "kind": ".variable"
			, "type": "char"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 49
			, "value": "chrA"
		}
		, "right": {
			"": "chrB"
			, "kind": ".variable"
			, "type": "char"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 49
			, "value": "chrB"
		}
	}
}, {
	"": "chrCgt"
	, "kind": "variable"
	, "cast": "bool"
	, "name": "chrCgt"
	, "type": "bool"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 50
	, "size": 1
	, "offs": 468
	, "static": false
	, "const": false
	, "ast": {
		"": "chrA > chrB"
		, "kind": ">"
		, "type": "bool"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 50
		, "left": {
			"": "chrA"
			, "kind": ".variable"
			, "type": "char"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 50
			, "value": "chrA"
		}
		, "right": {
			"": "chrB"
			, "kind": ".variable"
			, "type": "char"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 50
			, "value": "chrB"
		}
	}
}, {
	"": "chrCge"
	, "kind": "variable"
	, "cast": "bool"
	, "name": "chrCge"
	, "type": "bool"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 51
	, "size": 1
	, "offs": 472
	, "static": false
	, "const": false
	, "ast": {
		"": "chrA >= chrB"
		, "kind": ">="
		, "type": "bool"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 51
		, "left": {
			"": "chrA"
			, "kind": ".variable"
			, "type": "char"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 51
			, "value": "chrA"
		}
		, "right": {
			"": "chrB"
			, "kind": ".variable"
			, "type": "char"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 51
			, "value": "chrB"
		}
	}
}, {
	"": "i8A"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "i8A"
	, "type": "int8"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 53
	, "size": 1
	, "offs": 476
	, "static": false
	, "const": false
	, "ast": {
		"": "a"
		, "kind": ".variable"
		, "type": "float64"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 53
		, "value": "a"
	}
}, {
	"": "i8B"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "i8B"
	, "type": "int8"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 54
	, "size": 1
	, "offs": 480
	, "static": false
	, "const": false
	, "ast": {
		"": "b"
		, "kind": ".variable"
		, "type": "float64"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 54
		, "value": "b"
	}
}, {
	"": "i8Pls"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "i8Pls"
	, "type": "int8"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 55
	, "size": 1
	, "offs": 484
	, "static": false
	, "const": false
	, "ast": {
		"": "+i8B"
		, "kind": "+"
		, "type": "int8"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 55
		, "right": {
			"": "i8B"
			, "kind": ".variable"
			, "type": "int8"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 55
			, "value": "i8B"
		}
	}
}, {
	"": "i8Neg"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "i8Neg"
	, "type": "int8"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 56
	, "size": 1
	, "offs": 488
	, "static": false
	, "const": false
	, "ast": {
		"": "-i8B"
		, "kind": "-"
		, "type": "int8"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 56
		, "right": {
			"": "i8B"
			, "kind": ".variable"
			, "type": "int8"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 56
			, "value": "i8B"
		}
	}
}, {
	"": "i8Cmt"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "i8Cmt"
	, "type": "int8"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 57
	, "size": 1
	, "offs": 492
	, "static": false
	, "const": false
	, "ast": {
		"": "~i8B"
		, "kind": "~"
		, "type": "int8"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 57
		, "right": {
			"": "i8B"
			, "kind": ".variable"
			, "type": "int8"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 57
			, "value": "i8B"
		}
	}
}, {
	"": "i8Add"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "i8Add"
	, "type": "int8"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 58
	, "size": 1
	, "offs": 496
	, "static": false
	, "const": false
	, "ast": {
		"": "i8A + i8B"
		, "kind": "+"
		, "type": "int8"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 58
		, "left": {
			"": "i8A"
			, "kind": ".variable"
			, "type": "int8"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 58
			, "value": "i8A"
		}
		, "right": {
			"": "i8B"
			, "kind": ".variable"
			, "type": "int8"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 58
			, "value": "i8B"
		}
	}
}, {
	"": "i8Sub"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "i8Sub"
	, "type": "int8"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 59
	, "size": 1
	, "offs": 500
	, "static": false
	, "const": false
	, "ast": {
		"": "i8A - i8B"
		, "kind": "-"
		, "type": "int8"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 59
		, "left": {
			"": "i8A"
			, "kind": ".variable"
			, "type": "int8"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 59
			, "value": "i8A"
		}
		, "right": {
			"": "i8B"
			, "kind": ".variable"
			, "type": "int8"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 59
			, "value": "i8B"
		}
	}
}, {
	"": "i8Mul"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "i8Mul"
	, "type": "int8"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 60
	, "size": 1
	, "offs": 504
	, "static": false
	, "const": false
	, "ast": {
		"": "i8A * i8B"
		, "kind": "*"
		, "type": "int8"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 60
		, "left": {
			"": "i8A"
			, "kind": ".variable"
			, "type": "int8"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 60
			, "value": "i8A"
		}
		, "right": {
			"": "i8B"
			, "kind": ".variable"
			, "type": "int8"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 60
			, "value": "i8B"
		}
	}
}, {
	"": "i8Div"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "i8Div"
	, "type": "int8"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 61
	, "size": 1
	, "offs": 508
	, "static": false
	, "const": false
	, "ast": {
		"": "i8A / i8B"
		, "kind": "/"
		, "type": "int8"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 61
		, "left": {
			"": "i8A"
			, "kind": ".variable"
			, "type": "int8"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 61
			, "value": "i8A"
		}
		, "right": {
			"": "i8B"
			, "kind": ".variable"
			, "type": "int8"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 61
			, "value": "i8B"
		}
	}
}, {
	"": "i8Mod"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "i8Mod"
	, "type": "int8"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 62
	, "size": 1
	, "offs": 512
	, "static": false
	, "const": false
	, "ast": {
		"": "i8A % i8B"
		, "kind": "%"
		, "type": "int8"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 62
		, "left": {
			"": "i8A"
			, "kind": ".variable"
			, "type": "int8"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 62
			, "value": "i8A"
		}
		, "right": {
			"": "i8B"
			, "kind": ".variable"
			, "type": "int8"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 62
			, "value": "i8B"
		}
	}
}, {
	"": "i8And"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "i8And"
	, "type": "int8"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 63
	, "size": 1
	, "offs": 516
	, "static": false
	, "const": false
	, "ast": {
		"": "i8A & i8B"
		, "kind": "&"
		, "type": "int8"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 63
		, "left": {
			"": "i8A"
			, "kind": ".variable"
			, "type": "int8"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 63
			, "value": "i8A"
		}
		, "right": {
			"": "i8B"
			, "kind": ".variable"
			, "type": "int8"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 63
			, "value": "i8B"
		}
	}
}, {
	"": "i8Ior"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "i8Ior"
	, "type": "int8"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 64
	, "size": 1
	, "offs": 520
	, "static": false
	, "const": false
	, "ast": {
		"": "i8A | i8B"
		, "kind": "|"
		, "type": "int8"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 64
		, "left": {
			"": "i8A"
			, "kind": ".variable"
			, "type": "int8"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 64
			, "value": "i8A"
		}
		, "right": {
			"": "i8B"
			, "kind": ".variable"
			, "type": "int8"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 64
			, "value": "i8B"
		}
	}
}, {
	"": "i8Xor"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "i8Xor"
	, "type": "int8"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 65
	, "size": 1
	, "offs": 524
	, "static": false
	, "const": false
	, "ast": {
		"": "i8A ^ i8B"
		, "kind": "^"
		, "type": "int8"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 65
		, "left": {
			"": "i8A"
			, "kind": ".variable"
			, "type": "int8"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 65
			, "value": "i8A"
		}
		, "right": {
			"": "i8B"
			, "kind": ".variable"
			, "type": "int8"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 65
			, "value": "i8B"
		}
	}
}, {
	"": "i8Shl"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "i8Shl"
	, "type": "int8"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 66
	, "size": 1
	, "offs": 528
	, "static": false
	, "const": false
	, "ast": {
		"": "(i8A) << shift"
		, "kind": "<<"
		, "type": "int32"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 66
		, "left": {
			"": "(i8A)"
			, "kind": "()"
			, "type": "int32"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 66
			, "args": [{
				"": "i8A"
				, "kind": ".variable"
				, "type": "int8"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 66
				, "value": "i8A"
			}]
		}
		, "right": {
			"": "shift"
			, "kind": ".variable"
			, "type": "int32"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 66
			, "value": "shift"
		}
	}
}, {
	"": "i8Shr"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "i8Shr"
	, "type": "int8"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 67
	, "size": 1
	, "offs": 532
	, "static": false
	, "const": false
	, "ast": {
		"": "(i8A) >> shift"
		, "kind": ">>"
		, "type": "int32"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 67
		, "left": {
			"": "(i8A)"
			, "kind": "()"
			, "type": "int32"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 67
			, "args": [{
				"": "i8A"
				, "kind": ".variable"
				, "type": "int8"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 67
				, "value": "i8A"
			}]
		}
		, "right": {
			"": "shift"
			, "kind": ".variable"
			, "type": "int32"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 67
			, "value": "shift"
		}
	}
}, {
	"": "i8Not"
	, "kind": "variable"
	, "cast": "bool"
	, "name": "i8Not"
	, "type": "bool"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 68
	, "size": 1
	, "offs": 536
	, "static": false
	, "const": false
	, "ast": {
		"": "!(i8B)"
		, "kind": "!"
		, "type": "bool"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 68
		, "right": {
			"": "(i8B)"
			, "kind": "()"
			, "type": "bool"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 68
			, "args": [{
				"": "i8B"
				, "kind": ".variable"
				, "type": "int8"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 68
				, "value": "i8B"
			}]
		}
	}
}, {
	"": "i8Ceq"
	, "kind": "variable"
	, "cast": "bool"
	, "name": "i8Ceq"
	, "type": "bool"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 69
	, "size": 1
	, "offs": 540
	, "static": false
	, "const": false
	, "ast": {
		"": "i8A == i8B"
		, "kind": "=="
		, "type": "bool"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 69
		, "left": {
			"": "i8A"
			, "kind": ".variable"
			, "type": "int8"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 69
			, "value": "i8A"
		}
		, "right": {
			"": "i8B"
			, "kind": ".variable"
			, "type": "int8"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 69
			, "value": "i8B"
		}
	}
}, {
	"": "i8Cne"
	, "kind": "variable"
	, "cast": "bool"
	, "name": "i8Cne"
	, "type": "bool"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 70
	, "size": 1
	, "offs": 544
	, "static": false
	, "const": false
	, "ast": {
		"": "i8A != i8B"
		, "kind": "!="
		, "type": "bool"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 70
		, "left": {
			"": "i8A"
			, "kind": ".variable"
			, "type": "int8"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 70
			, "value": "i8A"
		}
		, "right": {
			"": "i8B"
			, "kind": ".variable"
			, "type": "int8"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 70
			, "value": "i8B"
		}
	}
}, {
	"": "i8Clt"
	, "kind": "variable"
	, "cast": "bool"
	, "name": "i8Clt"
	, "type": "bool"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 71
	, "size": 1
	, "offs": 548
	, "static": false
	, "const": false
	, "ast": {
		"": "i8A < i8B"
		, "kind": "<"
		, "type": "bool"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 71
		, "left": {
			"": "i8A"
			, "kind": ".variable"
			, "type": "int8"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 71
			, "value": "i8A"
		}
		, "right": {
			"": "i8B"
			, "kind": ".variable"
			, "type": "int8"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 71
			, "value": "i8B"
		}
	}
}, {
	"": "i8Cle"
	, "kind": "variable"
	, "cast": "bool"
	, "name": "i8Cle"
	, "type": "bool"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 72
	, "size": 1
	, "offs": 552
	, "static": false
	, "const": false
	, "ast": {
		"": "i8A <= i8B"
		, "kind": "<="
		, "type": "bool"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 72
		, "left": {
			"": "i8A"
			, "kind": ".variable"
			, "type": "int8"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 72
			, "value": "i8A"
		}
		, "right": {
			"": "i8B"
			, "kind": ".variable"
			, "type": "int8"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 72
			, "value": "i8B"
		}
	}
}, {
	"": "i8Cgt"
	, "kind": "variable"
	, "cast": "bool"
	, "name": "i8Cgt"
	, "type": "bool"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 73
	, "size": 1
	, "offs": 556
	, "static": false
	, "const": false
	, "ast": {
		"": "i8A > i8B"
		, "kind": ">"
		, "type": "bool"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 73
		, "left": {
			"": "i8A"
			, "kind": ".variable"
			, "type": "int8"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 73
			, "value": "i8A"
		}
		, "right": {
			"": "i8B"
			, "kind": ".variable"
			, "type": "int8"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 73
			, "value": "i8B"
		}
	}
}, {
	"": "i8Cge"
	, "kind": "variable"
	, "cast": "bool"
	, "name": "i8Cge"
	, "type": "bool"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 74
	, "size": 1
	, "offs": 560
	, "static": false
	, "const": false
	, "ast": {
		"": "i8A >= i8B"
		, "kind": ">="
		, "type": "bool"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 74
		, "left": {
			"": "i8A"
			, "kind": ".variable"
			, "type": "int8"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 74
			, "value": "i8A"
		}
		, "right": {
			"": "i8B"
			, "kind": ".variable"
			, "type": "int8"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 74
			, "value": "i8B"
		}
	}
}, {
	"": "u8A"
	, "kind": "variable"
	, "cast": "u32"
	, "name": "u8A"
	, "type": "uint8"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 76
	, "size": 1
	, "offs": 564
	, "static": false
	, "const": false
	, "ast": {
		"": "a"
		, "kind": ".variable"
		, "type": "float64"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 76
		, "value": "a"
	}
}, {
	"": "u8B"
	, "kind": "variable"
	, "cast": "u32"
	, "name": "u8B"
	, "type": "uint8"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 77
	, "size": 1
	, "offs": 568
	, "static": false
	, "const": false
	, "ast": {
		"": "b"
		, "kind": ".variable"
		, "type": "float64"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 77
		, "value": "b"
	}
}, {
	"": "u8Pls"
	, "kind": "variable"
	, "cast": "u32"
	, "name": "u8Pls"
	, "type": "uint8"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 78
	, "size": 1
	, "offs": 572
	, "static": false
	, "const": false
	, "ast": {
		"": "+u8B"
		, "kind": "+"
		, "type": "uint8"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 78
		, "right": {
			"": "u8B"
			, "kind": ".variable"
			, "type": "uint8"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 78
			, "value": "u8B"
		}
	}
}, {
	"": "u8Neg"
	, "kind": "variable"
	, "cast": "u32"
	, "name": "u8Neg"
	, "type": "uint8"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 79
	, "size": 1
	, "offs": 576
	, "static": false
	, "const": false
	, "ast": {
		"": "-u8B"
		, "kind": "-"
		, "type": "uint8"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 79
		, "right": {
			"": "u8B"
			, "kind": ".variable"
			, "type": "uint8"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 79
			, "value": "u8B"
		}
	}
}, {
	"": "u8Cmt"
	, "kind": "variable"
	, "cast": "u32"
	, "name": "u8Cmt"
	, "type": "uint8"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 80
	, "size": 1
	, "offs": 580
	, "static": false
	, "const": false
	, "ast": {
		"": "~u8B"
		, "kind": "~"
		, "type": "uint8"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 80
		, "right": {
			"": "u8B"
			, "kind": ".variable"
			, "type": "uint8"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 80
			, "value": "u8B"
		}
	}
}, {
	"": "u8Add"
	, "kind": "variable"
	, "cast": "u32"
	, "name": "u8Add"
	, "type": "uint8"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 81
	, "size": 1
	, "offs": 584
	, "static": false
	, "const": false
	, "ast": {
		"": "u8A + u8B"
		, "kind": "+"
		, "type": "uint8"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 81
		, "left": {
			"": "u8A"
			, "kind": ".variable"
			, "type": "uint8"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 81
			, "value": "u8A"
		}
		, "right": {
			"": "u8B"
			, "kind": ".variable"
			, "type": "uint8"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 81
			, "value": "u8B"
		}
	}
}, {
	"": "u8Sub"
	, "kind": "variable"
	, "cast": "u32"
	, "name": "u8Sub"
	, "type": "uint8"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 82
	, "size": 1
	, "offs": 588
	, "static": false
	, "const": false
	, "ast": {
		"": "u8A - u8B"
		, "kind": "-"
		, "type": "uint8"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 82
		, "left": {
			"": "u8A"
			, "kind": ".variable"
			, "type": "uint8"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 82
			, "value": "u8A"
		}
		, "right": {
			"": "u8B"
			, "kind": ".variable"
			, "type": "uint8"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 82
			, "value": "u8B"
		}
	}
}, {
	"": "u8Mul"
	, "kind": "variable"
	, "cast": "u32"
	, "name": "u8Mul"
	, "type": "uint8"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 83
	, "size": 1
	, "offs": 592
	, "static": false
	, "const": false
	, "ast": {
		"": "u8A * u8B"
		, "kind": "*"
		, "type": "uint8"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 83
		, "left": {
			"": "u8A"
			, "kind": ".variable"
			, "type": "uint8"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 83
			, "value": "u8A"
		}
		, "right": {
			"": "u8B"
			, "kind": ".variable"
			, "type": "uint8"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 83
			, "value": "u8B"
		}
	}
}, {
	"": "u8Div"
	, "kind": "variable"
	, "cast": "u32"
	, "name": "u8Div"
	, "type": "uint8"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 84
	, "size": 1
	, "offs": 596
	, "static": false
	, "const": false
	, "ast": {
		"": "u8A / u8B"
		, "kind": "/"
		, "type": "uint8"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 84
		, "left": {
			"": "u8A"
			, "kind": ".variable"
			, "type": "uint8"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 84
			, "value": "u8A"
		}
		, "right": {
			"": "u8B"
			, "kind": ".variable"
			, "type": "uint8"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 84
			, "value": "u8B"
		}
	}
}, {
	"": "u8Mod"
	, "kind": "variable"
	, "cast": "u32"
	, "name": "u8Mod"
	, "type": "uint8"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 85
	, "size": 1
	, "offs": 600
	, "static": false
	, "const": false
	, "ast": {
		"": "u8A % u8B"
		, "kind": "%"
		, "type": "uint8"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 85
		, "left": {
			"": "u8A"
			, "kind": ".variable"
			, "type": "uint8"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 85
			, "value": "u8A"
		}
		, "right": {
			"": "u8B"
			, "kind": ".variable"
			, "type": "uint8"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 85
			, "value": "u8B"
		}
	}
}, {
	"": "u8And"
	, "kind": "variable"
	, "cast": "u32"
	, "name": "u8And"
	, "type": "uint8"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 86
	, "size": 1
	, "offs": 604
	, "static": false
	, "const": false
	, "ast": {
		"": "u8A & u8B"
		, "kind": "&"
		, "type": "uint8"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 86
		, "left": {
			"": "u8A"
			, "kind": ".variable"
			, "type": "uint8"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 86
			, "value": "u8A"
		}
		, "right": {
			"": "u8B"
			, "kind": ".variable"
			, "type": "uint8"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 86
			, "value": "u8B"
		}
	}
}, {
	"": "u8Ior"
	, "kind": "variable"
	, "cast": "u32"
	, "name": "u8Ior"
	, "type": "uint8"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 87
	, "size": 1
	, "offs": 608
	, "static": false
	, "const": false
	, "ast": {
		"": "u8A | u8B"
		, "kind": "|"
		, "type": "uint8"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 87
		, "left": {
			"": "u8A"
			, "kind": ".variable"
			, "type": "uint8"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 87
			, "value": "u8A"
		}
		, "right": {
			"": "u8B"
			, "kind": ".variable"
			, "type": "uint8"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 87
			, "value": "u8B"
		}
	}
}, {
	"": "u8Xor"
	, "kind": "variable"
	, "cast": "u32"
	, "name": "u8Xor"
	, "type": "uint8"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 88
	, "size": 1
	, "offs": 612
	, "static": false
	, "const": false
	, "ast": {
		"": "u8A ^ u8B"
		, "kind": "^"
		, "type": "uint8"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 88
		, "left": {
			"": "u8A"
			, "kind": ".variable"
			, "type": "uint8"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 88
			, "value": "u8A"
		}
		, "right": {
			"": "u8B"
			, "kind": ".variable"
			, "type": "uint8"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 88
			, "value": "u8B"
		}
	}
}, {
	"": "u8Shl"
	, "kind": "variable"
	, "cast": "u32"
	, "name": "u8Shl"
	, "type": "uint8"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 89
	, "size": 1
	, "offs": 616
	, "static": false
	, "const": false
	, "ast": {
		"": "(u8A) << shift"
		, "kind": "<<"
		, "type": "int32"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 89
		, "left": {
			"": "(u8A)"
			, "kind": "()"
			, "type": "int32"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 89
			, "args": [{
				"": "u8A"
				, "kind": ".variable"
				, "type": "uint8"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 89
				, "value": "u8A"
			}]
		}
		, "right": {
			"": "shift"
			, "kind": ".variable"
			, "type": "int32"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 89
			, "value": "shift"
		}
	}
}, {
	"": "u8Shr"
	, "kind": "variable"
	, "cast": "u32"
	, "name": "u8Shr"
	, "type": "uint8"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 90
	, "size": 1
	, "offs": 620
	, "static": false
	, "const": false
	, "ast": {
		"": "(u8A) >> shift"
		, "kind": ">>"
		, "type": "int32"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 90
		, "left": {
			"": "(u8A)"
			, "kind": "()"
			, "type": "int32"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 90
			, "args": [{
				"": "u8A"
				, "kind": ".variable"
				, "type": "uint8"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 90
				, "value": "u8A"
			}]
		}
		, "right": {
			"": "shift"
			, "kind": ".variable"
			, "type": "int32"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 90
			, "value": "shift"
		}
	}
}, {
	"": "u8Not"
	, "kind": "variable"
	, "cast": "bool"
	, "name": "u8Not"
	, "type": "bool"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 91
	, "size": 1
	, "offs": 624
	, "static": false
	, "const": false
	, "ast": {
		"": "!(u8B)"
		, "kind": "!"
		, "type": "bool"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 91
		, "right": {
			"": "(u8B)"
			, "kind": "()"
			, "type": "bool"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 91
			, "args": [{
				"": "u8B"
				, "kind": ".variable"
				, "type": "uint8"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 91
				, "value": "u8B"
			}]
		}
	}
}, {
	"": "u8Ceq"
	, "kind": "variable"
	, "cast": "bool"
	, "name": "u8Ceq"
	, "type": "bool"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 92
	, "size": 1
	, "offs": 628
	, "static": false
	, "const": false
	, "ast": {
		"": "u8A == u8B"
		, "kind": "=="
		, "type": "bool"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 92
		, "left": {
			"": "u8A"
			, "kind": ".variable"
			, "type": "uint8"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 92
			, "value": "u8A"
		}
		, "right": {
			"": "u8B"
			, "kind": ".variable"
			, "type": "uint8"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 92
			, "value": "u8B"
		}
	}
}, {
	"": "u8Cne"
	, "kind": "variable"
	, "cast": "bool"
	, "name": "u8Cne"
	, "type": "bool"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 93
	, "size": 1
	, "offs": 632
	, "static": false
	, "const": false
	, "ast": {
		"": "u8A != u8B"
		, "kind": "!="
		, "type": "bool"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 93
		, "left": {
			"": "u8A"
			, "kind": ".variable"
			, "type": "uint8"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 93
			, "value": "u8A"
		}
		, "right": {
			"": "u8B"
			, "kind": ".variable"
			, "type": "uint8"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 93
			, "value": "u8B"
		}
	}
}, {
	"": "u8Clt"
	, "kind": "variable"
	, "cast": "bool"
	, "name": "u8Clt"
	, "type": "bool"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 94
	, "size": 1
	, "offs": 636
	, "static": false
	, "const": false
	, "ast": {
		"": "u8A < u8B"
		, "kind": "<"
		, "type": "bool"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 94
		, "left": {
			"": "u8A"
			, "kind": ".variable"
			, "type": "uint8"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 94
			, "value": "u8A"
		}
		, "right": {
			"": "u8B"
			, "kind": ".variable"
			, "type": "uint8"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 94
			, "value": "u8B"
		}
	}
}, {
	"": "u8Cle"
	, "kind": "variable"
	, "cast": "bool"
	, "name": "u8Cle"
	, "type": "bool"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 95
	, "size": 1
	, "offs": 640
	, "static": false
	, "const": false
	, "ast": {
		"": "u8A <= u8B"
		, "kind": "<="
		, "type": "bool"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 95
		, "left": {
			"": "u8A"
			, "kind": ".variable"
			, "type": "uint8"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 95
			, "value": "u8A"
		}
		, "right": {
			"": "u8B"
			, "kind": ".variable"
			, "type": "uint8"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 95
			, "value": "u8B"
		}
	}
}, {
	"": "u8Cgt"
	, "kind": "variable"
	, "cast": "bool"
	, "name": "u8Cgt"
	, "type": "bool"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 96
	, "size": 1
	, "offs": 644
	, "static": false
	, "const": false
	, "ast": {
		"": "u8A > u8B"
		, "kind": ">"
		, "type": "bool"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 96
		, "left": {
			"": "u8A"
			, "kind": ".variable"
			, "type": "uint8"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 96
			, "value": "u8A"
		}
		, "right": {
			"": "u8B"
			, "kind": ".variable"
			, "type": "uint8"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 96
			, "value": "u8B"
		}
	}
}, {
	"": "u8Cge"
	, "kind": "variable"
	, "cast": "bool"
	, "name": "u8Cge"
	, "type": "bool"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 97
	, "size": 1
	, "offs": 648
	, "static": false
	, "const": false
	, "ast": {
		"": "u8A >= u8B"
		, "kind": ">="
		, "type": "bool"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 97
		, "left": {
			"": "u8A"
			, "kind": ".variable"
			, "type": "uint8"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 97
			, "value": "u8A"
		}
		, "right": {
			"": "u8B"
			, "kind": ".variable"
			, "type": "uint8"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 97
			, "value": "u8B"
		}
	}
}, {
	"": "i16A"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "i16A"
	, "type": "int16"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 99
	, "size": 2
	, "offs": 652
	, "static": false
	, "const": false
	, "ast": {
		"": "a"
		, "kind": ".variable"
		, "type": "float64"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 99
		, "value": "a"
	}
}, {
	"": "i16B"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "i16B"
	, "type": "int16"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 100
	, "size": 2
	, "offs": 656
	, "static": false
	, "const": false
	, "ast": {
		"": "b"
		, "kind": ".variable"
		, "type": "float64"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 100
		, "value": "b"
	}
}, {
	"": "i16Pls"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "i16Pls"
	, "type": "int16"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 101
	, "size": 2
	, "offs": 660
	, "static": false
	, "const": false
	, "ast": {
		"": "+i16B"
		, "kind": "+"
		, "type": "int16"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 101
		, "right": {
			"": "i16B"
			, "kind": ".variable"
			, "type": "int16"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 101
			, "value": "i16B"
		}
	}
}, {
	"": "i16Neg"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "i16Neg"
	, "type": "int16"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 102
	, "size": 2
	, "offs": 664
	, "static": false
	, "const": false
	, "ast": {
		"": "-i16B"
		, "kind": "-"
		, "type": "int16"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 102
		, "right": {
			"": "i16B"
			, "kind": ".variable"
			, "type": "int16"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 102
			, "value": "i16B"
		}
	}
}, {
	"": "i16Cmt"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "i16Cmt"
	, "type": "int16"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 103
	, "size": 2
	, "offs": 668
	, "static": false
	, "const": false
	, "ast": {
		"": "~i16B"
		, "kind": "~"
		, "type": "int16"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 103
		, "right": {
			"": "i16B"
			, "kind": ".variable"
			, "type": "int16"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 103
			, "value": "i16B"
		}
	}
}, {
	"": "i16Add"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "i16Add"
	, "type": "int16"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 104
	, "size": 2
	, "offs": 672
	, "static": false
	, "const": false
	, "ast": {
		"": "i16A + i16B"
		, "kind": "+"
		, "type": "int16"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 104
		, "left": {
			"": "i16A"
			, "kind": ".variable"
			, "type": "int16"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 104
			, "value": "i16A"
		}
		, "right": {
			"": "i16B"
			, "kind": ".variable"
			, "type": "int16"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 104
			, "value": "i16B"
		}
	}
}, {
	"": "i16Sub"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "i16Sub"
	, "type": "int16"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 105
	, "size": 2
	, "offs": 676
	, "static": false
	, "const": false
	, "ast": {
		"": "i16A - i16B"
		, "kind": "-"
		, "type": "int16"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 105
		, "left": {
			"": "i16A"
			, "kind": ".variable"
			, "type": "int16"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 105
			, "value": "i16A"
		}
		, "right": {
			"": "i16B"
			, "kind": ".variable"
			, "type": "int16"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 105
			, "value": "i16B"
		}
	}
}, {
	"": "i16Mul"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "i16Mul"
	, "type": "int16"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 106
	, "size": 2
	, "offs": 680
	, "static": false
	, "const": false
	, "ast": {
		"": "i16A * i16B"
		, "kind": "*"
		, "type": "int16"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 106
		, "left": {
			"": "i16A"
			, "kind": ".variable"
			, "type": "int16"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 106
			, "value": "i16A"
		}
		, "right": {
			"": "i16B"
			, "kind": ".variable"
			, "type": "int16"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 106
			, "value": "i16B"
		}
	}
}, {
	"": "i16Div"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "i16Div"
	, "type": "int16"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 107
	, "size": 2
	, "offs": 684
	, "static": false
	, "const": false
	, "ast": {
		"": "i16A / i16B"
		, "kind": "/"
		, "type": "int16"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 107
		, "left": {
			"": "i16A"
			, "kind": ".variable"
			, "type": "int16"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 107
			, "value": "i16A"
		}
		, "right": {
			"": "i16B"
			, "kind": ".variable"
			, "type": "int16"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 107
			, "value": "i16B"
		}
	}
}, {
	"": "i16Mod"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "i16Mod"
	, "type": "int16"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 108
	, "size": 2
	, "offs": 688
	, "static": false
	, "const": false
	, "ast": {
		"": "i16A % i16B"
		, "kind": "%"
		, "type": "int16"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 108
		, "left": {
			"": "i16A"
			, "kind": ".variable"
			, "type": "int16"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 108
			, "value": "i16A"
		}
		, "right": {
			"": "i16B"
			, "kind": ".variable"
			, "type": "int16"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 108
			, "value": "i16B"
		}
	}
}, {
	"": "i16And"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "i16And"
	, "type": "int16"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 109
	, "size": 2
	, "offs": 692
	, "static": false
	, "const": false
	, "ast": {
		"": "i16A & i16B"
		, "kind": "&"
		, "type": "int16"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 109
		, "left": {
			"": "i16A"
			, "kind": ".variable"
			, "type": "int16"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 109
			, "value": "i16A"
		}
		, "right": {
			"": "i16B"
			, "kind": ".variable"
			, "type": "int16"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 109
			, "value": "i16B"
		}
	}
}, {
	"": "i16Ior"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "i16Ior"
	, "type": "int16"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 110
	, "size": 2
	, "offs": 696
	, "static": false
	, "const": false
	, "ast": {
		"": "i16A | i16B"
		, "kind": "|"
		, "type": "int16"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 110
		, "left": {
			"": "i16A"
			, "kind": ".variable"
			, "type": "int16"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 110
			, "value": "i16A"
		}
		, "right": {
			"": "i16B"
			, "kind": ".variable"
			, "type": "int16"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 110
			, "value": "i16B"
		}
	}
}, {
	"": "i16Xor"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "i16Xor"
	, "type": "int16"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 111
	, "size": 2
	, "offs": 700
	, "static": false
	, "const": false
	, "ast": {
		"": "i16A ^ i16B"
		, "kind": "^"
		, "type": "int16"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 111
		, "left": {
			"": "i16A"
			, "kind": ".variable"
			, "type": "int16"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 111
			, "value": "i16A"
		}
		, "right": {
			"": "i16B"
			, "kind": ".variable"
			, "type": "int16"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 111
			, "value": "i16B"
		}
	}
}, {
	"": "i16Shl"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "i16Shl"
	, "type": "int16"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 112
	, "size": 2
	, "offs": 704
	, "static": false
	, "const": false
	, "ast": {
		"": "(i16A) << shift"
		, "kind": "<<"
		, "type": "int32"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 112
		, "left": {
			"": "(i16A)"
			, "kind": "()"
			, "type": "int32"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 112
			, "args": [{
				"": "i16A"
				, "kind": ".variable"
				, "type": "int16"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 112
				, "value": "i16A"
			}]
		}
		, "right": {
			"": "shift"
			, "kind": ".variable"
			, "type": "int32"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 112
			, "value": "shift"
		}
	}
}, {
	"": "i16Shr"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "i16Shr"
	, "type": "int16"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 113
	, "size": 2
	, "offs": 708
	, "static": false
	, "const": false
	, "ast": {
		"": "(i16A) >> shift"
		, "kind": ">>"
		, "type": "int32"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 113
		, "left": {
			"": "(i16A)"
			, "kind": "()"
			, "type": "int32"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 113
			, "args": [{
				"": "i16A"
				, "kind": ".variable"
				, "type": "int16"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 113
				, "value": "i16A"
			}]
		}
		, "right": {
			"": "shift"
			, "kind": ".variable"
			, "type": "int32"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 113
			, "value": "shift"
		}
	}
}, {
	"": "i16Not"
	, "kind": "variable"
	, "cast": "bool"
	, "name": "i16Not"
	, "type": "bool"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 114
	, "size": 1
	, "offs": 712
	, "static": false
	, "const": false
	, "ast": {
		"": "!(i16B)"
		, "kind": "!"
		, "type": "bool"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 114
		, "right": {
			"": "(i16B)"
			, "kind": "()"
			, "type": "bool"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 114
			, "args": [{
				"": "i16B"
				, "kind": ".variable"
				, "type": "int16"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 114
				, "value": "i16B"
			}]
		}
	}
}, {
	"": "i16Ceq"
	, "kind": "variable"
	, "cast": "bool"
	, "name": "i16Ceq"
	, "type": "bool"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 115
	, "size": 1
	, "offs": 716
	, "static": false
	, "const": false
	, "ast": {
		"": "i16A == i16B"
		, "kind": "=="
		, "type": "bool"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 115
		, "left": {
			"": "i16A"
			, "kind": ".variable"
			, "type": "int16"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 115
			, "value": "i16A"
		}
		, "right": {
			"": "i16B"
			, "kind": ".variable"
			, "type": "int16"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 115
			, "value": "i16B"
		}
	}
}, {
	"": "i16Cne"
	, "kind": "variable"
	, "cast": "bool"
	, "name": "i16Cne"
	, "type": "bool"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 116
	, "size": 1
	, "offs": 720
	, "static": false
	, "const": false
	, "ast": {
		"": "i16A != i16B"
		, "kind": "!="
		, "type": "bool"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 116
		, "left": {
			"": "i16A"
			, "kind": ".variable"
			, "type": "int16"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 116
			, "value": "i16A"
		}
		, "right": {
			"": "i16B"
			, "kind": ".variable"
			, "type": "int16"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 116
			, "value": "i16B"
		}
	}
}, {
	"": "i16Clt"
	, "kind": "variable"
	, "cast": "bool"
	, "name": "i16Clt"
	, "type": "bool"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 117
	, "size": 1
	, "offs": 724
	, "static": false
	, "const": false
	, "ast": {
		"": "i16A < i16B"
		, "kind": "<"
		, "type": "bool"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 117
		, "left": {
			"": "i16A"
			, "kind": ".variable"
			, "type": "int16"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 117
			, "value": "i16A"
		}
		, "right": {
			"": "i16B"
			, "kind": ".variable"
			, "type": "int16"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 117
			, "value": "i16B"
		}
	}
}, {
	"": "i16Cle"
	, "kind": "variable"
	, "cast": "bool"
	, "name": "i16Cle"
	, "type": "bool"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 118
	, "size": 1
	, "offs": 728
	, "static": false
	, "const": false
	, "ast": {
		"": "i16A <= i16B"
		, "kind": "<="
		, "type": "bool"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 118
		, "left": {
			"": "i16A"
			, "kind": ".variable"
			, "type": "int16"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 118
			, "value": "i16A"
		}
		, "right": {
			"": "i16B"
			, "kind": ".variable"
			, "type": "int16"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 118
			, "value": "i16B"
		}
	}
}, {
	"": "i16Cgt"
	, "kind": "variable"
	, "cast": "bool"
	, "name": "i16Cgt"
	, "type": "bool"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 119
	, "size": 1
	, "offs": 732
	, "static": false
	, "const": false
	, "ast": {
		"": "i16A > i16B"
		, "kind": ">"
		, "type": "bool"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 119
		, "left": {
			"": "i16A"
			, "kind": ".variable"
			, "type": "int16"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 119
			, "value": "i16A"
		}
		, "right": {
			"": "i16B"
			, "kind": ".variable"
			, "type": "int16"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 119
			, "value": "i16B"
		}
	}
}, {
	"": "i16Cge"
	, "kind": "variable"
	, "cast": "bool"
	, "name": "i16Cge"
	, "type": "bool"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 120
	, "size": 1
	, "offs": 736
	, "static": false
	, "const": false
	, "ast": {
		"": "i16A >= i16B"
		, "kind": ">="
		, "type": "bool"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 120
		, "left": {
			"": "i16A"
			, "kind": ".variable"
			, "type": "int16"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 120
			, "value": "i16A"
		}
		, "right": {
			"": "i16B"
			, "kind": ".variable"
			, "type": "int16"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 120
			, "value": "i16B"
		}
	}
}, {
	"": "u16A"
	, "kind": "variable"
	, "cast": "u32"
	, "name": "u16A"
	, "type": "uint16"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 122
	, "size": 2
	, "offs": 740
	, "static": false
	, "const": false
	, "ast": {
		"": "a"
		, "kind": ".variable"
		, "type": "float64"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 122
		, "value": "a"
	}
}, {
	"": "u16B"
	, "kind": "variable"
	, "cast": "u32"
	, "name": "u16B"
	, "type": "uint16"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 123
	, "size": 2
	, "offs": 744
	, "static": false
	, "const": false
	, "ast": {
		"": "b"
		, "kind": ".variable"
		, "type": "float64"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 123
		, "value": "b"
	}
}, {
	"": "u16Pls"
	, "kind": "variable"
	, "cast": "u32"
	, "name": "u16Pls"
	, "type": "uint16"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 124
	, "size": 2
	, "offs": 748
	, "static": false
	, "const": false
	, "ast": {
		"": "+u16B"
		, "kind": "+"
		, "type": "uint16"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 124
		, "right": {
			"": "u16B"
			, "kind": ".variable"
			, "type": "uint16"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 124
			, "value": "u16B"
		}
	}
}, {
	"": "u16Neg"
	, "kind": "variable"
	, "cast": "u32"
	, "name": "u16Neg"
	, "type": "uint16"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 125
	, "size": 2
	, "offs": 752
	, "static": false
	, "const": false
	, "ast": {
		"": "-u16B"
		, "kind": "-"
		, "type": "uint16"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 125
		, "right": {
			"": "u16B"
			, "kind": ".variable"
			, "type": "uint16"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 125
			, "value": "u16B"
		}
	}
}, {
	"": "u16Cmt"
	, "kind": "variable"
	, "cast": "u32"
	, "name": "u16Cmt"
	, "type": "uint16"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 126
	, "size": 2
	, "offs": 756
	, "static": false
	, "const": false
	, "ast": {
		"": "~u16B"
		, "kind": "~"
		, "type": "uint16"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 126
		, "right": {
			"": "u16B"
			, "kind": ".variable"
			, "type": "uint16"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 126
			, "value": "u16B"
		}
	}
}, {
	"": "u16Add"
	, "kind": "variable"
	, "cast": "u32"
	, "name": "u16Add"
	, "type": "uint16"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 127
	, "size": 2
	, "offs": 760
	, "static": false
	, "const": false
	, "ast": {
		"": "u16A + u16B"
		, "kind": "+"
		, "type": "uint16"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 127
		, "left": {
			"": "u16A"
			, "kind": ".variable"
			, "type": "uint16"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 127
			, "value": "u16A"
		}
		, "right": {
			"": "u16B"
			, "kind": ".variable"
			, "type": "uint16"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 127
			, "value": "u16B"
		}
	}
}, {
	"": "u16Sub"
	, "kind": "variable"
	, "cast": "u32"
	, "name": "u16Sub"
	, "type": "uint16"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 128
	, "size": 2
	, "offs": 764
	, "static": false
	, "const": false
	, "ast": {
		"": "u16A - u16B"
		, "kind": "-"
		, "type": "uint16"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 128
		, "left": {
			"": "u16A"
			, "kind": ".variable"
			, "type": "uint16"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 128
			, "value": "u16A"
		}
		, "right": {
			"": "u16B"
			, "kind": ".variable"
			, "type": "uint16"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 128
			, "value": "u16B"
		}
	}
}, {
	"": "u16Mul"
	, "kind": "variable"
	, "cast": "u32"
	, "name": "u16Mul"
	, "type": "uint16"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 129
	, "size": 2
	, "offs": 768
	, "static": false
	, "const": false
	, "ast": {
		"": "u16A * u16B"
		, "kind": "*"
		, "type": "uint16"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 129
		, "left": {
			"": "u16A"
			, "kind": ".variable"
			, "type": "uint16"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 129
			, "value": "u16A"
		}
		, "right": {
			"": "u16B"
			, "kind": ".variable"
			, "type": "uint16"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 129
			, "value": "u16B"
		}
	}
}, {
	"": "u16Div"
	, "kind": "variable"
	, "cast": "u32"
	, "name": "u16Div"
	, "type": "uint16"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 130
	, "size": 2
	, "offs": 772
	, "static": false
	, "const": false
	, "ast": {
		"": "u16A / u16B"
		, "kind": "/"
		, "type": "uint16"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 130
		, "left": {
			"": "u16A"
			, "kind": ".variable"
			, "type": "uint16"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 130
			, "value": "u16A"
		}
		, "right": {
			"": "u16B"
			, "kind": ".variable"
			, "type": "uint16"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 130
			, "value": "u16B"
		}
	}
}, {
	"": "u16Mod"
	, "kind": "variable"
	, "cast": "u32"
	, "name": "u16Mod"
	, "type": "uint16"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 131
	, "size": 2
	, "offs": 776
	, "static": false
	, "const": false
	, "ast": {
		"": "u16A % u16B"
		, "kind": "%"
		, "type": "uint16"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 131
		, "left": {
			"": "u16A"
			, "kind": ".variable"
			, "type": "uint16"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 131
			, "value": "u16A"
		}
		, "right": {
			"": "u16B"
			, "kind": ".variable"
			, "type": "uint16"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 131
			, "value": "u16B"
		}
	}
}, {
	"": "u16And"
	, "kind": "variable"
	, "cast": "u32"
	, "name": "u16And"
	, "type": "uint16"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 132
	, "size": 2
	, "offs": 780
	, "static": false
	, "const": false
	, "ast": {
		"": "u16A & u16B"
		, "kind": "&"
		, "type": "uint16"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 132
		, "left": {
			"": "u16A"
			, "kind": ".variable"
			, "type": "uint16"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 132
			, "value": "u16A"
		}
		, "right": {
			"": "u16B"
			, "kind": ".variable"
			, "type": "uint16"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 132
			, "value": "u16B"
		}
	}
}, {
	"": "u16Ior"
	, "kind": "variable"
	, "cast": "u32"
	, "name": "u16Ior"
	, "type": "uint16"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 133
	, "size": 2
	, "offs": 784
	, "static": false
	, "const": false
	, "ast": {
		"": "u16A | u16B"
		, "kind": "|"
		, "type": "uint16"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 133
		, "left": {
			"": "u16A"
			, "kind": ".variable"
			, "type": "uint16"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 133
			, "value": "u16A"
		}
		, "right": {
			"": "u16B"
			, "kind": ".variable"
			, "type": "uint16"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 133
			, "value": "u16B"
		}
	}
}, {
	"": "u16Xor"
	, "kind": "variable"
	, "cast": "u32"
	, "name": "u16Xor"
	, "type": "uint16"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 134
	, "size": 2
	, "offs": 788
	, "static": false
	, "const": false
	, "ast": {
		"": "u16A ^ u16B"
		, "kind": "^"
		, "type": "uint16"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 134
		, "left": {
			"": "u16A"
			, "kind": ".variable"
			, "type": "uint16"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 134
			, "value": "u16A"
		}
		, "right": {
			"": "u16B"
			, "kind": ".variable"
			, "type": "uint16"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 134
			, "value": "u16B"
		}
	}
}, {
	"": "u16Shl"
	, "kind": "variable"
	, "cast": "u32"
	, "name": "u16Shl"
	, "type": "uint16"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 135
	, "size": 2
	, "offs": 792
	, "static": false
	, "const": false
	, "ast": {
		"": "(u16A) << shift"
		, "kind": "<<"
		, "type": "int32"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 135
		, "left": {
			"": "(u16A)"
			, "kind": "()"
			, "type": "int32"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 135
			, "args": [{
				"": "u16A"
				, "kind": ".variable"
				, "type": "uint16"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 135
				, "value": "u16A"
			}]
		}
		, "right": {
			"": "shift"
			, "kind": ".variable"
			, "type": "int32"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 135
			, "value": "shift"
		}
	}
}, {
	"": "u16Shr"
	, "kind": "variable"
	, "cast": "u32"
	, "name": "u16Shr"
	, "type": "uint16"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 136
	, "size": 2
	, "offs": 796
	, "static": false
	, "const": false
	, "ast": {
		"": "(u16A) >> shift"
		, "kind": ">>"
		, "type": "int32"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 136
		, "left": {
			"": "(u16A)"
			, "kind": "()"
			, "type": "int32"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 136
			, "args": [{
				"": "u16A"
				, "kind": ".variable"
				, "type": "uint16"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 136
				, "value": "u16A"
			}]
		}
		, "right": {
			"": "shift"
			, "kind": ".variable"
			, "type": "int32"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 136
			, "value": "shift"
		}
	}
}, {
	"": "u16Not"
	, "kind": "variable"
	, "cast": "bool"
	, "name": "u16Not"
	, "type": "bool"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 137
	, "size": 1
	, "offs": 800
	, "static": false
	, "const": false
	, "ast": {
		"": "!(u16B)"
		, "kind": "!"
		, "type": "bool"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 137
		, "right": {
			"": "(u16B)"
			, "kind": "()"
			, "type": "bool"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 137
			, "args": [{
				"": "u16B"
				, "kind": ".variable"
				, "type": "uint16"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 137
				, "value": "u16B"
			}]
		}
	}
}, {
	"": "u16Ceq"
	, "kind": "variable"
	, "cast": "bool"
	, "name": "u16Ceq"
	, "type": "bool"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 138
	, "size": 1
	, "offs": 804
	, "static": false
	, "const": false
	, "ast": {
		"": "u16A == u16B"
		, "kind": "=="
		, "type": "bool"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 138
		, "left": {
			"": "u16A"
			, "kind": ".variable"
			, "type": "uint16"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 138
			, "value": "u16A"
		}
		, "right": {
			"": "u16B"
			, "kind": ".variable"
			, "type": "uint16"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 138
			, "value": "u16B"
		}
	}
}, {
	"": "u16Cne"
	, "kind": "variable"
	, "cast": "bool"
	, "name": "u16Cne"
	, "type": "bool"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 139
	, "size": 1
	, "offs": 808
	, "static": false
	, "const": false
	, "ast": {
		"": "u16A != u16B"
		, "kind": "!="
		, "type": "bool"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 139
		, "left": {
			"": "u16A"
			, "kind": ".variable"
			, "type": "uint16"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 139
			, "value": "u16A"
		}
		, "right": {
			"": "u16B"
			, "kind": ".variable"
			, "type": "uint16"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 139
			, "value": "u16B"
		}
	}
}, {
	"": "u16Clt"
	, "kind": "variable"
	, "cast": "bool"
	, "name": "u16Clt"
	, "type": "bool"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 140
	, "size": 1
	, "offs": 812
	, "static": false
	, "const": false
	, "ast": {
		"": "u16A < u16B"
		, "kind": "<"
		, "type": "bool"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 140
		, "left": {
			"": "u16A"
			, "kind": ".variable"
			, "type": "uint16"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 140
			, "value": "u16A"
		}
		, "right": {
			"": "u16B"
			, "kind": ".variable"
			, "type": "uint16"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 140
			, "value": "u16B"
		}
	}
}, {
	"": "u16Cle"
	, "kind": "variable"
	, "cast": "bool"
	, "name": "u16Cle"
	, "type": "bool"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 141
	, "size": 1
	, "offs": 816
	, "static": false
	, "const": false
	, "ast": {
		"": "u16A <= u16B"
		, "kind": "<="
		, "type": "bool"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 141
		, "left": {
			"": "u16A"
			, "kind": ".variable"
			, "type": "uint16"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 141
			, "value": "u16A"
		}
		, "right": {
			"": "u16B"
			, "kind": ".variable"
			, "type": "uint16"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 141
			, "value": "u16B"
		}
	}
}, {
	"": "u16Cgt"
	, "kind": "variable"
	, "cast": "bool"
	, "name": "u16Cgt"
	, "type": "bool"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 142
	, "size": 1
	, "offs": 820
	, "static": false
	, "const": false
	, "ast": {
		"": "u16A > u16B"
		, "kind": ">"
		, "type": "bool"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 142
		, "left": {
			"": "u16A"
			, "kind": ".variable"
			, "type": "uint16"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 142
			, "value": "u16A"
		}
		, "right": {
			"": "u16B"
			, "kind": ".variable"
			, "type": "uint16"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 142
			, "value": "u16B"
		}
	}
}, {
	"": "u16Cge"
	, "kind": "variable"
	, "cast": "bool"
	, "name": "u16Cge"
	, "type": "bool"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 143
	, "size": 1
	, "offs": 824
	, "static": false
	, "const": false
	, "ast": {
		"": "u16A >= u16B"
		, "kind": ">="
		, "type": "bool"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 143
		, "left": {
			"": "u16A"
			, "kind": ".variable"
			, "type": "uint16"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 143
			, "value": "u16A"
		}
		, "right": {
			"": "u16B"
			, "kind": ".variable"
			, "type": "uint16"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 143
			, "value": "u16B"
		}
	}
}, {
	"": "i32A"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "i32A"
	, "type": "int32"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 145
	, "size": 4
	, "offs": 828
	, "static": false
	, "const": false
	, "ast": {
		"": "a"
		, "kind": ".variable"
		, "type": "float64"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 145
		, "value": "a"
	}
}, {
	"": "i32B"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "i32B"
	, "type": "int32"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 146
	, "size": 4
	, "offs": 832
	, "static": false
	, "const": false
	, "ast": {
		"": "b"
		, "kind": ".variable"
		, "type": "float64"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 146
		, "value": "b"
	}
}, {
	"": "i32Pls"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "i32Pls"
	, "type": "int32"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 147
	, "size": 4
	, "offs": 836
	, "static": false
	, "const": false
	, "ast": {
		"": "+i32B"
		, "kind": "+"
		, "type": "int32"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 147
		, "right": {
			"": "i32B"
			, "kind": ".variable"
			, "type": "int32"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 147
			, "value": "i32B"
		}
	}
}, {
	"": "i32Neg"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "i32Neg"
	, "type": "int32"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 148
	, "size": 4
	, "offs": 840
	, "static": false
	, "const": false
	, "ast": {
		"": "-i32B"
		, "kind": "-"
		, "type": "int32"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 148
		, "right": {
			"": "i32B"
			, "kind": ".variable"
			, "type": "int32"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 148
			, "value": "i32B"
		}
	}
}, {
	"": "i32Cmt"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "i32Cmt"
	, "type": "int32"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 149
	, "size": 4
	, "offs": 844
	, "static": false
	, "const": false
	, "ast": {
		"": "~i32B"
		, "kind": "~"
		, "type": "int32"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 149
		, "right": {
			"": "i32B"
			, "kind": ".variable"
			, "type": "int32"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 149
			, "value": "i32B"
		}
	}
}, {
	"": "i32Add"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "i32Add"
	, "type": "int32"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 150
	, "size": 4
	, "offs": 848
	, "static": false
	, "const": false
	, "ast": {
		"": "i32A + i32B"
		, "kind": "+"
		, "type": "int32"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 150
		, "left": {
			"": "i32A"
			, "kind": ".variable"
			, "type": "int32"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 150
			, "value": "i32A"
		}
		, "right": {
			"": "i32B"
			, "kind": ".variable"
			, "type": "int32"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 150
			, "value": "i32B"
		}
	}
}, {
	"": "i32Sub"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "i32Sub"
	, "type": "int32"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 151
	, "size": 4
	, "offs": 852
	, "static": false
	, "const": false
	, "ast": {
		"": "i32A - i32B"
		, "kind": "-"
		, "type": "int32"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 151
		, "left": {
			"": "i32A"
			, "kind": ".variable"
			, "type": "int32"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 151
			, "value": "i32A"
		}
		, "right": {
			"": "i32B"
			, "kind": ".variable"
			, "type": "int32"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 151
			, "value": "i32B"
		}
	}
}, {
	"": "i32Mul"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "i32Mul"
	, "type": "int32"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 152
	, "size": 4
	, "offs": 856
	, "static": false
	, "const": false
	, "ast": {
		"": "i32A * i32B"
		, "kind": "*"
		, "type": "int32"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 152
		, "left": {
			"": "i32A"
			, "kind": ".variable"
			, "type": "int32"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 152
			, "value": "i32A"
		}
		, "right": {
			"": "i32B"
			, "kind": ".variable"
			, "type": "int32"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 152
			, "value": "i32B"
		}
	}
}, {
	"": "i32Div"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "i32Div"
	, "type": "int32"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 153
	, "size": 4
	, "offs": 860
	, "static": false
	, "const": false
	, "ast": {
		"": "i32A / i32B"
		, "kind": "/"
		, "type": "int32"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 153
		, "left": {
			"": "i32A"
			, "kind": ".variable"
			, "type": "int32"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 153
			, "value": "i32A"
		}
		, "right": {
			"": "i32B"
			, "kind": ".variable"
			, "type": "int32"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 153
			, "value": "i32B"
		}
	}
}, {
	"": "i32Mod"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "i32Mod"
	, "type": "int32"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 154
	, "size": 4
	, "offs": 864
	, "static": false
	, "const": false
	, "ast": {
		"": "i32A % i32B"
		, "kind": "%"
		, "type": "int32"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 154
		, "left": {
			"": "i32A"
			, "kind": ".variable"
			, "type": "int32"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 154
			, "value": "i32A"
		}
		, "right": {
			"": "i32B"
			, "kind": ".variable"
			, "type": "int32"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 154
			, "value": "i32B"
		}
	}
}, {
	"": "i32And"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "i32And"
	, "type": "int32"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 155
	, "size": 4
	, "offs": 868
	, "static": false
	, "const": false
	, "ast": {
		"": "i32A & i32B"
		, "kind": "&"
		, "type": "int32"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 155
		, "left": {
			"": "i32A"
			, "kind": ".variable"
			, "type": "int32"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 155
			, "value": "i32A"
		}
		, "right": {
			"": "i32B"
			, "kind": ".variable"
			, "type": "int32"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 155
			, "value": "i32B"
		}
	}
}, {
	"": "i32Ior"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "i32Ior"
	, "type": "int32"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 156
	, "size": 4
	, "offs": 872
	, "static": false
	, "const": false
	, "ast": {
		"": "i32A | i32B"
		, "kind": "|"
		, "type": "int32"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 156
		, "left": {
			"": "i32A"
			, "kind": ".variable"
			, "type": "int32"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 156
			, "value": "i32A"
		}
		, "right": {
			"": "i32B"
			, "kind": ".variable"
			, "type": "int32"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 156
			, "value": "i32B"
		}
	}
}, {
	"": "i32Xor"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "i32Xor"
	, "type": "int32"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 157
	, "size": 4
	, "offs": 876
	, "static": false
	, "const": false
	, "ast": {
		"": "i32A ^ i32B"
		, "kind": "^"
		, "type": "int32"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 157
		, "left": {
			"": "i32A"
			, "kind": ".variable"
			, "type": "int32"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 157
			, "value": "i32A"
		}
		, "right": {
			"": "i32B"
			, "kind": ".variable"
			, "type": "int32"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 157
			, "value": "i32B"
		}
	}
}, {
	"": "i32Shl"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "i32Shl"
	, "type": "int32"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 158
	, "size": 4
	, "offs": 880
	, "static": false
	, "const": false
	, "ast": {
		"": "i32A << shift"
		, "kind": "<<"
		, "type": "int32"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 158
		, "left": {
			"": "i32A"
			, "kind": ".variable"
			, "type": "int32"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 158
			, "value": "i32A"
		}
		, "right": {
			"": "shift"
			, "kind": ".variable"
			, "type": "int32"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 158
			, "value": "shift"
		}
	}
}, {
	"": "i32Shr"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "i32Shr"
	, "type": "int32"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 159
	, "size": 4
	, "offs": 884
	, "static": false
	, "const": false
	, "ast": {
		"": "i32A >> shift"
		, "kind": ">>"
		, "type": "int32"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 159
		, "left": {
			"": "i32A"
			, "kind": ".variable"
			, "type": "int32"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 159
			, "value": "i32A"
		}
		, "right": {
			"": "shift"
			, "kind": ".variable"
			, "type": "int32"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 159
			, "value": "shift"
		}
	}
}, {
	"": "i32Not"
	, "kind": "variable"
	, "cast": "bool"
	, "name": "i32Not"
	, "type": "bool"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 160
	, "size": 1
	, "offs": 888
	, "static": false
	, "const": false
	, "ast": {
		"": "!(i32B)"
		, "kind": "!"
		, "type": "bool"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 160
		, "right": {
			"": "(i32B)"
			, "kind": "()"
			, "type": "bool"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 160
			, "args": [{
				"": "i32B"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 160
				, "value": "i32B"
			}]
		}
	}
}, {
	"": "i32Ceq"
	, "kind": "variable"
	, "cast": "bool"
	, "name": "i32Ceq"
	, "type": "bool"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 161
	, "size": 1
	, "offs": 892
	, "static": false
	, "const": false
	, "ast": {
		"": "i32A == i32B"
		, "kind": "=="
		, "type": "bool"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 161
		, "left": {
			"": "i32A"
			, "kind": ".variable"
			, "type": "int32"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 161
			, "value": "i32A"
		}
		, "right": {
			"": "i32B"
			, "kind": ".variable"
			, "type": "int32"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 161
			, "value": "i32B"
		}
	}
}, {
	"": "i32Cne"
	, "kind": "variable"
	, "cast": "bool"
	, "name": "i32Cne"
	, "type": "bool"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 162
	, "size": 1
	, "offs": 896
	, "static": false
	, "const": false
	, "ast": {
		"": "i32A != i32B"
		, "kind": "!="
		, "type": "bool"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 162
		, "left": {
			"": "i32A"
			, "kind": ".variable"
			, "type": "int32"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 162
			, "value": "i32A"
		}
		, "right": {
			"": "i32B"
			, "kind": ".variable"
			, "type": "int32"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 162
			, "value": "i32B"
		}
	}
}, {
	"": "i32Clt"
	, "kind": "variable"
	, "cast": "bool"
	, "name": "i32Clt"
	, "type": "bool"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 163
	, "size": 1
	, "offs": 900
	, "static": false
	, "const": false
	, "ast": {
		"": "i32A < i32B"
		, "kind": "<"
		, "type": "bool"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 163
		, "left": {
			"": "i32A"
			, "kind": ".variable"
			, "type": "int32"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 163
			, "value": "i32A"
		}
		, "right": {
			"": "i32B"
			, "kind": ".variable"
			, "type": "int32"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 163
			, "value": "i32B"
		}
	}
}, {
	"": "i32Cle"
	, "kind": "variable"
	, "cast": "bool"
	, "name": "i32Cle"
	, "type": "bool"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 164
	, "size": 1
	, "offs": 904
	, "static": false
	, "const": false
	, "ast": {
		"": "i32A <= i32B"
		, "kind": "<="
		, "type": "bool"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 164
		, "left": {
			"": "i32A"
			, "kind": ".variable"
			, "type": "int32"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 164
			, "value": "i32A"
		}
		, "right": {
			"": "i32B"
			, "kind": ".variable"
			, "type": "int32"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 164
			, "value": "i32B"
		}
	}
}, {
	"": "i32Cgt"
	, "kind": "variable"
	, "cast": "bool"
	, "name": "i32Cgt"
	, "type": "bool"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 165
	, "size": 1
	, "offs": 908
	, "static": false
	, "const": false
	, "ast": {
		"": "i32A > i32B"
		, "kind": ">"
		, "type": "bool"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 165
		, "left": {
			"": "i32A"
			, "kind": ".variable"
			, "type": "int32"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 165
			, "value": "i32A"
		}
		, "right": {
			"": "i32B"
			, "kind": ".variable"
			, "type": "int32"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 165
			, "value": "i32B"
		}
	}
}, {
	"": "i32Cge"
	, "kind": "variable"
	, "cast": "bool"
	, "name": "i32Cge"
	, "type": "bool"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 166
	, "size": 1
	, "offs": 912
	, "static": false
	, "const": false
	, "ast": {
		"": "i32A >= i32B"
		, "kind": ">="
		, "type": "bool"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 166
		, "left": {
			"": "i32A"
			, "kind": ".variable"
			, "type": "int32"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 166
			, "value": "i32A"
		}
		, "right": {
			"": "i32B"
			, "kind": ".variable"
			, "type": "int32"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 166
			, "value": "i32B"
		}
	}
}, {
	"": "u32A"
	, "kind": "variable"
	, "cast": "u32"
	, "name": "u32A"
	, "type": "uint32"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 168
	, "size": 4
	, "offs": 916
	, "static": false
	, "const": false
	, "ast": {
		"": "a"
		, "kind": ".variable"
		, "type": "float64"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 168
		, "value": "a"
	}
}, {
	"": "u32B"
	, "kind": "variable"
	, "cast": "u32"
	, "name": "u32B"
	, "type": "uint32"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 169
	, "size": 4
	, "offs": 920
	, "static": false
	, "const": false
	, "ast": {
		"": "b"
		, "kind": ".variable"
		, "type": "float64"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 169
		, "value": "b"
	}
}, {
	"": "u32Pls"
	, "kind": "variable"
	, "cast": "u32"
	, "name": "u32Pls"
	, "type": "uint32"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 170
	, "size": 4
	, "offs": 924
	, "static": false
	, "const": false
	, "ast": {
		"": "+u32B"
		, "kind": "+"
		, "type": "uint32"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 170
		, "right": {
			"": "u32B"
			, "kind": ".variable"
			, "type": "uint32"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 170
			, "value": "u32B"
		}
	}
}, {
	"": "u32Neg"
	, "kind": "variable"
	, "cast": "u32"
	, "name": "u32Neg"
	, "type": "uint32"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 171
	, "size": 4
	, "offs": 928
	, "static": false
	, "const": false
	, "ast": {
		"": "-u32B"
		, "kind": "-"
		, "type": "uint32"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 171
		, "right": {
			"": "u32B"
			, "kind": ".variable"
			, "type": "uint32"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 171
			, "value": "u32B"
		}
	}
}, {
	"": "u32Cmt"
	, "kind": "variable"
	, "cast": "u32"
	, "name": "u32Cmt"
	, "type": "uint32"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 172
	, "size": 4
	, "offs": 932
	, "static": false
	, "const": false
	, "ast": {
		"": "~u32B"
		, "kind": "~"
		, "type": "uint32"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 172
		, "right": {
			"": "u32B"
			, "kind": ".variable"
			, "type": "uint32"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 172
			, "value": "u32B"
		}
	}
}, {
	"": "u32Add"
	, "kind": "variable"
	, "cast": "u32"
	, "name": "u32Add"
	, "type": "uint32"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 173
	, "size": 4
	, "offs": 936
	, "static": false
	, "const": false
	, "ast": {
		"": "u32A + u32B"
		, "kind": "+"
		, "type": "uint32"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 173
		, "left": {
			"": "u32A"
			, "kind": ".variable"
			, "type": "uint32"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 173
			, "value": "u32A"
		}
		, "right": {
			"": "u32B"
			, "kind": ".variable"
			, "type": "uint32"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 173
			, "value": "u32B"
		}
	}
}, {
	"": "u32Sub"
	, "kind": "variable"
	, "cast": "u32"
	, "name": "u32Sub"
	, "type": "uint32"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 174
	, "size": 4
	, "offs": 940
	, "static": false
	, "const": false
	, "ast": {
		"": "u32A - u32B"
		, "kind": "-"
		, "type": "uint32"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 174
		, "left": {
			"": "u32A"
			, "kind": ".variable"
			, "type": "uint32"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 174
			, "value": "u32A"
		}
		, "right": {
			"": "u32B"
			, "kind": ".variable"
			, "type": "uint32"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 174
			, "value": "u32B"
		}
	}
}, {
	"": "u32Mul"
	, "kind": "variable"
	, "cast": "u32"
	, "name": "u32Mul"
	, "type": "uint32"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 175
	, "size": 4
	, "offs": 944
	, "static": false
	, "const": false
	, "ast": {
		"": "u32A * u32B"
		, "kind": "*"
		, "type": "uint32"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 175
		, "left": {
			"": "u32A"
			, "kind": ".variable"
			, "type": "uint32"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 175
			, "value": "u32A"
		}
		, "right": {
			"": "u32B"
			, "kind": ".variable"
			, "type": "uint32"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 175
			, "value": "u32B"
		}
	}
}, {
	"": "u32Div"
	, "kind": "variable"
	, "cast": "u32"
	, "name": "u32Div"
	, "type": "uint32"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 176
	, "size": 4
	, "offs": 948
	, "static": false
	, "const": false
	, "ast": {
		"": "u32A / u32B"
		, "kind": "/"
		, "type": "uint32"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 176
		, "left": {
			"": "u32A"
			, "kind": ".variable"
			, "type": "uint32"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 176
			, "value": "u32A"
		}
		, "right": {
			"": "u32B"
			, "kind": ".variable"
			, "type": "uint32"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 176
			, "value": "u32B"
		}
	}
}, {
	"": "u32Mod"
	, "kind": "variable"
	, "cast": "u32"
	, "name": "u32Mod"
	, "type": "uint32"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 177
	, "size": 4
	, "offs": 952
	, "static": false
	, "const": false
	, "ast": {
		"": "u32A % u32B"
		, "kind": "%"
		, "type": "uint32"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 177
		, "left": {
			"": "u32A"
			, "kind": ".variable"
			, "type": "uint32"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 177
			, "value": "u32A"
		}
		, "right": {
			"": "u32B"
			, "kind": ".variable"
			, "type": "uint32"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 177
			, "value": "u32B"
		}
	}
}, {
	"": "u32And"
	, "kind": "variable"
	, "cast": "u32"
	, "name": "u32And"
	, "type": "uint32"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 178
	, "size": 4
	, "offs": 956
	, "static": false
	, "const": false
	, "ast": {
		"": "u32A & u32B"
		, "kind": "&"
		, "type": "uint32"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 178
		, "left": {
			"": "u32A"
			, "kind": ".variable"
			, "type": "uint32"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 178
			, "value": "u32A"
		}
		, "right": {
			"": "u32B"
			, "kind": ".variable"
			, "type": "uint32"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 178
			, "value": "u32B"
		}
	}
}, {
	"": "u32Ior"
	, "kind": "variable"
	, "cast": "u32"
	, "name": "u32Ior"
	, "type": "uint32"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 179
	, "size": 4
	, "offs": 960
	, "static": false
	, "const": false
	, "ast": {
		"": "u32A | u32B"
		, "kind": "|"
		, "type": "uint32"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 179
		, "left": {
			"": "u32A"
			, "kind": ".variable"
			, "type": "uint32"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 179
			, "value": "u32A"
		}
		, "right": {
			"": "u32B"
			, "kind": ".variable"
			, "type": "uint32"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 179
			, "value": "u32B"
		}
	}
}, {
	"": "u32Xor"
	, "kind": "variable"
	, "cast": "u32"
	, "name": "u32Xor"
	, "type": "uint32"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 180
	, "size": 4
	, "offs": 964
	, "static": false
	, "const": false
	, "ast": {
		"": "u32A ^ u32B"
		, "kind": "^"
		, "type": "uint32"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 180
		, "left": {
			"": "u32A"
			, "kind": ".variable"
			, "type": "uint32"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 180
			, "value": "u32A"
		}
		, "right": {
			"": "u32B"
			, "kind": ".variable"
			, "type": "uint32"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 180
			, "value": "u32B"
		}
	}
}, {
	"": "u32Shl"
	, "kind": "variable"
	, "cast": "u32"
	, "name": "u32Shl"
	, "type": "uint32"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 181
	, "size": 4
	, "offs": 968
	, "static": false
	, "const": false
	, "ast": {
		"": "u32A << shift"
		, "kind": "<<"
		, "type": "uint32"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 181
		, "left": {
			"": "u32A"
			, "kind": ".variable"
			, "type": "uint32"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 181
			, "value": "u32A"
		}
		, "right": {
			"": "shift"
			, "kind": ".variable"
			, "type": "int32"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 181
			, "value": "shift"
		}
	}
}, {
	"": "u32Shr"
	, "kind": "variable"
	, "cast": "u32"
	, "name": "u32Shr"
	, "type": "uint32"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 182
	, "size": 4
	, "offs": 972
	, "static": false
	, "const": false
	, "ast": {
		"": "u32A >> shift"
		, "kind": ">>"
		, "type": "uint32"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 182
		, "left": {
			"": "u32A"
			, "kind": ".variable"
			, "type": "uint32"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 182
			, "value": "u32A"
		}
		, "right": {
			"": "shift"
			, "kind": ".variable"
			, "type": "int32"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 182
			, "value": "shift"
		}
	}
}, {
	"": "u32Not"
	, "kind": "variable"
	, "cast": "bool"
	, "name": "u32Not"
	, "type": "bool"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 183
	, "size": 1
	, "offs": 976
	, "static": false
	, "const": false
	, "ast": {
		"": "!(u32B)"
		, "kind": "!"
		, "type": "bool"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 183
		, "right": {
			"": "(u32B)"
			, "kind": "()"
			, "type": "bool"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 183
			, "args": [{
				"": "u32B"
				, "kind": ".variable"
				, "type": "uint32"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 183
				, "value": "u32B"
			}]
		}
	}
}, {
	"": "u32Ceq"
	, "kind": "variable"
	, "cast": "bool"
	, "name": "u32Ceq"
	, "type": "bool"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 184
	, "size": 1
	, "offs": 980
	, "static": false
	, "const": false
	, "ast": {
		"": "u32A == u32B"
		, "kind": "=="
		, "type": "bool"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 184
		, "left": {
			"": "u32A"
			, "kind": ".variable"
			, "type": "uint32"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 184
			, "value": "u32A"
		}
		, "right": {
			"": "u32B"
			, "kind": ".variable"
			, "type": "uint32"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 184
			, "value": "u32B"
		}
	}
}, {
	"": "u32Cne"
	, "kind": "variable"
	, "cast": "bool"
	, "name": "u32Cne"
	, "type": "bool"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 185
	, "size": 1
	, "offs": 984
	, "static": false
	, "const": false
	, "ast": {
		"": "u32A != u32B"
		, "kind": "!="
		, "type": "bool"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 185
		, "left": {
			"": "u32A"
			, "kind": ".variable"
			, "type": "uint32"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 185
			, "value": "u32A"
		}
		, "right": {
			"": "u32B"
			, "kind": ".variable"
			, "type": "uint32"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 185
			, "value": "u32B"
		}
	}
}, {
	"": "u32Clt"
	, "kind": "variable"
	, "cast": "bool"
	, "name": "u32Clt"
	, "type": "bool"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 186
	, "size": 1
	, "offs": 988
	, "static": false
	, "const": false
	, "ast": {
		"": "u32A < u32B"
		, "kind": "<"
		, "type": "bool"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 186
		, "left": {
			"": "u32A"
			, "kind": ".variable"
			, "type": "uint32"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 186
			, "value": "u32A"
		}
		, "right": {
			"": "u32B"
			, "kind": ".variable"
			, "type": "uint32"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 186
			, "value": "u32B"
		}
	}
}, {
	"": "u32Cle"
	, "kind": "variable"
	, "cast": "bool"
	, "name": "u32Cle"
	, "type": "bool"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 187
	, "size": 1
	, "offs": 992
	, "static": false
	, "const": false
	, "ast": {
		"": "u32A <= u32B"
		, "kind": "<="
		, "type": "bool"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 187
		, "left": {
			"": "u32A"
			, "kind": ".variable"
			, "type": "uint32"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 187
			, "value": "u32A"
		}
		, "right": {
			"": "u32B"
			, "kind": ".variable"
			, "type": "uint32"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 187
			, "value": "u32B"
		}
	}
}, {
	"": "u32Cgt"
	, "kind": "variable"
	, "cast": "bool"
	, "name": "u32Cgt"
	, "type": "bool"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 188
	, "size": 1
	, "offs": 996
	, "static": false
	, "const": false
	, "ast": {
		"": "u32A > u32B"
		, "kind": ">"
		, "type": "bool"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 188
		, "left": {
			"": "u32A"
			, "kind": ".variable"
			, "type": "uint32"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 188
			, "value": "u32A"
		}
		, "right": {
			"": "u32B"
			, "kind": ".variable"
			, "type": "uint32"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 188
			, "value": "u32B"
		}
	}
}, {
	"": "u32Cge"
	, "kind": "variable"
	, "cast": "bool"
	, "name": "u32Cge"
	, "type": "bool"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 189
	, "size": 1
	, "offs": 1000
	, "static": false
	, "const": false
	, "ast": {
		"": "u32A >= u32B"
		, "kind": ">="
		, "type": "bool"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 189
		, "left": {
			"": "u32A"
			, "kind": ".variable"
			, "type": "uint32"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 189
			, "value": "u32A"
		}
		, "right": {
			"": "u32B"
			, "kind": ".variable"
			, "type": "uint32"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 189
			, "value": "u32B"
		}
	}
}, {
	"": "i64A"
	, "kind": "variable"
	, "cast": "i64"
	, "name": "i64A"
	, "type": "int64"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 191
	, "size": 8
	, "offs": 1008
	, "static": false
	, "const": false
	, "ast": {
		"": "a"
		, "kind": ".variable"
		, "type": "float64"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 191
		, "value": "a"
	}
}, {
	"": "i64B"
	, "kind": "variable"
	, "cast": "i64"
	, "name": "i64B"
	, "type": "int64"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 192
	, "size": 8
	, "offs": 1016
	, "static": false
	, "const": false
	, "ast": {
		"": "b"
		, "kind": ".variable"
		, "type": "float64"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 192
		, "value": "b"
	}
}, {
	"": "i64Pls"
	, "kind": "variable"
	, "cast": "i64"
	, "name": "i64Pls"
	, "type": "int64"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 193
	, "size": 8
	, "offs": 1024
	, "static": false
	, "const": false
	, "ast": {
		"": "+i64B"
		, "kind": "+"
		, "type": "int64"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 193
		, "right": {
			"": "i64B"
			, "kind": ".variable"
			, "type": "int64"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 193
			, "value": "i64B"
		}
	}
}, {
	"": "i64Neg"
	, "kind": "variable"
	, "cast": "i64"
	, "name": "i64Neg"
	, "type": "int64"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 194
	, "size": 8
	, "offs": 1032
	, "static": false
	, "const": false
	, "ast": {
		"": "-i64B"
		, "kind": "-"
		, "type": "int64"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 194
		, "right": {
			"": "i64B"
			, "kind": ".variable"
			, "type": "int64"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 194
			, "value": "i64B"
		}
	}
}, {
	"": "i64Cmt"
	, "kind": "variable"
	, "cast": "i64"
	, "name": "i64Cmt"
	, "type": "int64"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 195
	, "size": 8
	, "offs": 1040
	, "static": false
	, "const": false
	, "ast": {
		"": "~i64B"
		, "kind": "~"
		, "type": "int64"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 195
		, "right": {
			"": "i64B"
			, "kind": ".variable"
			, "type": "int64"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 195
			, "value": "i64B"
		}
	}
}, {
	"": "i64Add"
	, "kind": "variable"
	, "cast": "i64"
	, "name": "i64Add"
	, "type": "int64"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 196
	, "size": 8
	, "offs": 1048
	, "static": false
	, "const": false
	, "ast": {
		"": "i64A + i64B"
		, "kind": "+"
		, "type": "int64"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 196
		, "left": {
			"": "i64A"
			, "kind": ".variable"
			, "type": "int64"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 196
			, "value": "i64A"
		}
		, "right": {
			"": "i64B"
			, "kind": ".variable"
			, "type": "int64"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 196
			, "value": "i64B"
		}
	}
}, {
	"": "i64Sub"
	, "kind": "variable"
	, "cast": "i64"
	, "name": "i64Sub"
	, "type": "int64"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 197
	, "size": 8
	, "offs": 1056
	, "static": false
	, "const": false
	, "ast": {
		"": "i64A - i64B"
		, "kind": "-"
		, "type": "int64"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 197
		, "left": {
			"": "i64A"
			, "kind": ".variable"
			, "type": "int64"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 197
			, "value": "i64A"
		}
		, "right": {
			"": "i64B"
			, "kind": ".variable"
			, "type": "int64"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 197
			, "value": "i64B"
		}
	}
}, {
	"": "i64Mul"
	, "kind": "variable"
	, "cast": "i64"
	, "name": "i64Mul"
	, "type": "int64"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 198
	, "size": 8
	, "offs": 1064
	, "static": false
	, "const": false
	, "ast": {
		"": "i64A * i64B"
		, "kind": "*"
		, "type": "int64"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 198
		, "left": {
			"": "i64A"
			, "kind": ".variable"
			, "type": "int64"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 198
			, "value": "i64A"
		}
		, "right": {
			"": "i64B"
			, "kind": ".variable"
			, "type": "int64"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 198
			, "value": "i64B"
		}
	}
}, {
	"": "i64Div"
	, "kind": "variable"
	, "cast": "i64"
	, "name": "i64Div"
	, "type": "int64"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 199
	, "size": 8
	, "offs": 1072
	, "static": false
	, "const": false
	, "ast": {
		"": "i64A / i64B"
		, "kind": "/"
		, "type": "int64"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 199
		, "left": {
			"": "i64A"
			, "kind": ".variable"
			, "type": "int64"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 199
			, "value": "i64A"
		}
		, "right": {
			"": "i64B"
			, "kind": ".variable"
			, "type": "int64"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 199
			, "value": "i64B"
		}
	}
}, {
	"": "i64Mod"
	, "kind": "variable"
	, "cast": "i64"
	, "name": "i64Mod"
	, "type": "int64"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 200
	, "size": 8
	, "offs": 1080
	, "static": false
	, "const": false
	, "ast": {
		"": "i64A % i64B"
		, "kind": "%"
		, "type": "int64"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 200
		, "left": {
			"": "i64A"
			, "kind": ".variable"
			, "type": "int64"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 200
			, "value": "i64A"
		}
		, "right": {
			"": "i64B"
			, "kind": ".variable"
			, "type": "int64"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 200
			, "value": "i64B"
		}
	}
}, {
	"": "i64And"
	, "kind": "variable"
	, "cast": "i64"
	, "name": "i64And"
	, "type": "int64"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 201
	, "size": 8
	, "offs": 1088
	, "static": false
	, "const": false
	, "ast": {
		"": "i64A & i64B"
		, "kind": "&"
		, "type": "int64"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 201
		, "left": {
			"": "i64A"
			, "kind": ".variable"
			, "type": "int64"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 201
			, "value": "i64A"
		}
		, "right": {
			"": "i64B"
			, "kind": ".variable"
			, "type": "int64"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 201
			, "value": "i64B"
		}
	}
}, {
	"": "i64Ior"
	, "kind": "variable"
	, "cast": "i64"
	, "name": "i64Ior"
	, "type": "int64"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 202
	, "size": 8
	, "offs": 1096
	, "static": false
	, "const": false
	, "ast": {
		"": "i64A | i64B"
		, "kind": "|"
		, "type": "int64"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 202
		, "left": {
			"": "i64A"
			, "kind": ".variable"
			, "type": "int64"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 202
			, "value": "i64A"
		}
		, "right": {
			"": "i64B"
			, "kind": ".variable"
			, "type": "int64"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 202
			, "value": "i64B"
		}
	}
}, {
	"": "i64Xor"
	, "kind": "variable"
	, "cast": "i64"
	, "name": "i64Xor"
	, "type": "int64"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 203
	, "size": 8
	, "offs": 1104
	, "static": false
	, "const": false
	, "ast": {
		"": "i64A ^ i64B"
		, "kind": "^"
		, "type": "int64"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 203
		, "left": {
			"": "i64A"
			, "kind": ".variable"
			, "type": "int64"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 203
			, "value": "i64A"
		}
		, "right": {
			"": "i64B"
			, "kind": ".variable"
			, "type": "int64"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 203
			, "value": "i64B"
		}
	}
}, {
	"": "i64Shl"
	, "kind": "variable"
	, "cast": "i64"
	, "name": "i64Shl"
	, "type": "int64"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 204
	, "size": 8
	, "offs": 1112
	, "static": false
	, "const": false
	, "ast": {
		"": "i64A << shift"
		, "kind": "<<"
		, "type": "int64"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 204
		, "left": {
			"": "i64A"
			, "kind": ".variable"
			, "type": "int64"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 204
			, "value": "i64A"
		}
		, "right": {
			"": "shift"
			, "kind": ".variable"
			, "type": "int32"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 204
			, "value": "shift"
		}
	}
}, {
	"": "i64Shr"
	, "kind": "variable"
	, "cast": "i64"
	, "name": "i64Shr"
	, "type": "int64"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 205
	, "size": 8
	, "offs": 1120
	, "static": false
	, "const": false
	, "ast": {
		"": "i64A >> shift"
		, "kind": ">>"
		, "type": "int64"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 205
		, "left": {
			"": "i64A"
			, "kind": ".variable"
			, "type": "int64"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 205
			, "value": "i64A"
		}
		, "right": {
			"": "shift"
			, "kind": ".variable"
			, "type": "int32"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 205
			, "value": "shift"
		}
	}
}, {
	"": "i64Not"
	, "kind": "variable"
	, "cast": "bool"
	, "name": "i64Not"
	, "type": "bool"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 206
	, "size": 1
	, "offs": 1124
	, "static": false
	, "const": false
	, "ast": {
		"": "!(i64B)"
		, "kind": "!"
		, "type": "bool"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 206
		, "right": {
			"": "(i64B)"
			, "kind": "()"
			, "type": "bool"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 206
			, "args": [{
				"": "i64B"
				, "kind": ".variable"
				, "type": "int64"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 206
				, "value": "i64B"
			}]
		}
	}
}, {
	"": "i64Ceq"
	, "kind": "variable"
	, "cast": "bool"
	, "name": "i64Ceq"
	, "type": "bool"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 207
	, "size": 1
	, "offs": 1128
	, "static": false
	, "const": false
	, "ast": {
		"": "i64A == i64B"
		, "kind": "=="
		, "type": "bool"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 207
		, "left": {
			"": "i64A"
			, "kind": ".variable"
			, "type": "int64"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 207
			, "value": "i64A"
		}
		, "right": {
			"": "i64B"
			, "kind": ".variable"
			, "type": "int64"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 207
			, "value": "i64B"
		}
	}
}, {
	"": "i64Cne"
	, "kind": "variable"
	, "cast": "bool"
	, "name": "i64Cne"
	, "type": "bool"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 208
	, "size": 1
	, "offs": 1132
	, "static": false
	, "const": false
	, "ast": {
		"": "i64A != i64B"
		, "kind": "!="
		, "type": "bool"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 208
		, "left": {
			"": "i64A"
			, "kind": ".variable"
			, "type": "int64"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 208
			, "value": "i64A"
		}
		, "right": {
			"": "i64B"
			, "kind": ".variable"
			, "type": "int64"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 208
			, "value": "i64B"
		}
	}
}, {
	"": "i64Clt"
	, "kind": "variable"
	, "cast": "bool"
	, "name": "i64Clt"
	, "type": "bool"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 209
	, "size": 1
	, "offs": 1136
	, "static": false
	, "const": false
	, "ast": {
		"": "i64A < i64B"
		, "kind": "<"
		, "type": "bool"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 209
		, "left": {
			"": "i64A"
			, "kind": ".variable"
			, "type": "int64"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 209
			, "value": "i64A"
		}
		, "right": {
			"": "i64B"
			, "kind": ".variable"
			, "type": "int64"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 209
			, "value": "i64B"
		}
	}
}, {
	"": "i64Cle"
	, "kind": "variable"
	, "cast": "bool"
	, "name": "i64Cle"
	, "type": "bool"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 210
	, "size": 1
	, "offs": 1140
	, "static": false
	, "const": false
	, "ast": {
		"": "i64A <= i64B"
		, "kind": "<="
		, "type": "bool"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 210
		, "left": {
			"": "i64A"
			, "kind": ".variable"
			, "type": "int64"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 210
			, "value": "i64A"
		}
		, "right": {
			"": "i64B"
			, "kind": ".variable"
			, "type": "int64"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 210
			, "value": "i64B"
		}
	}
}, {
	"": "i64Cgt"
	, "kind": "variable"
	, "cast": "bool"
	, "name": "i64Cgt"
	, "type": "bool"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 211
	, "size": 1
	, "offs": 1144
	, "static": false
	, "const": false
	, "ast": {
		"": "i64A > i64B"
		, "kind": ">"
		, "type": "bool"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 211
		, "left": {
			"": "i64A"
			, "kind": ".variable"
			, "type": "int64"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 211
			, "value": "i64A"
		}
		, "right": {
			"": "i64B"
			, "kind": ".variable"
			, "type": "int64"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 211
			, "value": "i64B"
		}
	}
}, {
	"": "i64Cge"
	, "kind": "variable"
	, "cast": "bool"
	, "name": "i64Cge"
	, "type": "bool"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 212
	, "size": 1
	, "offs": 1148
	, "static": false
	, "const": false
	, "ast": {
		"": "i64A >= i64B"
		, "kind": ">="
		, "type": "bool"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 212
		, "left": {
			"": "i64A"
			, "kind": ".variable"
			, "type": "int64"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 212
			, "value": "i64A"
		}
		, "right": {
			"": "i64B"
			, "kind": ".variable"
			, "type": "int64"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 212
			, "value": "i64B"
		}
	}
}, {
	"": "u64A"
	, "kind": "variable"
	, "cast": "u64"
	, "name": "u64A"
	, "type": "uint64"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 214
	, "size": 8
	, "offs": 1156
	, "static": false
	, "const": false
	, "ast": {
		"": "a"
		, "kind": ".variable"
		, "type": "float64"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 214
		, "value": "a"
	}
}, {
	"": "u64B"
	, "kind": "variable"
	, "cast": "u64"
	, "name": "u64B"
	, "type": "uint64"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 215
	, "size": 8
	, "offs": 1164
	, "static": false
	, "const": false
	, "ast": {
		"": "b"
		, "kind": ".variable"
		, "type": "float64"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 215
		, "value": "b"
	}
}, {
	"": "u64Pls"
	, "kind": "variable"
	, "cast": "u64"
	, "name": "u64Pls"
	, "type": "uint64"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 216
	, "size": 8
	, "offs": 1172
	, "static": false
	, "const": false
	, "ast": {
		"": "+u64B"
		, "kind": "+"
		, "type": "uint64"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 216
		, "right": {
			"": "u64B"
			, "kind": ".variable"
			, "type": "uint64"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 216
			, "value": "u64B"
		}
	}
}, {
	"": "u64Neg"
	, "kind": "variable"
	, "cast": "u64"
	, "name": "u64Neg"
	, "type": "uint64"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 217
	, "size": 8
	, "offs": 1180
	, "static": false
	, "const": false
	, "ast": {
		"": "-u64B"
		, "kind": "-"
		, "type": "uint64"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 217
		, "right": {
			"": "u64B"
			, "kind": ".variable"
			, "type": "uint64"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 217
			, "value": "u64B"
		}
	}
}, {
	"": "u64Cmt"
	, "kind": "variable"
	, "cast": "u64"
	, "name": "u64Cmt"
	, "type": "uint64"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 218
	, "size": 8
	, "offs": 1188
	, "static": false
	, "const": false
	, "ast": {
		"": "~u64B"
		, "kind": "~"
		, "type": "uint64"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 218
		, "right": {
			"": "u64B"
			, "kind": ".variable"
			, "type": "uint64"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 218
			, "value": "u64B"
		}
	}
}, {
	"": "u64Add"
	, "kind": "variable"
	, "cast": "u64"
	, "name": "u64Add"
	, "type": "uint64"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 219
	, "size": 8
	, "offs": 1196
	, "static": false
	, "const": false
	, "ast": {
		"": "u64A + u64B"
		, "kind": "+"
		, "type": "uint64"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 219
		, "left": {
			"": "u64A"
			, "kind": ".variable"
			, "type": "uint64"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 219
			, "value": "u64A"
		}
		, "right": {
			"": "u64B"
			, "kind": ".variable"
			, "type": "uint64"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 219
			, "value": "u64B"
		}
	}
}, {
	"": "u64Sub"
	, "kind": "variable"
	, "cast": "u64"
	, "name": "u64Sub"
	, "type": "uint64"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 220
	, "size": 8
	, "offs": 1204
	, "static": false
	, "const": false
	, "ast": {
		"": "u64A - u64B"
		, "kind": "-"
		, "type": "uint64"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 220
		, "left": {
			"": "u64A"
			, "kind": ".variable"
			, "type": "uint64"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 220
			, "value": "u64A"
		}
		, "right": {
			"": "u64B"
			, "kind": ".variable"
			, "type": "uint64"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 220
			, "value": "u64B"
		}
	}
}, {
	"": "u64Mul"
	, "kind": "variable"
	, "cast": "u64"
	, "name": "u64Mul"
	, "type": "uint64"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 221
	, "size": 8
	, "offs": 1212
	, "static": false
	, "const": false
	, "ast": {
		"": "u64A * u64B"
		, "kind": "*"
		, "type": "uint64"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 221
		, "left": {
			"": "u64A"
			, "kind": ".variable"
			, "type": "uint64"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 221
			, "value": "u64A"
		}
		, "right": {
			"": "u64B"
			, "kind": ".variable"
			, "type": "uint64"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 221
			, "value": "u64B"
		}
	}
}, {
	"": "u64Div"
	, "kind": "variable"
	, "cast": "u64"
	, "name": "u64Div"
	, "type": "uint64"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 222
	, "size": 8
	, "offs": 1220
	, "static": false
	, "const": false
	, "ast": {
		"": "u64A / u64B"
		, "kind": "/"
		, "type": "uint64"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 222
		, "left": {
			"": "u64A"
			, "kind": ".variable"
			, "type": "uint64"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 222
			, "value": "u64A"
		}
		, "right": {
			"": "u64B"
			, "kind": ".variable"
			, "type": "uint64"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 222
			, "value": "u64B"
		}
	}
}, {
	"": "u64Mod"
	, "kind": "variable"
	, "cast": "u64"
	, "name": "u64Mod"
	, "type": "uint64"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 223
	, "size": 8
	, "offs": 1228
	, "static": false
	, "const": false
	, "ast": {
		"": "u64A % u64B"
		, "kind": "%"
		, "type": "uint64"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 223
		, "left": {
			"": "u64A"
			, "kind": ".variable"
			, "type": "uint64"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 223
			, "value": "u64A"
		}
		, "right": {
			"": "u64B"
			, "kind": ".variable"
			, "type": "uint64"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 223
			, "value": "u64B"
		}
	}
}, {
	"": "u64And"
	, "kind": "variable"
	, "cast": "u64"
	, "name": "u64And"
	, "type": "uint64"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 224
	, "size": 8
	, "offs": 1236
	, "static": false
	, "const": false
	, "ast": {
		"": "u64A & u64B"
		, "kind": "&"
		, "type": "uint64"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 224
		, "left": {
			"": "u64A"
			, "kind": ".variable"
			, "type": "uint64"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 224
			, "value": "u64A"
		}
		, "right": {
			"": "u64B"
			, "kind": ".variable"
			, "type": "uint64"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 224
			, "value": "u64B"
		}
	}
}, {
	"": "u64Ior"
	, "kind": "variable"
	, "cast": "u64"
	, "name": "u64Ior"
	, "type": "uint64"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 225
	, "size": 8
	, "offs": 1244
	, "static": false
	, "const": false
	, "ast": {
		"": "u64A | u64B"
		, "kind": "|"
		, "type": "uint64"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 225
		, "left": {
			"": "u64A"
			, "kind": ".variable"
			, "type": "uint64"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 225
			, "value": "u64A"
		}
		, "right": {
			"": "u64B"
			, "kind": ".variable"
			, "type": "uint64"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 225
			, "value": "u64B"
		}
	}
}, {
	"": "u64Xor"
	, "kind": "variable"
	, "cast": "u64"
	, "name": "u64Xor"
	, "type": "uint64"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 226
	, "size": 8
	, "offs": 1252
	, "static": false
	, "const": false
	, "ast": {
		"": "u64A ^ u64B"
		, "kind": "^"
		, "type": "uint64"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 226
		, "left": {
			"": "u64A"
			, "kind": ".variable"
			, "type": "uint64"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 226
			, "value": "u64A"
		}
		, "right": {
			"": "u64B"
			, "kind": ".variable"
			, "type": "uint64"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 226
			, "value": "u64B"
		}
	}
}, {
	"": "u64Shl"
	, "kind": "variable"
	, "cast": "u64"
	, "name": "u64Shl"
	, "type": "uint64"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 227
	, "size": 8
	, "offs": 1260
	, "static": false
	, "const": false
	, "ast": {
		"": "u64A << shift"
		, "kind": "<<"
		, "type": "uint64"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 227
		, "left": {
			"": "u64A"
			, "kind": ".variable"
			, "type": "uint64"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 227
			, "value": "u64A"
		}
		, "right": {
			"": "shift"
			, "kind": ".variable"
			, "type": "int32"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 227
			, "value": "shift"
		}
	}
}, {
	"": "u64Shr"
	, "kind": "variable"
	, "cast": "u64"
	, "name": "u64Shr"
	, "type": "uint64"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 228
	, "size": 8
	, "offs": 1268
	, "static": false
	, "const": false
	, "ast": {
		"": "u64A >> shift"
		, "kind": ">>"
		, "type": "uint64"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 228
		, "left": {
			"": "u64A"
			, "kind": ".variable"
			, "type": "uint64"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 228
			, "value": "u64A"
		}
		, "right": {
			"": "shift"
			, "kind": ".variable"
			, "type": "int32"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 228
			, "value": "shift"
		}
	}
}, {
	"": "u64Not"
	, "kind": "variable"
	, "cast": "bool"
	, "name": "u64Not"
	, "type": "bool"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 229
	, "size": 1
	, "offs": 1272
	, "static": false
	, "const": false
	, "ast": {
		"": "!(u64B)"
		, "kind": "!"
		, "type": "bool"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 229
		, "right": {
			"": "(u64B)"
			, "kind": "()"
			, "type": "bool"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 229
			, "args": [{
				"": "u64B"
				, "kind": ".variable"
				, "type": "uint64"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 229
				, "value": "u64B"
			}]
		}
	}
}, {
	"": "u64Ceq"
	, "kind": "variable"
	, "cast": "bool"
	, "name": "u64Ceq"
	, "type": "bool"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 230
	, "size": 1
	, "offs": 1276
	, "static": false
	, "const": false
	, "ast": {
		"": "u64A == u64B"
		, "kind": "=="
		, "type": "bool"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 230
		, "left": {
			"": "u64A"
			, "kind": ".variable"
			, "type": "uint64"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 230
			, "value": "u64A"
		}
		, "right": {
			"": "u64B"
			, "kind": ".variable"
			, "type": "uint64"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 230
			, "value": "u64B"
		}
	}
}, {
	"": "u64Cne"
	, "kind": "variable"
	, "cast": "bool"
	, "name": "u64Cne"
	, "type": "bool"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 231
	, "size": 1
	, "offs": 1280
	, "static": false
	, "const": false
	, "ast": {
		"": "u64A != u64B"
		, "kind": "!="
		, "type": "bool"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 231
		, "left": {
			"": "u64A"
			, "kind": ".variable"
			, "type": "uint64"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 231
			, "value": "u64A"
		}
		, "right": {
			"": "u64B"
			, "kind": ".variable"
			, "type": "uint64"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 231
			, "value": "u64B"
		}
	}
}, {
	"": "u64Clt"
	, "kind": "variable"
	, "cast": "bool"
	, "name": "u64Clt"
	, "type": "bool"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 232
	, "size": 1
	, "offs": 1284
	, "static": false
	, "const": false
	, "ast": {
		"": "u64A < u64B"
		, "kind": "<"
		, "type": "bool"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 232
		, "left": {
			"": "u64A"
			, "kind": ".variable"
			, "type": "uint64"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 232
			, "value": "u64A"
		}
		, "right": {
			"": "u64B"
			, "kind": ".variable"
			, "type": "uint64"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 232
			, "value": "u64B"
		}
	}
}, {
	"": "u64Cle"
	, "kind": "variable"
	, "cast": "bool"
	, "name": "u64Cle"
	, "type": "bool"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 233
	, "size": 1
	, "offs": 1288
	, "static": false
	, "const": false
	, "ast": {
		"": "u64A <= u64B"
		, "kind": "<="
		, "type": "bool"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 233
		, "left": {
			"": "u64A"
			, "kind": ".variable"
			, "type": "uint64"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 233
			, "value": "u64A"
		}
		, "right": {
			"": "u64B"
			, "kind": ".variable"
			, "type": "uint64"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 233
			, "value": "u64B"
		}
	}
}, {
	"": "u64Cgt"
	, "kind": "variable"
	, "cast": "bool"
	, "name": "u64Cgt"
	, "type": "bool"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 234
	, "size": 1
	, "offs": 1292
	, "static": false
	, "const": false
	, "ast": {
		"": "u64A > u64B"
		, "kind": ">"
		, "type": "bool"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 234
		, "left": {
			"": "u64A"
			, "kind": ".variable"
			, "type": "uint64"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 234
			, "value": "u64A"
		}
		, "right": {
			"": "u64B"
			, "kind": ".variable"
			, "type": "uint64"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 234
			, "value": "u64B"
		}
	}
}, {
	"": "u64Cge"
	, "kind": "variable"
	, "cast": "bool"
	, "name": "u64Cge"
	, "type": "bool"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 235
	, "size": 1
	, "offs": 1296
	, "static": false
	, "const": false
	, "ast": {
		"": "u64A >= u64B"
		, "kind": ">="
		, "type": "bool"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 235
		, "left": {
			"": "u64A"
			, "kind": ".variable"
			, "type": "uint64"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 235
			, "value": "u64A"
		}
		, "right": {
			"": "u64B"
			, "kind": ".variable"
			, "type": "uint64"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 235
			, "value": "u64B"
		}
	}
}, {
	"": "f32A"
	, "kind": "variable"
	, "cast": "f32"
	, "name": "f32A"
	, "type": "float32"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 237
	, "size": 4
	, "offs": 1300
	, "static": false
	, "const": false
	, "ast": {
		"": "a"
		, "kind": ".variable"
		, "type": "float64"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 237
		, "value": "a"
	}
}, {
	"": "f32B"
	, "kind": "variable"
	, "cast": "f32"
	, "name": "f32B"
	, "type": "float32"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 238
	, "size": 4
	, "offs": 1304
	, "static": false
	, "const": false
	, "ast": {
		"": "b"
		, "kind": ".variable"
		, "type": "float64"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 238
		, "value": "b"
	}
}, {
	"": "f32Pls"
	, "kind": "variable"
	, "cast": "f32"
	, "name": "f32Pls"
	, "type": "float32"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 239
	, "size": 4
	, "offs": 1308
	, "static": false
	, "const": false
	, "ast": {
		"": "+f32B"
		, "kind": "+"
		, "type": "float32"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 239
		, "right": {
			"": "f32B"
			, "kind": ".variable"
			, "type": "float32"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 239
			, "value": "f32B"
		}
	}
}, {
	"": "f32Neg"
	, "kind": "variable"
	, "cast": "f32"
	, "name": "f32Neg"
	, "type": "float32"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 240
	, "size": 4
	, "offs": 1312
	, "static": false
	, "const": false
	, "ast": {
		"": "-f32B"
		, "kind": "-"
		, "type": "float32"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 240
		, "right": {
			"": "f32B"
			, "kind": ".variable"
			, "type": "float32"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 240
			, "value": "f32B"
		}
	}
}, {
	"": "f32Add"
	, "kind": "variable"
	, "cast": "f32"
	, "name": "f32Add"
	, "type": "float32"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 242
	, "size": 4
	, "offs": 1316
	, "static": false
	, "const": false
	, "ast": {
		"": "f32A + f32B"
		, "kind": "+"
		, "type": "float32"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 242
		, "left": {
			"": "f32A"
			, "kind": ".variable"
			, "type": "float32"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 242
			, "value": "f32A"
		}
		, "right": {
			"": "f32B"
			, "kind": ".variable"
			, "type": "float32"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 242
			, "value": "f32B"
		}
	}
}, {
	"": "f32Sub"
	, "kind": "variable"
	, "cast": "f32"
	, "name": "f32Sub"
	, "type": "float32"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 243
	, "size": 4
	, "offs": 1320
	, "static": false
	, "const": false
	, "ast": {
		"": "f32A - f32B"
		, "kind": "-"
		, "type": "float32"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 243
		, "left": {
			"": "f32A"
			, "kind": ".variable"
			, "type": "float32"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 243
			, "value": "f32A"
		}
		, "right": {
			"": "f32B"
			, "kind": ".variable"
			, "type": "float32"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 243
			, "value": "f32B"
		}
	}
}, {
	"": "f32Mul"
	, "kind": "variable"
	, "cast": "f32"
	, "name": "f32Mul"
	, "type": "float32"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 244
	, "size": 4
	, "offs": 1324
	, "static": false
	, "const": false
	, "ast": {
		"": "f32A * f32B"
		, "kind": "*"
		, "type": "float32"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 244
		, "left": {
			"": "f32A"
			, "kind": ".variable"
			, "type": "float32"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 244
			, "value": "f32A"
		}
		, "right": {
			"": "f32B"
			, "kind": ".variable"
			, "type": "float32"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 244
			, "value": "f32B"
		}
	}
}, {
	"": "f32Div"
	, "kind": "variable"
	, "cast": "f32"
	, "name": "f32Div"
	, "type": "float32"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 245
	, "size": 4
	, "offs": 1328
	, "static": false
	, "const": false
	, "ast": {
		"": "f32A / f32B"
		, "kind": "/"
		, "type": "float32"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 245
		, "left": {
			"": "f32A"
			, "kind": ".variable"
			, "type": "float32"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 245
			, "value": "f32A"
		}
		, "right": {
			"": "f32B"
			, "kind": ".variable"
			, "type": "float32"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 245
			, "value": "f32B"
		}
	}
}, {
	"": "f32Mod"
	, "kind": "variable"
	, "cast": "f32"
	, "name": "f32Mod"
	, "type": "float32"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 246
	, "size": 4
	, "offs": 1332
	, "static": false
	, "const": false
	, "ast": {
		"": "f32A % f32B"
		, "kind": "%"
		, "type": "float32"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 246
		, "left": {
			"": "f32A"
			, "kind": ".variable"
			, "type": "float32"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 246
			, "value": "f32A"
		}
		, "right": {
			"": "f32B"
			, "kind": ".variable"
			, "type": "float32"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 246
			, "value": "f32B"
		}
	}
}, {
	"": "f32Not"
	, "kind": "variable"
	, "cast": "bool"
	, "name": "f32Not"
	, "type": "bool"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 252
	, "size": 1
	, "offs": 1336
	, "static": false
	, "const": false
	, "ast": {
		"": "!(f32B)"
		, "kind": "!"
		, "type": "bool"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 252
		, "right": {
			"": "(f32B)"
			, "kind": "()"
			, "type": "bool"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 252
			, "args": [{
				"": "f32B"
				, "kind": ".variable"
				, "type": "float32"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 252
				, "value": "f32B"
			}]
		}
	}
}, {
	"": "f32Ceq"
	, "kind": "variable"
	, "cast": "bool"
	, "name": "f32Ceq"
	, "type": "bool"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 253
	, "size": 1
	, "offs": 1340
	, "static": false
	, "const": false
	, "ast": {
		"": "f32A == f32B"
		, "kind": "=="
		, "type": "bool"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 253
		, "left": {
			"": "f32A"
			, "kind": ".variable"
			, "type": "float32"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 253
			, "value": "f32A"
		}
		, "right": {
			"": "f32B"
			, "kind": ".variable"
			, "type": "float32"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 253
			, "value": "f32B"
		}
	}
}, {
	"": "f32Cne"
	, "kind": "variable"
	, "cast": "bool"
	, "name": "f32Cne"
	, "type": "bool"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 254
	, "size": 1
	, "offs": 1344
	, "static": false
	, "const": false
	, "ast": {
		"": "f32A != f32B"
		, "kind": "!="
		, "type": "bool"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 254
		, "left": {
			"": "f32A"
			, "kind": ".variable"
			, "type": "float32"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 254
			, "value": "f32A"
		}
		, "right": {
			"": "f32B"
			, "kind": ".variable"
			, "type": "float32"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 254
			, "value": "f32B"
		}
	}
}, {
	"": "f32Clt"
	, "kind": "variable"
	, "cast": "bool"
	, "name": "f32Clt"
	, "type": "bool"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 255
	, "size": 1
	, "offs": 1348
	, "static": false
	, "const": false
	, "ast": {
		"": "f32A < f32B"
		, "kind": "<"
		, "type": "bool"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 255
		, "left": {
			"": "f32A"
			, "kind": ".variable"
			, "type": "float32"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 255
			, "value": "f32A"
		}
		, "right": {
			"": "f32B"
			, "kind": ".variable"
			, "type": "float32"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 255
			, "value": "f32B"
		}
	}
}, {
	"": "f32Cle"
	, "kind": "variable"
	, "cast": "bool"
	, "name": "f32Cle"
	, "type": "bool"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 256
	, "size": 1
	, "offs": 1352
	, "static": false
	, "const": false
	, "ast": {
		"": "f32A <= f32B"
		, "kind": "<="
		, "type": "bool"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 256
		, "left": {
			"": "f32A"
			, "kind": ".variable"
			, "type": "float32"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 256
			, "value": "f32A"
		}
		, "right": {
			"": "f32B"
			, "kind": ".variable"
			, "type": "float32"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 256
			, "value": "f32B"
		}
	}
}, {
	"": "f32Cgt"
	, "kind": "variable"
	, "cast": "bool"
	, "name": "f32Cgt"
	, "type": "bool"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 257
	, "size": 1
	, "offs": 1356
	, "static": false
	, "const": false
	, "ast": {
		"": "f32A > f32B"
		, "kind": ">"
		, "type": "bool"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 257
		, "left": {
			"": "f32A"
			, "kind": ".variable"
			, "type": "float32"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 257
			, "value": "f32A"
		}
		, "right": {
			"": "f32B"
			, "kind": ".variable"
			, "type": "float32"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 257
			, "value": "f32B"
		}
	}
}, {
	"": "f32Cge"
	, "kind": "variable"
	, "cast": "bool"
	, "name": "f32Cge"
	, "type": "bool"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 258
	, "size": 1
	, "offs": 1360
	, "static": false
	, "const": false
	, "ast": {
		"": "f32A >= f32B"
		, "kind": ">="
		, "type": "bool"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 258
		, "left": {
			"": "f32A"
			, "kind": ".variable"
			, "type": "float32"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 258
			, "value": "f32A"
		}
		, "right": {
			"": "f32B"
			, "kind": ".variable"
			, "type": "float32"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 258
			, "value": "f32B"
		}
	}
}, {
	"": "f64A"
	, "kind": "variable"
	, "cast": "f64"
	, "name": "f64A"
	, "type": "float64"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 260
	, "size": 8
	, "offs": 1368
	, "static": false
	, "const": false
	, "ast": {
		"": "a"
		, "kind": ".variable"
		, "type": "float64"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 260
		, "value": "a"
	}
}, {
	"": "f64B"
	, "kind": "variable"
	, "cast": "f64"
	, "name": "f64B"
	, "type": "float64"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 261
	, "size": 8
	, "offs": 1376
	, "static": false
	, "const": false
	, "ast": {
		"": "b"
		, "kind": ".variable"
		, "type": "float64"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 261
		, "value": "b"
	}
}, {
	"": "f64Pls"
	, "kind": "variable"
	, "cast": "f64"
	, "name": "f64Pls"
	, "type": "float64"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 262
	, "size": 8
	, "offs": 1384
	, "static": false
	, "const": false
	, "ast": {
		"": "+f64B"
		, "kind": "+"
		, "type": "float64"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 262
		, "right": {
			"": "f64B"
			, "kind": ".variable"
			, "type": "float64"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 262
			, "value": "f64B"
		}
	}
}, {
	"": "f64Neg"
	, "kind": "variable"
	, "cast": "f64"
	, "name": "f64Neg"
	, "type": "float64"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 263
	, "size": 8
	, "offs": 1392
	, "static": false
	, "const": false
	, "ast": {
		"": "-f64B"
		, "kind": "-"
		, "type": "float64"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 263
		, "right": {
			"": "f64B"
			, "kind": ".variable"
			, "type": "float64"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 263
			, "value": "f64B"
		}
	}
}, {
	"": "f64Add"
	, "kind": "variable"
	, "cast": "f64"
	, "name": "f64Add"
	, "type": "float64"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 265
	, "size": 8
	, "offs": 1400
	, "static": false
	, "const": false
	, "ast": {
		"": "f64A + f64B"
		, "kind": "+"
		, "type": "float64"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 265
		, "left": {
			"": "f64A"
			, "kind": ".variable"
			, "type": "float64"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 265
			, "value": "f64A"
		}
		, "right": {
			"": "f64B"
			, "kind": ".variable"
			, "type": "float64"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 265
			, "value": "f64B"
		}
	}
}, {
	"": "f64Sub"
	, "kind": "variable"
	, "cast": "f64"
	, "name": "f64Sub"
	, "type": "float64"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 266
	, "size": 8
	, "offs": 1408
	, "static": false
	, "const": false
	, "ast": {
		"": "f64A - f64B"
		, "kind": "-"
		, "type": "float64"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 266
		, "left": {
			"": "f64A"
			, "kind": ".variable"
			, "type": "float64"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 266
			, "value": "f64A"
		}
		, "right": {
			"": "f64B"
			, "kind": ".variable"
			, "type": "float64"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 266
			, "value": "f64B"
		}
	}
}, {
	"": "f64Mul"
	, "kind": "variable"
	, "cast": "f64"
	, "name": "f64Mul"
	, "type": "float64"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 267
	, "size": 8
	, "offs": 1416
	, "static": false
	, "const": false
	, "ast": {
		"": "f64A * f64B"
		, "kind": "*"
		, "type": "float64"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 267
		, "left": {
			"": "f64A"
			, "kind": ".variable"
			, "type": "float64"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 267
			, "value": "f64A"
		}
		, "right": {
			"": "f64B"
			, "kind": ".variable"
			, "type": "float64"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 267
			, "value": "f64B"
		}
	}
}, {
	"": "f64Div"
	, "kind": "variable"
	, "cast": "f64"
	, "name": "f64Div"
	, "type": "float64"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 268
	, "size": 8
	, "offs": 1424
	, "static": false
	, "const": false
	, "ast": {
		"": "f64A / f64B"
		, "kind": "/"
		, "type": "float64"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 268
		, "left": {
			"": "f64A"
			, "kind": ".variable"
			, "type": "float64"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 268
			, "value": "f64A"
		}
		, "right": {
			"": "f64B"
			, "kind": ".variable"
			, "type": "float64"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 268
			, "value": "f64B"
		}
	}
}, {
	"": "f64Mod"
	, "kind": "variable"
	, "cast": "f64"
	, "name": "f64Mod"
	, "type": "float64"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 269
	, "size": 8
	, "offs": 1432
	, "static": false
	, "const": false
	, "ast": {
		"": "f64A % f64B"
		, "kind": "%"
		, "type": "float64"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 269
		, "left": {
			"": "f64A"
			, "kind": ".variable"
			, "type": "float64"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 269
			, "value": "f64A"
		}
		, "right": {
			"": "f64B"
			, "kind": ".variable"
			, "type": "float64"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 269
			, "value": "f64B"
		}
	}
}, {
	"": "f64Not"
	, "kind": "variable"
	, "cast": "bool"
	, "name": "f64Not"
	, "type": "bool"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 275
	, "size": 1
	, "offs": 1436
	, "static": false
	, "const": false
	, "ast": {
		"": "!(f64B)"
		, "kind": "!"
		, "type": "bool"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 275
		, "right": {
			"": "(f64B)"
			, "kind": "()"
			, "type": "bool"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 275
			, "args": [{
				"": "f64B"
				, "kind": ".variable"
				, "type": "float64"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 275
				, "value": "f64B"
			}]
		}
	}
}, {
	"": "f64Ceq"
	, "kind": "variable"
	, "cast": "bool"
	, "name": "f64Ceq"
	, "type": "bool"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 276
	, "size": 1
	, "offs": 1440
	, "static": false
	, "const": false
	, "ast": {
		"": "f64A == f64B"
		, "kind": "=="
		, "type": "bool"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 276
		, "left": {
			"": "f64A"
			, "kind": ".variable"
			, "type": "float64"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 276
			, "value": "f64A"
		}
		, "right": {
			"": "f64B"
			, "kind": ".variable"
			, "type": "float64"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 276
			, "value": "f64B"
		}
	}
}, {
	"": "f64Cne"
	, "kind": "variable"
	, "cast": "bool"
	, "name": "f64Cne"
	, "type": "bool"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 277
	, "size": 1
	, "offs": 1444
	, "static": false
	, "const": false
	, "ast": {
		"": "f64A != f64B"
		, "kind": "!="
		, "type": "bool"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 277
		, "left": {
			"": "f64A"
			, "kind": ".variable"
			, "type": "float64"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 277
			, "value": "f64A"
		}
		, "right": {
			"": "f64B"
			, "kind": ".variable"
			, "type": "float64"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 277
			, "value": "f64B"
		}
	}
}, {
	"": "f64Clt"
	, "kind": "variable"
	, "cast": "bool"
	, "name": "f64Clt"
	, "type": "bool"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 278
	, "size": 1
	, "offs": 1448
	, "static": false
	, "const": false
	, "ast": {
		"": "f64A < f64B"
		, "kind": "<"
		, "type": "bool"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 278
		, "left": {
			"": "f64A"
			, "kind": ".variable"
			, "type": "float64"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 278
			, "value": "f64A"
		}
		, "right": {
			"": "f64B"
			, "kind": ".variable"
			, "type": "float64"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 278
			, "value": "f64B"
		}
	}
}, {
	"": "f64Cle"
	, "kind": "variable"
	, "cast": "bool"
	, "name": "f64Cle"
	, "type": "bool"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 279
	, "size": 1
	, "offs": 1452
	, "static": false
	, "const": false
	, "ast": {
		"": "f64A <= f64B"
		, "kind": "<="
		, "type": "bool"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 279
		, "left": {
			"": "f64A"
			, "kind": ".variable"
			, "type": "float64"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 279
			, "value": "f64A"
		}
		, "right": {
			"": "f64B"
			, "kind": ".variable"
			, "type": "float64"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 279
			, "value": "f64B"
		}
	}
}, {
	"": "f64Cgt"
	, "kind": "variable"
	, "cast": "bool"
	, "name": "f64Cgt"
	, "type": "bool"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 280
	, "size": 1
	, "offs": 1456
	, "static": false
	, "const": false
	, "ast": {
		"": "f64A > f64B"
		, "kind": ">"
		, "type": "bool"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 280
		, "left": {
			"": "f64A"
			, "kind": ".variable"
			, "type": "float64"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 280
			, "value": "f64A"
		}
		, "right": {
			"": "f64B"
			, "kind": ".variable"
			, "type": "float64"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 280
			, "value": "f64B"
		}
	}
}, {
	"": "f64Cge"
	, "kind": "variable"
	, "cast": "bool"
	, "name": "f64Cge"
	, "type": "bool"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 281
	, "size": 1
	, "offs": 1460
	, "static": false
	, "const": false
	, "ast": {
		"": "f64A >= f64B"
		, "kind": ">="
		, "type": "bool"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 281
		, "left": {
			"": "f64A"
			, "kind": ".variable"
			, "type": "float64"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 281
			, "value": "f64A"
		}
		, "right": {
			"": "f64B"
			, "kind": ".variable"
			, "type": "float64"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 281
			, "value": "f64B"
		}
	}
}, {
	"": "ptrA"
	, "kind": "variable"
	, "cast": "ref"
	, "name": "ptrA"
	, "type": "pointer"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 283
	, "size": 4
	, "offs": 1464
	, "static": false
	, "const": false
	, "ast": {
		"": "null"
		, "kind": ".variable"
		, "type": "pointer"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 283
		, "value": "null"
	}
}, {
	"": "ptrB"
	, "kind": "variable"
	, "cast": "ref"
	, "name": "ptrB"
	, "type": "pointer"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 284
	, "size": 4
	, "offs": 1468
	, "static": false
	, "const": false
	, "ast": {
		"": "pointer(shift)"
		, "kind": "()"
		, "type": "pointer"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 284
		, "args": [{
			"": "shift"
			, "kind": ".variable"
			, "type": "int32"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 284
			, "value": "shift"
		}]
	}
}, {
	"": "ptrCeq"
	, "kind": "variable"
	, "cast": "bool"
	, "name": "ptrCeq"
	, "type": "bool"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 299
	, "size": 1
	, "offs": 1472
	, "static": false
	, "const": false
	, "ast": {
		"": "ptrA == ptrB"
		, "kind": "=="
		, "type": "bool"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 299
		, "left": {
			"": "ptrA"
			, "kind": ".variable"
			, "type": "pointer"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 299
			, "value": "ptrA"
		}
		, "right": {
			"": "ptrB"
			, "kind": ".variable"
			, "type": "pointer"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 299
			, "value": "ptrB"
		}
	}
}, {
	"": "ptrCne"
	, "kind": "variable"
	, "cast": "bool"
	, "name": "ptrCne"
	, "type": "bool"
	, "file": "extras/Tests/lang.useOperator.ci"
	, "line": 300
	, "size": 1
	, "offs": 1476
	, "static": false
	, "const": false
	, "ast": {
		"": "ptrA != ptrB"
		, "kind": "!="
		, "type": "bool"
		, "file": "extras/Tests/lang.useOperator.ci"
		, "line": 300
		, "left": {
			"": "ptrA"
			, "kind": ".variable"
			, "type": "pointer"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 300
			, "value": "ptrA"
		}
		, "right": {
			"": "ptrB"
			, "kind": ".variable"
			, "type": "pointer"
			, "file": "extras/Tests/lang.useOperator.ci"
			, "line": 300
			, "value": "ptrB"
		}
	}
}, {
	"": "arrFixedNoInit"
	, "kind": "variable"
	, "cast": "val"
	, "name": "arrFixedNoInit"
	, "type": "int64[7]"
	, "file": "extras/Tests/lang.varInitArray.ci"
	, "line": 8
	, "size": 56
	, "offs": 1532
	, "static": false
	, "const": false
}, {
	"": "arrSliceNoInit"
	, "kind": "variable"
	, "cast": "arr"
	, "name": "arrSliceNoInit"
	, "type": "int64[]"
	, "file": "extras/Tests/lang.varInitArray.ci"
	, "line": 9
	, "size": 8
	, "offs": 1540
	, "static": false
	, "const": false
}, {
	"": "arrPtrNoInit"
	, "kind": "variable"
	, "cast": "ref"
	, "name": "arrPtrNoInit"
	, "type": "int64[*]"
	, "file": "extras/Tests/lang.varInitArray.ci"
	, "line": 10
	, "size": 4
	, "offs": 1544
	, "static": false
	, "const": false
}, {
	"": "arrSliceInitNull"
	, "kind": "variable"
	, "cast": "arr"
	, "name": "arrSliceInitNull"
	, "type": "int64[]"
	, "file": "extras/Tests/lang.varInitArray.ci"
	, "line": 13
	, "size": 8
	, "offs": 1552
	, "static": false
	, "const": false
	, "ast": {
		"": "null"
		, "kind": ".variable"
		, "type": "pointer"
		, "file": "extras/Tests/lang.varInitArray.ci"
		, "line": 13
		, "value": "null"
	}
}, {
	"": "arrPtrInitNull"
	, "kind": "variable"
	, "cast": "ref"
	, "name": "arrPtrInitNull"
	, "type": "int64[*]"
	, "file": "extras/Tests/lang.varInitArray.ci"
	, "line": 14
	, "size": 4
	, "offs": 1556
	, "static": false
	, "const": false
	, "ast": {
		"": "null"
		, "kind": ".variable"
		, "type": "pointer"
		, "file": "extras/Tests/lang.varInitArray.ci"
		, "line": 14
		, "value": "null"
	}
}, {
	"": "arrSliceInitFixed"
	, "kind": "variable"
	, "cast": "arr"
	, "name": "arrSliceInitFixed"
	, "type": "int64[]"
	, "file": "extras/Tests/lang.varInitArray.ci"
	, "line": 17
	, "size": 8
	, "offs": 1564
	, "static": false
	, "const": false
	, "ast": {
		"": "arrFixedNoInit"
		, "kind": ".variable"
		, "type": "int64[7]"
		, "file": "extras/Tests/lang.varInitArray.ci"
		, "line": 17
		, "value": "arrFixedNoInit"
	}
}, {
	"": "arrPtrInitFixed"
	, "kind": "variable"
	, "cast": "ref"
	, "name": "arrPtrInitFixed"
	, "type": "int64[*]"
	, "file": "extras/Tests/lang.varInitArray.ci"
	, "line": 18
	, "size": 4
	, "offs": 1568
	, "static": false
	, "const": false
	, "ast": {
		"": "arrFixedNoInit"
		, "kind": ".variable"
		, "type": "int64[7]"
		, "file": "extras/Tests/lang.varInitArray.ci"
		, "line": 18
		, "value": "arrFixedNoInit"
	}
}, {
	"": "arrSliceInitSlice"
	, "kind": "variable"
	, "cast": "arr"
	, "name": "arrSliceInitSlice"
	, "type": "int64[]"
	, "file": "extras/Tests/lang.varInitArray.ci"
	, "line": 21
	, "size": 8
	, "offs": 1576
	, "static": false
	, "const": false
	, "ast": {
		"": "arrSliceInitFixed"
		, "kind": ".variable"
		, "type": "int64[]"
		, "file": "extras/Tests/lang.varInitArray.ci"
		, "line": 21
		, "value": "arrSliceInitFixed"
	}
}, {
	"": "arrPtrInitSlice"
	, "kind": "variable"
	, "cast": "ref"
	, "name": "arrPtrInitSlice"
	, "type": "int64[*]"
	, "file": "extras/Tests/lang.varInitArray.ci"
	, "line": 22
	, "size": 4
	, "offs": 1580
	, "static": false
	, "const": false
	, "ast": {
		"": "arrSliceInitFixed"
		, "kind": ".variable"
		, "type": "int64[]"
		, "file": "extras/Tests/lang.varInitArray.ci"
		, "line": 22
		, "value": "arrSliceInitFixed"
	}
}, {
	"": "arrPtrInitPtr"
	, "kind": "variable"
	, "cast": "ref"
	, "name": "arrPtrInitPtr"
	, "type": "int64[*]"
	, "file": "extras/Tests/lang.varInitArray.ci"
	, "line": 26
	, "size": 4
	, "offs": 1584
	, "static": false
	, "const": false
	, "ast": {
		"": "arrPtrInitFixed"
		, "kind": ".variable"
		, "type": "int64[*]"
		, "file": "extras/Tests/lang.varInitArray.ci"
		, "line": 26
		, "value": "arrPtrInitFixed"
	}
}, {
	"": "arrSliceInitString"
	, "kind": "variable"
	, "cast": "arr"
	, "name": "arrSliceInitString"
	, "type": "char[]"
	, "file": "extras/Tests/lang.varInitArray.ci"
	, "line": 37
	, "size": 8
	, "offs": 1592
	, "static": false
	, "const": false
	, "ast": {
		"": "\"string\""
		, "kind": ".literal"
		, "type": ".cstr"
		, "file": "extras/Tests/lang.varInitArray.ci"
		, "line": 37
		, "value": "\"string\""
	}
}, {
	"": "arrPtrInitString"
	, "kind": "variable"
	, "cast": "ref"
	, "name": "arrPtrInitString"
	, "type": "char[*]"
	, "file": "extras/Tests/lang.varInitArray.ci"
	, "line": 38
	, "size": 4
	, "offs": 1596
	, "static": false
	, "const": false
	, "ast": {
		"": "\"string\""
		, "kind": ".literal"
		, "type": ".cstr"
		, "file": "extras/Tests/lang.varInitArray.ci"
		, "line": 38
		, "value": "\"string\""
	}
}, {
	"": "value"
	, "kind": "variable"
	, "cast": "i64"
	, "name": "value"
	, "type": "int64"
	, "file": "extras/Tests/lang.varInitByRef.ci"
	, "line": 7
	, "size": 8
	, "offs": 149640
	, "static": true
	, "const": false
	, "ast": {
		"": "42"
		, "kind": ".literal"
		, "type": "int32"
		, "file": "extras/Tests/lang.varInitByRef.ci"
		, "line": 7
		, "value": "42"
	}
}, {
	"": "valueRef"
	, "kind": "variable"
	, "cast": "ref"
	, "name": "valueRef"
	, "type": "int64"
	, "file": "extras/Tests/lang.varInitByRef.ci"
	, "line": 8
	, "size": 4
	, "offs": 1600
	, "static": false
	, "const": false
	, "ast": {
		"": "value"
		, "kind": ".variable"
		, "type": "int64"
		, "file": "extras/Tests/lang.varInitByRef.ci"
		, "line": 8
		, "value": "value"
	}
}, {
	"": "valuePtr"
	, "kind": "variable"
	, "cast": "ref"
	, "name": "valuePtr"
	, "type": "pointer"
	, "file": "extras/Tests/lang.varInitByRef.ci"
	, "line": 9
	, "size": 4
	, "offs": 1604
	, "static": false
	, "const": false
	, "ast": {
		"": "value"
		, "kind": ".variable"
		, "type": "int64"
		, "file": "extras/Tests/lang.varInitByRef.ci"
		, "line": 9
		, "value": "value"
	}
}, {
	"": "valueVar"
	, "kind": "variable"
	, "cast": "var"
	, "name": "valueVar"
	, "type": "variant"
	, "file": "extras/Tests/lang.varInitByRef.ci"
	, "line": 10
	, "size": 8
	, "offs": 1612
	, "static": false
	, "const": false
	, "ast": {
		"": "value"
		, "kind": ".variable"
		, "type": "int64"
		, "file": "extras/Tests/lang.varInitByRef.ci"
		, "line": 10
		, "value": "value"
	}
}, {
	"": "fromRef"
	, "kind": "variable"
	, "cast": "i64"
	, "name": "fromRef"
	, "type": "int64"
	, "file": "extras/Tests/lang.varInitByRef.ci"
	, "line": 12
	, "size": 8
	, "offs": 1620
	, "static": false
	, "const": false
	, "ast": {
		"": "valueRef"
		, "kind": ".variable"
		, "type": "int64"
		, "file": "extras/Tests/lang.varInitByRef.ci"
		, "line": 12
		, "value": "valueRef"
	}
}, {
	"": "fromPtr"
	, "kind": "variable"
	, "cast": "ref"
	, "name": "fromPtr"
	, "type": "int64"
	, "file": "extras/Tests/lang.varInitByRef.ci"
	, "line": 13
	, "size": 4
	, "offs": 1624
	, "static": false
	, "const": false
	, "ast": {
		"": "valuePtr"
		, "kind": ".variable"
		, "type": "pointer"
		, "file": "extras/Tests/lang.varInitByRef.ci"
		, "line": 13
		, "value": "valuePtr"
	}
}, {
	"": "fromVar"
	, "kind": "variable"
	, "cast": "ref"
	, "name": "fromVar"
	, "type": "int64"
	, "file": "extras/Tests/lang.varInitByRef.ci"
	, "line": 14
	, "size": 4
	, "offs": 1628
	, "static": false
	, "const": false
	, "ast": {
		"": "valueVar"
		, "kind": ".variable"
		, "type": "variant"
		, "file": "extras/Tests/lang.varInitByRef.ci"
		, "line": 14
		, "value": "valueVar"
	}
}, {
	"": "nullRef"
	, "kind": "variable"
	, "cast": "ref"
	, "name": "nullRef"
	, "type": "int64"
	, "file": "extras/Tests/lang.varInitByRef.ci"
	, "line": 16
	, "size": 4
	, "offs": 1632
	, "static": false
	, "const": false
	, "ast": {
		"": "null"
		, "kind": ".variable"
		, "type": "pointer"
		, "file": "extras/Tests/lang.varInitByRef.ci"
		, "line": 16
		, "value": "null"
	}
}, {
	"": "nullPtr"
	, "kind": "variable"
	, "cast": "ref"
	, "name": "nullPtr"
	, "type": "pointer"
	, "file": "extras/Tests/lang.varInitByRef.ci"
	, "line": 17
	, "size": 4
	, "offs": 1636
	, "static": false
	, "const": false
	, "ast": {
		"": "null"
		, "kind": ".variable"
		, "type": "pointer"
		, "file": "extras/Tests/lang.varInitByRef.ci"
		, "line": 17
		, "value": "null"
	}
}, {
	"": "nullVar"
	, "kind": "variable"
	, "cast": "var"
	, "name": "nullVar"
	, "type": "variant"
	, "file": "extras/Tests/lang.varInitByRef.ci"
	, "line": 18
	, "size": 8
	, "offs": 1644
	, "static": false
	, "const": false
	, "ast": {
		"": "null"
		, "kind": ".variable"
		, "type": "pointer"
		, "file": "extras/Tests/lang.varInitByRef.ci"
		, "line": 18
		, "value": "null"
	}
}, {
	"": "nullTyp"
	, "kind": "variable"
	, "cast": "ref"
	, "name": "nullTyp"
	, "type": "typename"
	, "file": "extras/Tests/lang.varInitByRef.ci"
	, "line": 19
	, "size": 4
	, "offs": 1648
	, "static": false
	, "const": false
	, "ast": {
		"": "null"
		, "kind": ".variable"
		, "type": "pointer"
		, "file": "extras/Tests/lang.varInitByRef.ci"
		, "line": 19
		, "value": "null"
	}
}, {
	"": "nullFun"
	, "kind": "variable"
	, "cast": "ref"
	, "name": "nullFun"
	, "type": "function"
	, "file": "extras/Tests/lang.varInitByRef.ci"
	, "line": 20
	, "size": 4
	, "offs": 1652
	, "static": false
	, "const": false
	, "ast": {
		"": "null"
		, "kind": ".variable"
		, "type": "pointer"
		, "file": "extras/Tests/lang.varInitByRef.ci"
		, "line": 20
		, "value": "null"
	}
}, {
	"": "nullObj"
	, "kind": "variable"
	, "cast": "ref"
	, "name": "nullObj"
	, "type": "object"
	, "file": "extras/Tests/lang.varInitByRef.ci"
	, "line": 21
	, "size": 4
	, "offs": 1656
	, "static": false
	, "const": false
	, "ast": {
		"": "null"
		, "kind": ".variable"
		, "type": "pointer"
		, "file": "extras/Tests/lang.varInitByRef.ci"
		, "line": 21
		, "value": "null"
	}
}, {
	"": "typePtr"
	, "kind": "variable"
	, "cast": "ref"
	, "name": "typePtr"
	, "type": "pointer"
	, "file": "extras/Tests/lang.varInitByRef.ci"
	, "line": 23
	, "size": 4
	, "offs": 1660
	, "static": false
	, "const": false
	, "ast": {
		"": "int64"
		, "kind": ".variable"
		, "type": "typename"
		, "file": "extras/Tests/lang.varInitByRef.ci"
		, "line": 23
		, "value": "int64"
	}
}, {
	"": "typeVar"
	, "kind": "variable"
	, "cast": "var"
	, "name": "typeVar"
	, "type": "variant"
	, "file": "extras/Tests/lang.varInitByRef.ci"
	, "line": 24
	, "size": 8
	, "offs": 1668
	, "static": false
	, "const": false
	, "ast": {
		"": "int64"
		, "kind": ".variable"
		, "type": "typename"
		, "file": "extras/Tests/lang.varInitByRef.ci"
		, "line": 24
		, "value": "int64"
	}
}, {
	"": "typeTyp"
	, "kind": "variable"
	, "cast": "ref"
	, "name": "typeTyp"
	, "type": "typename"
	, "file": "extras/Tests/lang.varInitByRef.ci"
	, "line": 25
	, "size": 4
	, "offs": 1672
	, "static": false
	, "const": false
	, "ast": {
		"": "int64"
		, "kind": ".variable"
		, "type": "typename"
		, "file": "extras/Tests/lang.varInitByRef.ci"
		, "line": 25
		, "value": "int64"
	}
}, {
	"": "local"
	, "kind": "variable"
	, "cast": "i64"
	, "name": "local"
	, "type": "int64"
	, "file": "extras/Tests/lang.varInitByRef.ci"
	, "line": 27
	, "size": 8
	, "offs": 1680
	, "static": false
	, "const": false
	, "ast": {
		"": "value"
		, "kind": ".variable"
		, "type": "int64"
		, "file": "extras/Tests/lang.varInitByRef.ci"
		, "line": 27
		, "value": "value"
	}
}, {
	"": "copyVal"
	, "kind": "variable"
	, "cast": "i64"
	, "name": "copyVal"
	, "type": "int64"
	, "file": "extras/Tests/lang.varInitByRef.ci"
	, "line": 28
	, "size": 8
	, "offs": 1688
	, "static": false
	, "const": false
	, "ast": {
		"": "local"
		, "kind": ".variable"
		, "type": "int64"
		, "file": "extras/Tests/lang.varInitByRef.ci"
		, "line": 28
		, "value": "local"
	}
}, {
	"": "copyRef"
	, "kind": "variable"
	, "cast": "ref"
	, "name": "copyRef"
	, "type": "int64"
	, "file": "extras/Tests/lang.varInitByRef.ci"
	, "line": 29
	, "size": 4
	, "offs": 1692
	, "static": false
	, "const": false
	, "ast": {
		"": "valueRef"
		, "kind": ".variable"
		, "type": "int64"
		, "file": "extras/Tests/lang.varInitByRef.ci"
		, "line": 29
		, "value": "valueRef"
	}
}, {
	"": "copyPtr"
	, "kind": "variable"
	, "cast": "ref"
	, "name": "copyPtr"
	, "type": "pointer"
	, "file": "extras/Tests/lang.varInitByRef.ci"
	, "line": 30
	, "size": 4
	, "offs": 1696
	, "static": false
	, "const": false
	, "ast": {
		"": "valuePtr"
		, "kind": ".variable"
		, "type": "pointer"
		, "file": "extras/Tests/lang.varInitByRef.ci"
		, "line": 30
		, "value": "valuePtr"
	}
}, {
	"": "copyVar"
	, "kind": "variable"
	, "cast": "var"
	, "name": "copyVar"
	, "type": "variant"
	, "file": "extras/Tests/lang.varInitByRef.ci"
	, "line": 31
	, "size": 8
	, "offs": 1704
	, "static": false
	, "const": false
	, "ast": {
		"": "valueVar"
		, "kind": ".variable"
		, "type": "variant"
		, "file": "extras/Tests/lang.varInitByRef.ci"
		, "line": 31
		, "value": "valueVar"
	}
}, {
	"": "copyTyp"
	, "kind": "variable"
	, "cast": "ref"
	, "name": "copyTyp"
	, "type": "typename"
	, "file": "extras/Tests/lang.varInitByRef.ci"
	, "line": 32
	, "size": 4
	, "offs": 1708
	, "static": false
	, "const": false
	, "ast": {
		"": "typeTyp"
		, "kind": ".variable"
		, "type": "typename"
		, "file": "extras/Tests/lang.varInitByRef.ci"
		, "line": 32
		, "value": "typeTyp"
	}
}, {
	"": "ptrVoid"
	, "kind": "variable"
	, "cast": "ref"
	, "name": "ptrVoid"
	, "type": "pointer"
	, "file": "extras/Tests/lang.varInitByRef.ci"
	, "line": 35
	, "size": 4
	, "offs": 1712
	, "static": false
	, "const": false
	, "ast": {
		"": "void"
		, "kind": ".variable"
		, "type": "typename"
		, "file": "extras/Tests/lang.varInitByRef.ci"
		, "line": 35
		, "value": "void"
	}
}, {
	"": "ptrBool"
	, "kind": "variable"
	, "cast": "ref"
	, "name": "ptrBool"
	, "type": "pointer"
	, "file": "extras/Tests/lang.varInitByRef.ci"
	, "line": 36
	, "size": 4
	, "offs": 1716
	, "static": false
	, "const": false
	, "ast": {
		"": "bool"
		, "kind": ".variable"
		, "type": "typename"
		, "file": "extras/Tests/lang.varInitByRef.ci"
		, "line": 36
		, "value": "bool"
	}
}, {
	"": "ptrChar"
	, "kind": "variable"
	, "cast": "ref"
	, "name": "ptrChar"
	, "type": "pointer"
	, "file": "extras/Tests/lang.varInitByRef.ci"
	, "line": 37
	, "size": 4
	, "offs": 1720
	, "static": false
	, "const": false
	, "ast": {
		"": "char"
		, "kind": ".variable"
		, "type": "typename"
		, "file": "extras/Tests/lang.varInitByRef.ci"
		, "line": 37
		, "value": "char"
	}
}, {
	"": "ptrInt8"
	, "kind": "variable"
	, "cast": "ref"
	, "name": "ptrInt8"
	, "type": "pointer"
	, "file": "extras/Tests/lang.varInitByRef.ci"
	, "line": 38
	, "size": 4
	, "offs": 1724
	, "static": false
	, "const": false
	, "ast": {
		"": "int8"
		, "kind": ".variable"
		, "type": "typename"
		, "file": "extras/Tests/lang.varInitByRef.ci"
		, "line": 38
		, "value": "int8"
	}
}, {
	"": "ptrInt16"
	, "kind": "variable"
	, "cast": "ref"
	, "name": "ptrInt16"
	, "type": "pointer"
	, "file": "extras/Tests/lang.varInitByRef.ci"
	, "line": 39
	, "size": 4
	, "offs": 1728
	, "static": false
	, "const": false
	, "ast": {
		"": "int16"
		, "kind": ".variable"
		, "type": "typename"
		, "file": "extras/Tests/lang.varInitByRef.ci"
		, "line": 39
		, "value": "int16"
	}
}, {
	"": "ptrInt32"
	, "kind": "variable"
	, "cast": "ref"
	, "name": "ptrInt32"
	, "type": "pointer"
	, "file": "extras/Tests/lang.varInitByRef.ci"
	, "line": 40
	, "size": 4
	, "offs": 1732
	, "static": false
	, "const": false
	, "ast": {
		"": "int32"
		, "kind": ".variable"
		, "type": "typename"
		, "file": "extras/Tests/lang.varInitByRef.ci"
		, "line": 40
		, "value": "int32"
	}
}, {
	"": "ptrInt64"
	, "kind": "variable"
	, "cast": "ref"
	, "name": "ptrInt64"
	, "type": "pointer"
	, "file": "extras/Tests/lang.varInitByRef.ci"
	, "line": 41
	, "size": 4
	, "offs": 1736
	, "static": false
	, "const": false
	, "ast": {
		"": "int64"
		, "kind": ".variable"
		, "type": "typename"
		, "file": "extras/Tests/lang.varInitByRef.ci"
		, "line": 41
		, "value": "int64"
	}
}, {
	"": "ptrUint8"
	, "kind": "variable"
	, "cast": "ref"
	, "name": "ptrUint8"
	, "type": "pointer"
	, "file": "extras/Tests/lang.varInitByRef.ci"
	, "line": 42
	, "size": 4
	, "offs": 1740
	, "static": false
	, "const": false
	, "ast": {
		"": "uint8"
		, "kind": ".variable"
		, "type": "typename"
		, "file": "extras/Tests/lang.varInitByRef.ci"
		, "line": 42
		, "value": "uint8"
	}
}, {
	"": "ptrUint16"
	, "kind": "variable"
	, "cast": "ref"
	, "name": "ptrUint16"
	, "type": "pointer"
	, "file": "extras/Tests/lang.varInitByRef.ci"
	, "line": 43
	, "size": 4
	, "offs": 1744
	, "static": false
	, "const": false
	, "ast": {
		"": "uint16"
		, "kind": ".variable"
		, "type": "typename"
		, "file": "extras/Tests/lang.varInitByRef.ci"
		, "line": 43
		, "value": "uint16"
	}
}, {
	"": "ptrUint32"
	, "kind": "variable"
	, "cast": "ref"
	, "name": "ptrUint32"
	, "type": "pointer"
	, "file": "extras/Tests/lang.varInitByRef.ci"
	, "line": 44
	, "size": 4
	, "offs": 1748
	, "static": false
	, "const": false
	, "ast": {
		"": "uint32"
		, "kind": ".variable"
		, "type": "typename"
		, "file": "extras/Tests/lang.varInitByRef.ci"
		, "line": 44
		, "value": "uint32"
	}
}, {
	"": "ptrUint64"
	, "kind": "variable"
	, "cast": "ref"
	, "name": "ptrUint64"
	, "type": "pointer"
	, "file": "extras/Tests/lang.varInitByRef.ci"
	, "line": 45
	, "size": 4
	, "offs": 1752
	, "static": false
	, "const": false
	, "ast": {
		"": "uint64"
		, "kind": ".variable"
		, "type": "typename"
		, "file": "extras/Tests/lang.varInitByRef.ci"
		, "line": 45
		, "value": "uint64"
	}
}, {
	"": "ptrFloat32"
	, "kind": "variable"
	, "cast": "ref"
	, "name": "ptrFloat32"
	, "type": "pointer"
	, "file": "extras/Tests/lang.varInitByRef.ci"
	, "line": 46
	, "size": 4
	, "offs": 1756
	, "static": false
	, "const": false
	, "ast": {
		"": "float32"
		, "kind": ".variable"
		, "type": "typename"
		, "file": "extras/Tests/lang.varInitByRef.ci"
		, "line": 46
		, "value": "float32"
	}
}, {
	"": "ptrFloat64"
	, "kind": "variable"
	, "cast": "ref"
	, "name": "ptrFloat64"
	, "type": "pointer"
	, "file": "extras/Tests/lang.varInitByRef.ci"
	, "line": 47
	, "size": 4
	, "offs": 1760
	, "static": false
	, "const": false
	, "ast": {
		"": "float64"
		, "kind": ".variable"
		, "type": "typename"
		, "file": "extras/Tests/lang.varInitByRef.ci"
		, "line": 47
		, "value": "float64"
	}
}, {
	"": "ptrTypename"
	, "kind": "variable"
	, "cast": "ref"
	, "name": "ptrTypename"
	, "type": "pointer"
	, "file": "extras/Tests/lang.varInitByRef.ci"
	, "line": 48
	, "size": 4
	, "offs": 1764
	, "static": false
	, "const": false
	, "ast": {
		"": "typename"
		, "kind": ".variable"
		, "type": "typename"
		, "file": "extras/Tests/lang.varInitByRef.ci"
		, "line": 48
		, "value": "typename"
	}
}, {
	"": "ptrFunction"
	, "kind": "variable"
	, "cast": "ref"
	, "name": "ptrFunction"
	, "type": "pointer"
	, "file": "extras/Tests/lang.varInitByRef.ci"
	, "line": 49
	, "size": 4
	, "offs": 1768
	, "static": false
	, "const": false
	, "ast": {
		"": "function"
		, "kind": ".variable"
		, "type": "typename"
		, "file": "extras/Tests/lang.varInitByRef.ci"
		, "line": 49
		, "value": "function"
	}
}, {
	"": "ptrPointer"
	, "kind": "variable"
	, "cast": "ref"
	, "name": "ptrPointer"
	, "type": "pointer"
	, "file": "extras/Tests/lang.varInitByRef.ci"
	, "line": 50
	, "size": 4
	, "offs": 1772
	, "static": false
	, "const": false
	, "ast": {
		"": "pointer"
		, "kind": ".variable"
		, "type": "typename"
		, "file": "extras/Tests/lang.varInitByRef.ci"
		, "line": 50
		, "value": "pointer"
	}
}, {
	"": "ptrVariant"
	, "kind": "variable"
	, "cast": "ref"
	, "name": "ptrVariant"
	, "type": "pointer"
	, "file": "extras/Tests/lang.varInitByRef.ci"
	, "line": 51
	, "size": 4
	, "offs": 1776
	, "static": false
	, "const": false
	, "ast": {
		"": "variant"
		, "kind": ".variable"
		, "type": "typename"
		, "file": "extras/Tests/lang.varInitByRef.ci"
		, "line": 51
		, "value": "variant"
	}
}, {
	"": "ptrObject"
	, "kind": "variable"
	, "cast": "ref"
	, "name": "ptrObject"
	, "type": "pointer"
	, "file": "extras/Tests/lang.varInitByRef.ci"
	, "line": 52
	, "size": 4
	, "offs": 1780
	, "static": false
	, "const": false
	, "ast": {
		"": "object"
		, "kind": ".variable"
		, "type": "typename"
		, "file": "extras/Tests/lang.varInitByRef.ci"
		, "line": 52
		, "value": "object"
	}
}, {
	"": "varVoid"
	, "kind": "variable"
	, "cast": "var"
	, "name": "varVoid"
	, "type": "variant"
	, "file": "extras/Tests/lang.varInitByRef.ci"
	, "line": 55
	, "size": 8
	, "offs": 1788
	, "static": false
	, "const": false
	, "ast": {
		"": "void"
		, "kind": ".variable"
		, "type": "typename"
		, "file": "extras/Tests/lang.varInitByRef.ci"
		, "line": 55
		, "value": "void"
	}
}, {
	"": "varBool"
	, "kind": "variable"
	, "cast": "var"
	, "name": "varBool"
	, "type": "variant"
	, "file": "extras/Tests/lang.varInitByRef.ci"
	, "line": 56
	, "size": 8
	, "offs": 1796
	, "static": false
	, "const": false
	, "ast": {
		"": "bool"
		, "kind": ".variable"
		, "type": "typename"
		, "file": "extras/Tests/lang.varInitByRef.ci"
		, "line": 56
		, "value": "bool"
	}
}, {
	"": "varChar"
	, "kind": "variable"
	, "cast": "var"
	, "name": "varChar"
	, "type": "variant"
	, "file": "extras/Tests/lang.varInitByRef.ci"
	, "line": 57
	, "size": 8
	, "offs": 1804
	, "static": false
	, "const": false
	, "ast": {
		"": "char"
		, "kind": ".variable"
		, "type": "typename"
		, "file": "extras/Tests/lang.varInitByRef.ci"
		, "line": 57
		, "value": "char"
	}
}, {
	"": "varInt8"
	, "kind": "variable"
	, "cast": "var"
	, "name": "varInt8"
	, "type": "variant"
	, "file": "extras/Tests/lang.varInitByRef.ci"
	, "line": 58
	, "size": 8
	, "offs": 1812
	, "static": false
	, "const": false
	, "ast": {
		"": "int8"
		, "kind": ".variable"
		, "type": "typename"
		, "file": "extras/Tests/lang.varInitByRef.ci"
		, "line": 58
		, "value": "int8"
	}
}, {
	"": "varInt16"
	, "kind": "variable"
	, "cast": "var"
	, "name": "varInt16"
	, "type": "variant"
	, "file": "extras/Tests/lang.varInitByRef.ci"
	, "line": 59
	, "size": 8
	, "offs": 1820
	, "static": false
	, "const": false
	, "ast": {
		"": "int16"
		, "kind": ".variable"
		, "type": "typename"
		, "file": "extras/Tests/lang.varInitByRef.ci"
		, "line": 59
		, "value": "int16"
	}
}, {
	"": "varInt32"
	, "kind": "variable"
	, "cast": "var"
	, "name": "varInt32"
	, "type": "variant"
	, "file": "extras/Tests/lang.varInitByRef.ci"
	, "line": 60
	, "size": 8
	, "offs": 1828
	, "static": false
	, "const": false
	, "ast": {
		"": "int32"
		, "kind": ".variable"
		, "type": "typename"
		, "file": "extras/Tests/lang.varInitByRef.ci"
		, "line": 60
		, "value": "int32"
	}
}, {
	"": "varInt64"
	, "kind": "variable"
	, "cast": "var"
	, "name": "varInt64"
	, "type": "variant"
	, "file": "extras/Tests/lang.varInitByRef.ci"
	, "line": 61
	, "size": 8
	, "offs": 1836
	, "static": false
	, "const": false
	, "ast": {
		"": "int64"
		, "kind": ".variable"
		, "type": "typename"
		, "file": "extras/Tests/lang.varInitByRef.ci"
		, "line": 61
		, "value": "int64"
	}
}, {
	"": "varUint8"
	, "kind": "variable"
	, "cast": "var"
	, "name": "varUint8"
	, "type": "variant"
	, "file": "extras/Tests/lang.varInitByRef.ci"
	, "line": 62
	, "size": 8
	, "offs": 1844
	, "static": false
	, "const": false
	, "ast": {
		"": "uint8"
		, "kind": ".variable"
		, "type": "typename"
		, "file": "extras/Tests/lang.varInitByRef.ci"
		, "line": 62
		, "value": "uint8"
	}
}, {
	"": "varUint16"
	, "kind": "variable"
	, "cast": "var"
	, "name": "varUint16"
	, "type": "variant"
	, "file": "extras/Tests/lang.varInitByRef.ci"
	, "line": 63
	, "size": 8
	, "offs": 1852
	, "static": false
	, "const": false
	, "ast": {
		"": "uint16"
		, "kind": ".variable"
		, "type": "typename"
		, "file": "extras/Tests/lang.varInitByRef.ci"
		, "line": 63
		, "value": "uint16"
	}
}, {
	"": "varUint32"
	, "kind": "variable"
	, "cast": "var"
	, "name": "varUint32"
	, "type": "variant"
	, "file": "extras/Tests/lang.varInitByRef.ci"
	, "line": 64
	, "size": 8
	, "offs": 1860
	, "static": false
	, "const": false
	, "ast": {
		"": "uint32"
		, "kind": ".variable"
		, "type": "typename"
		, "file": "extras/Tests/lang.varInitByRef.ci"
		, "line": 64
		, "value": "uint32"
	}
}, {
	"": "varUint64"
	, "kind": "variable"
	, "cast": "var"
	, "name": "varUint64"
	, "type": "variant"
	, "file": "extras/Tests/lang.varInitByRef.ci"
	, "line": 65
	, "size": 8
	, "offs": 1868
	, "static": false
	, "const": false
	, "ast": {
		"": "uint64"
		, "kind": ".variable"
		, "type": "typename"
		, "file": "extras/Tests/lang.varInitByRef.ci"
		, "line": 65
		, "value": "uint64"
	}
}, {
	"": "varFloat32"
	, "kind": "variable"
	, "cast": "var"
	, "name": "varFloat32"
	, "type": "variant"
	, "file": "extras/Tests/lang.varInitByRef.ci"
	, "line": 66
	, "size": 8
	, "offs": 1876
	, "static": false
	, "const": false
	, "ast": {
		"": "float32"
		, "kind": ".variable"
		, "type": "typename"
		, "file": "extras/Tests/lang.varInitByRef.ci"
		, "line": 66
		, "value": "float32"
	}
}, {
	"": "varFloat64"
	, "kind": "variable"
	, "cast": "var"
	, "name": "varFloat64"
	, "type": "variant"
	, "file": "extras/Tests/lang.varInitByRef.ci"
	, "line": 67
	, "size": 8
	, "offs": 1884
	, "static": false
	, "const": false
	, "ast": {
		"": "float64"
		, "kind": ".variable"
		, "type": "typename"
		, "file": "extras/Tests/lang.varInitByRef.ci"
		, "line": 67
		, "value": "float64"
	}
}, {
	"": "varTypename"
	, "kind": "variable"
	, "cast": "var"
	, "name": "varTypename"
	, "type": "variant"
	, "file": "extras/Tests/lang.varInitByRef.ci"
	, "line": 68
	, "size": 8
	, "offs": 1892
	, "static": false
	, "const": false
	, "ast": {
		"": "typename"
		, "kind": ".variable"
		, "type": "typename"
		, "file": "extras/Tests/lang.varInitByRef.ci"
		, "line": 68
		, "value": "typename"
	}
}, {
	"": "varFunction"
	, "kind": "variable"
	, "cast": "var"
	, "name": "varFunction"
	, "type": "variant"
	, "file": "extras/Tests/lang.varInitByRef.ci"
	, "line": 69
	, "size": 8
	, "offs": 1900
	, "static": false
	, "const": false
	, "ast": {
		"": "function"
		, "kind": ".variable"
		, "type": "typename"
		, "file": "extras/Tests/lang.varInitByRef.ci"
		, "line": 69
		, "value": "function"
	}
}, {
	"": "varPointer"
	, "kind": "variable"
	, "cast": "var"
	, "name": "varPointer"
	, "type": "variant"
	, "file": "extras/Tests/lang.varInitByRef.ci"
	, "line": 70
	, "size": 8
	, "offs": 1908
	, "static": false
	, "const": false
	, "ast": {
		"": "pointer"
		, "kind": ".variable"
		, "type": "typename"
		, "file": "extras/Tests/lang.varInitByRef.ci"
		, "line": 70
		, "value": "pointer"
	}
}, {
	"": "varVariant"
	, "kind": "variable"
	, "cast": "var"
	, "name": "varVariant"
	, "type": "variant"
	, "file": "extras/Tests/lang.varInitByRef.ci"
	, "line": 71
	, "size": 8
	, "offs": 1916
	, "static": false
	, "const": false
	, "ast": {
		"": "variant"
		, "kind": ".variable"
		, "type": "typename"
		, "file": "extras/Tests/lang.varInitByRef.ci"
		, "line": 71
		, "value": "variant"
	}
}, {
	"": "varObject"
	, "kind": "variable"
	, "cast": "var"
	, "name": "varObject"
	, "type": "variant"
	, "file": "extras/Tests/lang.varInitByRef.ci"
	, "line": 72
	, "size": 8
	, "offs": 1924
	, "static": false
	, "const": false
	, "ast": {
		"": "object"
		, "kind": ".variable"
		, "type": "typename"
		, "file": "extras/Tests/lang.varInitByRef.ci"
		, "line": 72
		, "value": "object"
	}
}, {
	"": "typVoid"
	, "kind": "variable"
	, "cast": "ref"
	, "name": "typVoid"
	, "type": "typename"
	, "file": "extras/Tests/lang.varInitByRef.ci"
	, "line": 75
	, "size": 4
	, "offs": 1928
	, "static": false
	, "const": false
	, "ast": {
		"": "void"
		, "kind": ".variable"
		, "type": "typename"
		, "file": "extras/Tests/lang.varInitByRef.ci"
		, "line": 75
		, "value": "void"
	}
}, {
	"": "typBool"
	, "kind": "variable"
	, "cast": "ref"
	, "name": "typBool"
	, "type": "typename"
	, "file": "extras/Tests/lang.varInitByRef.ci"
	, "line": 76
	, "size": 4
	, "offs": 1932
	, "static": false
	, "const": false
	, "ast": {
		"": "bool"
		, "kind": ".variable"
		, "type": "typename"
		, "file": "extras/Tests/lang.varInitByRef.ci"
		, "line": 76
		, "value": "bool"
	}
}, {
	"": "typChar"
	, "kind": "variable"
	, "cast": "ref"
	, "name": "typChar"
	, "type": "typename"
	, "file": "extras/Tests/lang.varInitByRef.ci"
	, "line": 77
	, "size": 4
	, "offs": 1936
	, "static": false
	, "const": false
	, "ast": {
		"": "char"
		, "kind": ".variable"
		, "type": "typename"
		, "file": "extras/Tests/lang.varInitByRef.ci"
		, "line": 77
		, "value": "char"
	}
}, {
	"": "typInt8"
	, "kind": "variable"
	, "cast": "ref"
	, "name": "typInt8"
	, "type": "typename"
	, "file": "extras/Tests/lang.varInitByRef.ci"
	, "line": 78
	, "size": 4
	, "offs": 1940
	, "static": false
	, "const": false
	, "ast": {
		"": "int8"
		, "kind": ".variable"
		, "type": "typename"
		, "file": "extras/Tests/lang.varInitByRef.ci"
		, "line": 78
		, "value": "int8"
	}
}, {
	"": "typInt16"
	, "kind": "variable"
	, "cast": "ref"
	, "name": "typInt16"
	, "type": "typename"
	, "file": "extras/Tests/lang.varInitByRef.ci"
	, "line": 79
	, "size": 4
	, "offs": 1944
	, "static": false
	, "const": false
	, "ast": {
		"": "int16"
		, "kind": ".variable"
		, "type": "typename"
		, "file": "extras/Tests/lang.varInitByRef.ci"
		, "line": 79
		, "value": "int16"
	}
}, {
	"": "typInt32"
	, "kind": "variable"
	, "cast": "ref"
	, "name": "typInt32"
	, "type": "typename"
	, "file": "extras/Tests/lang.varInitByRef.ci"
	, "line": 80
	, "size": 4
	, "offs": 1948
	, "static": false
	, "const": false
	, "ast": {
		"": "int32"
		, "kind": ".variable"
		, "type": "typename"
		, "file": "extras/Tests/lang.varInitByRef.ci"
		, "line": 80
		, "value": "int32"
	}
}, {
	"": "typInt64"
	, "kind": "variable"
	, "cast": "ref"
	, "name": "typInt64"
	, "type": "typename"
	, "file": "extras/Tests/lang.varInitByRef.ci"
	, "line": 81
	, "size": 4
	, "offs": 1952
	, "static": false
	, "const": false
	, "ast": {
		"": "int64"
		, "kind": ".variable"
		, "type": "typename"
		, "file": "extras/Tests/lang.varInitByRef.ci"
		, "line": 81
		, "value": "int64"
	}
}, {
	"": "typUint8"
	, "kind": "variable"
	, "cast": "ref"
	, "name": "typUint8"
	, "type": "typename"
	, "file": "extras/Tests/lang.varInitByRef.ci"
	, "line": 82
	, "size": 4
	, "offs": 1956
	, "static": false
	, "const": false
	, "ast": {
		"": "uint8"
		, "kind": ".variable"
		, "type": "typename"
		, "file": "extras/Tests/lang.varInitByRef.ci"
		, "line": 82
		, "value": "uint8"
	}
}, {
	"": "typUint16"
	, "kind": "variable"
	, "cast": "ref"
	, "name": "typUint16"
	, "type": "typename"
	, "file": "extras/Tests/lang.varInitByRef.ci"
	, "line": 83
	, "size": 4
	, "offs": 1960
	, "static": false
	, "const": false
	, "ast": {
		"": "uint16"
		, "kind": ".variable"
		, "type": "typename"
		, "file": "extras/Tests/lang.varInitByRef.ci"
		, "line": 83
		, "value": "uint16"
	}
}, {
	"": "typUint32"
	, "kind": "variable"
	, "cast": "ref"
	, "name": "typUint32"
	, "type": "typename"
	, "file": "extras/Tests/lang.varInitByRef.ci"
	, "line": 84
	, "size": 4
	, "offs": 1964
	, "static": false
	, "const": false
	, "ast": {
		"": "uint32"
		, "kind": ".variable"
		, "type": "typename"
		, "file": "extras/Tests/lang.varInitByRef.ci"
		, "line": 84
		, "value": "uint32"
	}
}, {
	"": "typUint64"
	, "kind": "variable"
	, "cast": "ref"
	, "name": "typUint64"
	, "type": "typename"
	, "file": "extras/Tests/lang.varInitByRef.ci"
	, "line": 85
	, "size": 4
	, "offs": 1968
	, "static": false
	, "const": false
	, "ast": {
		"": "uint64"
		, "kind": ".variable"
		, "type": "typename"
		, "file": "extras/Tests/lang.varInitByRef.ci"
		, "line": 85
		, "value": "uint64"
	}
}, {
	"": "typFloat32"
	, "kind": "variable"
	, "cast": "ref"
	, "name": "typFloat32"
	, "type": "typename"
	, "file": "extras/Tests/lang.varInitByRef.ci"
	, "line": 86
	, "size": 4
	, "offs": 1972
	, "static": false
	, "const": false
	, "ast": {
		"": "float32"
		, "kind": ".variable"
		, "type": "typename"
		, "file": "extras/Tests/lang.varInitByRef.ci"
		, "line": 86
		, "value": "float32"
	}
}, {
	"": "typFloat64"
	, "kind": "variable"
	, "cast": "ref"
	, "name": "typFloat64"
	, "type": "typename"
	, "file": "extras/Tests/lang.varInitByRef.ci"
	, "line": 87
	, "size": 4
	, "offs": 1976
	, "static": false
	, "const": false
	, "ast": {
		"": "float64"
		, "kind": ".variable"
		, "type": "typename"
		, "file": "extras/Tests/lang.varInitByRef.ci"
		, "line": 87
		, "value": "float64"
	}
}, {
	"": "typTypename"
	, "kind": "variable"
	, "cast": "ref"
	, "name": "typTypename"
	, "type": "typename"
	, "file": "extras/Tests/lang.varInitByRef.ci"
	, "line": 88
	, "size": 4
	, "offs": 1980
	, "static": false
	, "const": false
	, "ast": {
		"": "typename"
		, "kind": ".variable"
		, "type": "typename"
		, "file": "extras/Tests/lang.varInitByRef.ci"
		, "line": 88
		, "value": "typename"
	}
}, {
	"": "typFunction"
	, "kind": "variable"
	, "cast": "ref"
	, "name": "typFunction"
	, "type": "typename"
	, "file": "extras/Tests/lang.varInitByRef.ci"
	, "line": 89
	, "size": 4
	, "offs": 1984
	, "static": false
	, "const": false
	, "ast": {
		"": "function"
		, "kind": ".variable"
		, "type": "typename"
		, "file": "extras/Tests/lang.varInitByRef.ci"
		, "line": 89
		, "value": "function"
	}
}, {
	"": "typPointer"
	, "kind": "variable"
	, "cast": "ref"
	, "name": "typPointer"
	, "type": "typename"
	, "file": "extras/Tests/lang.varInitByRef.ci"
	, "line": 90
	, "size": 4
	, "offs": 1988
	, "static": false
	, "const": false
	, "ast": {
		"": "pointer"
		, "kind": ".variable"
		, "type": "typename"
		, "file": "extras/Tests/lang.varInitByRef.ci"
		, "line": 90
		, "value": "pointer"
	}
}, {
	"": "typVariant"
	, "kind": "variable"
	, "cast": "ref"
	, "name": "typVariant"
	, "type": "typename"
	, "file": "extras/Tests/lang.varInitByRef.ci"
	, "line": 91
	, "size": 4
	, "offs": 1992
	, "static": false
	, "const": false
	, "ast": {
		"": "variant"
		, "kind": ".variable"
		, "type": "typename"
		, "file": "extras/Tests/lang.varInitByRef.ci"
		, "line": 91
		, "value": "variant"
	}
}, {
	"": "typObject"
	, "kind": "variable"
	, "cast": "ref"
	, "name": "typObject"
	, "type": "typename"
	, "file": "extras/Tests/lang.varInitByRef.ci"
	, "line": 92
	, "size": 4
	, "offs": 1996
	, "static": false
	, "const": false
	, "ast": {
		"": "object"
		, "kind": ".variable"
		, "type": "typename"
		, "file": "extras/Tests/lang.varInitByRef.ci"
		, "line": 92
		, "value": "object"
	}
}, {
	"": "valueOfPtr"
	, "kind": "variable"
	, "cast": "ref"
	, "name": "valueOfPtr"
	, "type": "pointer"
	, "file": "extras/Tests/lang.varInitByRef.ci"
	, "line": 95
	, "size": 4
	, "offs": 2000
	, "static": false
	, "const": false
	, "ast": {
		"": "pointer(value)"
		, "kind": "()"
		, "type": "pointer"
		, "file": "extras/Tests/lang.varInitByRef.ci"
		, "line": 95
		, "args": [{
			"": "value"
			, "kind": ".variable"
			, "type": "int64"
			, "file": "extras/Tests/lang.varInitByRef.ci"
			, "line": 95
			, "value": "value"
		}]
	}
}, {
	"": "valueOfVar"
	, "kind": "variable"
	, "cast": "var"
	, "name": "valueOfVar"
	, "type": "variant"
	, "file": "extras/Tests/lang.varInitByRef.ci"
	, "line": 96
	, "size": 8
	, "offs": 2008
	, "static": false
	, "const": false
	, "ast": {
		"": "variant(value)"
		, "kind": "()"
		, "type": "variant"
		, "file": "extras/Tests/lang.varInitByRef.ci"
		, "line": 96
		, "args": [{
			"": "value"
			, "kind": ".variable"
			, "type": "int64"
			, "file": "extras/Tests/lang.varInitByRef.ci"
			, "line": 96
			, "value": "value"
		}]
	}
}, {
	"": "valueOfTyp"
	, "kind": "variable"
	, "cast": "ref"
	, "name": "valueOfTyp"
	, "type": "typename"
	, "file": "extras/Tests/lang.varInitByRef.ci"
	, "line": 97
	, "size": 4
	, "offs": 2012
	, "static": false
	, "const": false
	, "ast": {
		"": "typename(value)"
		, "kind": "()"
		, "type": "typename"
		, "file": "extras/Tests/lang.varInitByRef.ci"
		, "line": 97
		, "args": [{
			"": "value"
			, "kind": ".variable"
			, "type": "int64"
			, "file": "extras/Tests/lang.varInitByRef.ci"
			, "line": 97
			, "value": "value"
		}]
	}
}, {
	"": "typeOfValue"
	, "kind": "variable"
	, "cast": "ref"
	, "name": "typeOfValue"
	, "type": "typename"
	, "file": "extras/Tests/lang.varInitByRef.ci"
	, "line": 99
	, "size": 4
	, "offs": 2016
	, "static": false
	, "const": false
	, "ast": {
		"": "typename(value)"
		, "kind": "()"
		, "type": "typename"
		, "file": "extras/Tests/lang.varInitByRef.ci"
		, "line": 99
		, "args": [{
			"": "value"
			, "kind": ".variable"
			, "type": "int64"
			, "file": "extras/Tests/lang.varInitByRef.ci"
			, "line": 99
			, "value": "value"
		}]
	}
}, {
	"": "copyPtrFloat64"
	, "kind": "variable"
	, "cast": "var"
	, "name": "copyPtrFloat64"
	, "type": "variant"
	, "file": "extras/Tests/lang.varInitByRef.ci"
	, "line": 105
	, "size": 8
	, "offs": 2024
	, "static": false
	, "const": false
	, "ast": {
		"": "ptrFloat64"
		, "kind": ".variable"
		, "type": "pointer"
		, "file": "extras/Tests/lang.varInitByRef.ci"
		, "line": 105
		, "value": "ptrFloat64"
	}
}, {
	"": "copyVarFloat64"
	, "kind": "variable"
	, "cast": "ref"
	, "name": "copyVarFloat64"
	, "type": "pointer"
	, "file": "extras/Tests/lang.varInitByRef.ci"
	, "line": 108
	, "size": 4
	, "offs": 2028
	, "static": false
	, "const": false
	, "ast": {
		"": "varFloat64"
		, "kind": ".variable"
		, "type": "variant"
		, "file": "extras/Tests/lang.varInitByRef.ci"
		, "line": 108
		, "value": "varFloat64"
	}
}, {
	"": "localNoInit"
	, "kind": "variable"
	, "cast": "i64"
	, "name": "localNoInit"
	, "type": "int64"
	, "file": "extras/Tests/lang.varInitByVal.ci"
	, "line": 7
	, "size": 8
	, "offs": 2036
	, "static": false
	, "const": false
}, {
	"": "globalNoInit"
	, "kind": "variable"
	, "cast": "i64"
	, "name": "globalNoInit"
	, "type": "int64"
	, "file": "extras/Tests/lang.varInitByVal.ci"
	, "line": 8
	, "size": 8
	, "offs": 149648
	, "static": true
	, "const": false
}, {
	"": "localInitValue"
	, "kind": "variable"
	, "cast": "i64"
	, "name": "localInitValue"
	, "type": "int64"
	, "file": "extras/Tests/lang.varInitByVal.ci"
	, "line": 9
	, "size": 8
	, "offs": 2044
	, "static": false
	, "const": false
	, "ast": {
		"": "42"
		, "kind": ".literal"
		, "type": "int32"
		, "file": "extras/Tests/lang.varInitByVal.ci"
		, "line": 9
		, "value": "42"
	}
}, {
	"": "globalInitValue"
	, "kind": "variable"
	, "cast": "i64"
	, "name": "globalInitValue"
	, "type": "int64"
	, "file": "extras/Tests/lang.varInitByVal.ci"
	, "line": 10
	, "size": 8
	, "offs": 149656
	, "static": true
	, "const": false
	, "ast": {
		"": "1024"
		, "kind": ".literal"
		, "type": "int32"
		, "file": "extras/Tests/lang.varInitByVal.ci"
		, "line": 10
		, "value": "1024"
	}
}, {
	"": "localInitLocal"
	, "kind": "variable"
	, "cast": "i64"
	, "name": "localInitLocal"
	, "type": "int64"
	, "file": "extras/Tests/lang.varInitByVal.ci"
	, "line": 11
	, "size": 8
	, "offs": 2052
	, "static": false
	, "const": false
	, "ast": {
		"": "localInitValue"
		, "kind": ".variable"
		, "type": "int64"
		, "file": "extras/Tests/lang.varInitByVal.ci"
		, "line": 11
		, "value": "localInitValue"
	}
}, {
	"": "globalInitLocal"
	, "kind": "variable"
	, "cast": "i64"
	, "name": "globalInitLocal"
	, "type": "int64"
	, "file": "extras/Tests/lang.varInitByVal.ci"
	, "line": 12
	, "size": 8
	, "offs": 149664
	, "static": true
	, "const": false
	, "ast": {
		"": "localInitValue"
		, "kind": ".variable"
		, "type": "int64"
		, "file": "extras/Tests/lang.varInitByVal.ci"
		, "line": 12
		, "value": "localInitValue"
	}
}, {
	"": "localInitGlobal"
	, "kind": "variable"
	, "cast": "i64"
	, "name": "localInitGlobal"
	, "type": "int64"
	, "file": "extras/Tests/lang.varInitByVal.ci"
	, "line": 13
	, "size": 8
	, "offs": 2060
	, "static": false
	, "const": false
	, "ast": {
		"": "globalInitValue"
		, "kind": ".variable"
		, "type": "int64"
		, "file": "extras/Tests/lang.varInitByVal.ci"
		, "line": 13
		, "value": "globalInitValue"
	}
}, {
	"": "globalInitGlobal"
	, "kind": "variable"
	, "cast": "i64"
	, "name": "globalInitGlobal"
	, "type": "int64"
	, "file": "extras/Tests/lang.varInitByVal.ci"
	, "line": 14
	, "size": 8
	, "offs": 149672
	, "static": true
	, "const": false
	, "ast": {
		"": "globalInitValue"
		, "kind": ".variable"
		, "type": "int64"
		, "file": "extras/Tests/lang.varInitByVal.ci"
		, "line": 14
		, "value": "globalInitValue"
	}
}, {
	"": "InitMember"
	, "kind": "typename"
	, "cast": "val"
	, "name": "InitMember"
	, "type": "typename"
	, "file": "extras/Tests/lang.varInitByVal.ci"
	, "line": 17
	, "size": 16
	, "offs": 139008
	, "static": true
	, "const": true
}, {
	"": "InitMember.intMember"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "intMember"
	, "owner": "InitMember"
	, "type": "int32"
	, "file": "extras/Tests/lang.varInitByVal.ci"
	, "line": 20
	, "size": 4
	, "offs": 0
	, "static": false
	, "const": false
}, {
	"": "InitMember.intMemberDef"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "intMemberDef"
	, "owner": "InitMember"
	, "type": "int32"
	, "file": "extras/Tests/lang.varInitByVal.ci"
	, "line": 24
	, "size": 4
	, "offs": 4
	, "static": false
	, "const": false
	, "ast": {
		"": "42"
		, "kind": ".literal"
		, "type": "int32"
		, "file": "extras/Tests/lang.varInitByVal.ci"
		, "line": 24
		, "value": "42"
	}
}, {
	"": "InitMember.intConstMember"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "intConstMember"
	, "owner": "InitMember"
	, "type": "int32"
	, "file": "extras/Tests/lang.varInitByVal.ci"
	, "line": 29
	, "size": 4
	, "offs": 8
	, "static": false
	, "const": true
}, {
	"": "InitMember.intConstMemberDef"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "intConstMemberDef"
	, "owner": "InitMember"
	, "type": "int32"
	, "file": "extras/Tests/lang.varInitByVal.ci"
	, "line": 34
	, "size": 4
	, "offs": 12
	, "static": false
	, "const": true
	, "ast": {
		"": "43"
		, "kind": ".literal"
		, "type": "int32"
		, "file": "extras/Tests/lang.varInitByVal.ci"
		, "line": 34
		, "value": "43"
	}
}, {
	"": "InitMember.intGlobal"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "intGlobal"
	, "owner": "InitMember"
	, "type": "int32"
	, "file": "extras/Tests/lang.varInitByVal.ci"
	, "line": 38
	, "size": 4
	, "offs": 149680
	, "static": true
	, "const": false
	, "ast": {
		"": "44"
		, "kind": ".literal"
		, "type": "int32"
		, "file": "extras/Tests/lang.varInitByVal.ci"
		, "line": 38
		, "value": "44"
	}
}, {
	"": "InitMember.intConstant"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "intConstant"
	, "owner": "InitMember"
	, "type": "int32"
	, "file": "extras/Tests/lang.varInitByVal.ci"
	, "line": 43
	, "size": 4
	, "offs": 149684
	, "static": true
	, "const": true
	, "ast": {
		"": "45"
		, "kind": ".literal"
		, "type": "int32"
		, "file": "extras/Tests/lang.varInitByVal.ci"
		, "line": 43
		, "value": "45"
	}
}, {
	"": "pi64"
	, "kind": "variable"
	, "cast": "f64"
	, "name": "pi64"
	, "type": "float64"
	, "file": "extras/Tests/stdc.nfcNumber.ci"
	, "line": 3
	, "size": 8
	, "offs": 2068
	, "static": false
	, "const": false
	, "ast": {
		"": "3.141593"
		, "kind": ".literal"
		, "type": "float64"
		, "file": "extras/Tests/stdc.nfcNumber.ci"
		, "line": 3
		, "value": "3.141593"
	}
}, {
	"": "e64"
	, "kind": "variable"
	, "cast": "f64"
	, "name": "e64"
	, "type": "float64"
	, "file": "extras/Tests/stdc.nfcNumber.ci"
	, "line": 4
	, "size": 8
	, "offs": 2076
	, "static": false
	, "const": false
	, "ast": {
		"": "2.718282"
		, "kind": ".literal"
		, "type": "float64"
		, "file": "extras/Tests/stdc.nfcNumber.ci"
		, "line": 4
		, "value": "2.718282"
	}
}, {
	"": "pi32"
	, "kind": "variable"
	, "cast": "f32"
	, "name": "pi32"
	, "type": "float32"
	, "file": "extras/Tests/stdc.nfcNumber.ci"
	, "line": 6
	, "size": 4
	, "offs": 2080
	, "static": false
	, "const": false
	, "ast": {
		"": "pi64"
		, "kind": ".variable"
		, "type": "float64"
		, "file": "extras/Tests/stdc.nfcNumber.ci"
		, "line": 6
		, "value": "pi64"
	}
}, {
	"": "e32"
	, "kind": "variable"
	, "cast": "f32"
	, "name": "e32"
	, "type": "float32"
	, "file": "extras/Tests/stdc.nfcNumber.ci"
	, "line": 7
	, "size": 4
	, "offs": 2084
	, "static": false
	, "const": false
	, "ast": {
		"": "e64"
		, "kind": ".variable"
		, "type": "float64"
		, "file": "extras/Tests/stdc.nfcNumber.ci"
		, "line": 7
		, "value": "e64"
	}
}, {
	"": "rgb888(r: int32, g: int32, b: int32): int32"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "rgb888"
	, "type": "function"
	, "file": "extras/Tests/stdc.nfcNumber.ci"
	, "line": 10
	, "args": [{
		"": ".result"
		, "kind": "inline"
		, "cast": "i32"
		, "name": ".result"
		, "type": "int32"
		, "file": "extras/Tests/stdc.nfcNumber.ci"
		, "line": 10
		, "size": 4
		, "offs": 0
		, "static": false
		, "const": false
	}, {
		"": "r"
		, "kind": "inline"
		, "cast": "i32"
		, "name": "r"
		, "type": "int32"
		, "file": "extras/Tests/stdc.nfcNumber.ci"
		, "line": 10
		, "size": 4
		, "offs": 0
		, "static": false
		, "const": false
	}, {
		"": "g"
		, "kind": "inline"
		, "cast": "i32"
		, "name": "g"
		, "type": "int32"
		, "file": "extras/Tests/stdc.nfcNumber.ci"
		, "line": 10
		, "size": 4
		, "offs": 0
		, "static": false
		, "const": false
	}, {
		"": "b"
		, "kind": "inline"
		, "cast": "i32"
		, "name": "b"
		, "type": "int32"
		, "file": "extras/Tests/stdc.nfcNumber.ci"
		, "line": 10
		, "size": 4
		, "offs": 0
		, "static": false
		, "const": false
	}]
	, "size": 0
	, "offs": 0
	, "static": false
	, "const": false
	, "ast": {
		"": "r << 16 & 16711680 | g << 8 & 65280 | b & 255"
		, "kind": "|"
		, "type": "int32"
		, "file": "extras/Tests/stdc.nfcNumber.ci"
		, "line": 10
		, "left": {
			"": "r << 16 & 16711680 | g << 8 & 65280"
			, "kind": "|"
			, "type": "int32"
			, "file": "extras/Tests/stdc.nfcNumber.ci"
			, "line": 10
			, "left": {
				"": "r << 16 & 16711680"
				, "kind": "&"
				, "type": "int32"
				, "file": "extras/Tests/stdc.nfcNumber.ci"
				, "line": 10
				, "left": {
					"": "r << 16"
					, "kind": "<<"
					, "type": "int32"
					, "file": "extras/Tests/stdc.nfcNumber.ci"
					, "line": 10
					, "left": {
						"": "r"
						, "kind": ".variable"
						, "type": "int32"
						, "file": "extras/Tests/stdc.nfcNumber.ci"
						, "line": 10
						, "value": "r"
					}
					, "right": {
						"": "16"
						, "kind": ".literal"
						, "type": "int32"
						, "file": "extras/Tests/stdc.nfcNumber.ci"
						, "line": 10
						, "value": "16"
					}
				}
				, "right": {
					"": "16711680"
					, "kind": ".literal"
					, "type": "int32"
					, "file": "extras/Tests/stdc.nfcNumber.ci"
					, "line": 10
					, "value": "16711680"
				}
			}
			, "right": {
				"": "g << 8 & 65280"
				, "kind": "&"
				, "type": "int32"
				, "file": "extras/Tests/stdc.nfcNumber.ci"
				, "line": 10
				, "left": {
					"": "g << 8"
					, "kind": "<<"
					, "type": "int32"
					, "file": "extras/Tests/stdc.nfcNumber.ci"
					, "line": 10
					, "left": {
						"": "g"
						, "kind": ".variable"
						, "type": "int32"
						, "file": "extras/Tests/stdc.nfcNumber.ci"
						, "line": 10
						, "value": "g"
					}
					, "right": {
						"": "8"
						, "kind": ".literal"
						, "type": "int32"
						, "file": "extras/Tests/stdc.nfcNumber.ci"
						, "line": 10
						, "value": "8"
					}
				}
				, "right": {
					"": "65280"
					, "kind": ".literal"
					, "type": "int32"
					, "file": "extras/Tests/stdc.nfcNumber.ci"
					, "line": 10
					, "value": "65280"
				}
			}
		}
		, "right": {
			"": "b & 255"
			, "kind": "&"
			, "type": "int32"
			, "file": "extras/Tests/stdc.nfcNumber.ci"
			, "line": 10
			, "left": {
				"": "b"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/stdc.nfcNumber.ci"
				, "line": 10
				, "value": "b"
			}
			, "right": {
				"": "255"
				, "kind": ".literal"
				, "type": "int32"
				, "file": "extras/Tests/stdc.nfcNumber.ci"
				, "line": 10
				, "value": "255"
			}
		}
	}
}, {
	"": "rgb565(r: int32, g: int32, b: int32): int32"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "rgb565"
	, "type": "function"
	, "file": "extras/Tests/stdc.nfcNumber.ci"
	, "line": 12
	, "args": [{
		"": ".result"
		, "kind": "inline"
		, "cast": "i32"
		, "name": ".result"
		, "type": "int32"
		, "file": "extras/Tests/stdc.nfcNumber.ci"
		, "line": 12
		, "size": 4
		, "offs": 0
		, "static": false
		, "const": false
	}, {
		"": "r"
		, "kind": "inline"
		, "cast": "i32"
		, "name": "r"
		, "type": "int32"
		, "file": "extras/Tests/stdc.nfcNumber.ci"
		, "line": 12
		, "size": 4
		, "offs": 0
		, "static": false
		, "const": false
	}, {
		"": "g"
		, "kind": "inline"
		, "cast": "i32"
		, "name": "g"
		, "type": "int32"
		, "file": "extras/Tests/stdc.nfcNumber.ci"
		, "line": 12
		, "size": 4
		, "offs": 0
		, "static": false
		, "const": false
	}, {
		"": "b"
		, "kind": "inline"
		, "cast": "i32"
		, "name": "b"
		, "type": "int32"
		, "file": "extras/Tests/stdc.nfcNumber.ci"
		, "line": 12
		, "size": 4
		, "offs": 0
		, "static": false
		, "const": false
	}]
	, "size": 0
	, "offs": 0
	, "static": false
	, "const": false
	, "ast": {
		"": "r << 8 & 63488 | g << 3 & 2016 | b >> 3 & 31"
		, "kind": "|"
		, "type": "int32"
		, "file": "extras/Tests/stdc.nfcNumber.ci"
		, "line": 12
		, "left": {
			"": "r << 8 & 63488 | g << 3 & 2016"
			, "kind": "|"
			, "type": "int32"
			, "file": "extras/Tests/stdc.nfcNumber.ci"
			, "line": 12
			, "left": {
				"": "r << 8 & 63488"
				, "kind": "&"
				, "type": "int32"
				, "file": "extras/Tests/stdc.nfcNumber.ci"
				, "line": 12
				, "left": {
					"": "r << 8"
					, "kind": "<<"
					, "type": "int32"
					, "file": "extras/Tests/stdc.nfcNumber.ci"
					, "line": 12
					, "left": {
						"": "r"
						, "kind": ".variable"
						, "type": "int32"
						, "file": "extras/Tests/stdc.nfcNumber.ci"
						, "line": 12
						, "value": "r"
					}
					, "right": {
						"": "8"
						, "kind": ".literal"
						, "type": "int32"
						, "file": "extras/Tests/stdc.nfcNumber.ci"
						, "line": 12
						, "value": "8"
					}
				}
				, "right": {
					"": "63488"
					, "kind": ".literal"
					, "type": "int32"
					, "file": "extras/Tests/stdc.nfcNumber.ci"
					, "line": 12
					, "value": "63488"
				}
			}
			, "right": {
				"": "g << 3 & 2016"
				, "kind": "&"
				, "type": "int32"
				, "file": "extras/Tests/stdc.nfcNumber.ci"
				, "line": 12
				, "left": {
					"": "g << 3"
					, "kind": "<<"
					, "type": "int32"
					, "file": "extras/Tests/stdc.nfcNumber.ci"
					, "line": 12
					, "left": {
						"": "g"
						, "kind": ".variable"
						, "type": "int32"
						, "file": "extras/Tests/stdc.nfcNumber.ci"
						, "line": 12
						, "value": "g"
					}
					, "right": {
						"": "3"
						, "kind": ".literal"
						, "type": "int32"
						, "file": "extras/Tests/stdc.nfcNumber.ci"
						, "line": 12
						, "value": "3"
					}
				}
				, "right": {
					"": "2016"
					, "kind": ".literal"
					, "type": "int32"
					, "file": "extras/Tests/stdc.nfcNumber.ci"
					, "line": 12
					, "value": "2016"
				}
			}
		}
		, "right": {
			"": "b >> 3 & 31"
			, "kind": "&"
			, "type": "int32"
			, "file": "extras/Tests/stdc.nfcNumber.ci"
			, "line": 12
			, "left": {
				"": "b >> 3"
				, "kind": ">>"
				, "type": "int32"
				, "file": "extras/Tests/stdc.nfcNumber.ci"
				, "line": 12
				, "left": {
					"": "b"
					, "kind": ".variable"
					, "type": "int32"
					, "file": "extras/Tests/stdc.nfcNumber.ci"
					, "line": 12
					, "value": "b"
				}
				, "right": {
					"": "3"
					, "kind": ".literal"
					, "type": "int32"
					, "file": "extras/Tests/stdc.nfcNumber.ci"
					, "line": 12
					, "value": "3"
				}
			}
			, "right": {
				"": "31"
				, "kind": ".literal"
				, "type": "int32"
				, "file": "extras/Tests/stdc.nfcNumber.ci"
				, "line": 12
				, "value": "31"
			}
		}
	}
}, {
	"": "r_comp"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "r_comp"
	, "type": "int32"
	, "file": "extras/Tests/stdc.nfcNumber.ci"
	, "line": 14
	, "size": 4
	, "offs": 2088
	, "static": false
	, "const": false
	, "ast": {
		"": "14 << 3"
		, "kind": "<<"
		, "type": "int32"
		, "file": "extras/Tests/stdc.nfcNumber.ci"
		, "line": 14
		, "left": {
			"": "14"
			, "kind": ".literal"
			, "type": "int32"
			, "file": "extras/Tests/stdc.nfcNumber.ci"
			, "line": 14
			, "value": "14"
		}
		, "right": {
			"": "3"
			, "kind": ".literal"
			, "type": "int32"
			, "file": "extras/Tests/stdc.nfcNumber.ci"
			, "line": 14
			, "value": "3"
		}
	}
}, {
	"": "g_comp"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "g_comp"
	, "type": "int32"
	, "file": "extras/Tests/stdc.nfcNumber.ci"
	, "line": 15
	, "size": 4
	, "offs": 2092
	, "static": false
	, "const": false
	, "ast": {
		"": "63 << 2"
		, "kind": "<<"
		, "type": "int32"
		, "file": "extras/Tests/stdc.nfcNumber.ci"
		, "line": 15
		, "left": {
			"": "63"
			, "kind": ".literal"
			, "type": "int32"
			, "file": "extras/Tests/stdc.nfcNumber.ci"
			, "line": 15
			, "value": "63"
		}
		, "right": {
			"": "2"
			, "kind": ".literal"
			, "type": "int32"
			, "file": "extras/Tests/stdc.nfcNumber.ci"
			, "line": 15
			, "value": "2"
		}
	}
}, {
	"": "b_comp"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "b_comp"
	, "type": "int32"
	, "file": "extras/Tests/stdc.nfcNumber.ci"
	, "line": 16
	, "size": 4
	, "offs": 2096
	, "static": false
	, "const": false
	, "ast": {
		"": "31 << 3"
		, "kind": "<<"
		, "type": "int32"
		, "file": "extras/Tests/stdc.nfcNumber.ci"
		, "line": 16
		, "left": {
			"": "31"
			, "kind": ".literal"
			, "type": "int32"
			, "file": "extras/Tests/stdc.nfcNumber.ci"
			, "line": 16
			, "value": "31"
		}
		, "right": {
			"": "3"
			, "kind": ".literal"
			, "type": "int32"
			, "file": "extras/Tests/stdc.nfcNumber.ci"
			, "line": 16
			, "value": "3"
		}
	}
}, {
	"": "r5g6b5"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "r5g6b5"
	, "type": "int32"
	, "file": "extras/Tests/stdc.nfcNumber.ci"
	, "line": 18
	, "size": 4
	, "offs": 2100
	, "static": false
	, "const": false
	, "ast": {
		"": "rgb565(r_comp, g_comp, b_comp)"
		, "kind": "()"
		, "type": "int32"
		, "file": "extras/Tests/stdc.nfcNumber.ci"
		, "line": 18
		, "args": [{
		}, {
			"": "r_comp"
			, "kind": ".variable"
			, "type": "int32"
			, "file": "extras/Tests/stdc.nfcNumber.ci"
			, "line": 18
			, "value": "r_comp"
		}, {
			"": "g_comp"
			, "kind": ".variable"
			, "type": "int32"
			, "file": "extras/Tests/stdc.nfcNumber.ci"
			, "line": 18
			, "value": "g_comp"
		}, {
			"": "b_comp"
			, "kind": ".variable"
			, "type": "int32"
			, "file": "extras/Tests/stdc.nfcNumber.ci"
			, "line": 18
			, "value": "b_comp"
		}]
	}
}, {
	"": "r8g8b8"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "r8g8b8"
	, "type": "int32"
	, "file": "extras/Tests/stdc.nfcNumber.ci"
	, "line": 19
	, "size": 4
	, "offs": 2104
	, "static": false
	, "const": false
	, "ast": {
		"": "rgb888(r_comp, g_comp, b_comp)"
		, "kind": "()"
		, "type": "int32"
		, "file": "extras/Tests/stdc.nfcNumber.ci"
		, "line": 19
		, "args": [{
		}, {
			"": "r_comp"
			, "kind": ".variable"
			, "type": "int32"
			, "file": "extras/Tests/stdc.nfcNumber.ci"
			, "line": 19
			, "value": "r_comp"
		}, {
			"": "g_comp"
			, "kind": ".variable"
			, "type": "int32"
			, "file": "extras/Tests/stdc.nfcNumber.ci"
			, "line": 19
			, "value": "g_comp"
		}, {
			"": "b_comp"
			, "kind": ".variable"
			, "type": "int32"
			, "file": "extras/Tests/stdc.nfcNumber.ci"
			, "line": 19
			, "value": "b_comp"
		}]
	}
}, {
	"": "zxtR5"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "zxtR5"
	, "type": "int32"
	, "file": "extras/Tests/stdc.nfcNumber.ci"
	, "line": 21
	, "size": 4
	, "offs": 2108
	, "static": false
	, "const": false
	, "ast": {
		"": "uint32.zxt(r5g6b5, 11, 5)"
		, "kind": "()"
		, "type": "int32"
		, "file": "extras/Tests/stdc.nfcNumber.ci"
		, "line": 21
		, "args": [{
		}, {
			"": "r5g6b5"
			, "kind": ".variable"
			, "type": "int32"
			, "file": "extras/Tests/stdc.nfcNumber.ci"
			, "line": 21
			, "value": "r5g6b5"
		}, {
			"": "11"
			, "kind": ".literal"
			, "type": "int32"
			, "file": "extras/Tests/stdc.nfcNumber.ci"
			, "line": 21
			, "value": "11"
		}, {
			"": "5"
			, "kind": ".literal"
			, "type": "int32"
			, "file": "extras/Tests/stdc.nfcNumber.ci"
			, "line": 21
			, "value": "5"
		}]
	}
}, {
	"": "zxtG6"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "zxtG6"
	, "type": "int32"
	, "file": "extras/Tests/stdc.nfcNumber.ci"
	, "line": 22
	, "size": 4
	, "offs": 2112
	, "static": false
	, "const": false
	, "ast": {
		"": "uint32.zxt(r5g6b5, 5, 6)"
		, "kind": "()"
		, "type": "int32"
		, "file": "extras/Tests/stdc.nfcNumber.ci"
		, "line": 22
		, "args": [{
		}, {
			"": "r5g6b5"
			, "kind": ".variable"
			, "type": "int32"
			, "file": "extras/Tests/stdc.nfcNumber.ci"
			, "line": 22
			, "value": "r5g6b5"
		}, {
			"": "5"
			, "kind": ".literal"
			, "type": "int32"
			, "file": "extras/Tests/stdc.nfcNumber.ci"
			, "line": 22
			, "value": "5"
		}, {
			"": "6"
			, "kind": ".literal"
			, "type": "int32"
			, "file": "extras/Tests/stdc.nfcNumber.ci"
			, "line": 22
			, "value": "6"
		}]
	}
}, {
	"": "zxtB5"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "zxtB5"
	, "type": "int32"
	, "file": "extras/Tests/stdc.nfcNumber.ci"
	, "line": 23
	, "size": 4
	, "offs": 2116
	, "static": false
	, "const": false
	, "ast": {
		"": "uint32.zxt(r5g6b5, 0, 5)"
		, "kind": "()"
		, "type": "int32"
		, "file": "extras/Tests/stdc.nfcNumber.ci"
		, "line": 23
		, "args": [{
		}, {
			"": "r5g6b5"
			, "kind": ".variable"
			, "type": "int32"
			, "file": "extras/Tests/stdc.nfcNumber.ci"
			, "line": 23
			, "value": "r5g6b5"
		}, {
			"": "0"
			, "kind": ".literal"
			, "type": "int32"
			, "file": "extras/Tests/stdc.nfcNumber.ci"
			, "line": 23
			, "value": "0"
		}, {
			"": "5"
			, "kind": ".literal"
			, "type": "int32"
			, "file": "extras/Tests/stdc.nfcNumber.ci"
			, "line": 23
			, "value": "5"
		}]
	}
}, {
	"": "sxtR5"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "sxtR5"
	, "type": "int32"
	, "file": "extras/Tests/stdc.nfcNumber.ci"
	, "line": 25
	, "size": 4
	, "offs": 2120
	, "static": false
	, "const": false
	, "ast": {
		"": "uint32.sxt(r5g6b5, 11, 5)"
		, "kind": "()"
		, "type": "int32"
		, "file": "extras/Tests/stdc.nfcNumber.ci"
		, "line": 25
		, "args": [{
		}, {
			"": "r5g6b5"
			, "kind": ".variable"
			, "type": "int32"
			, "file": "extras/Tests/stdc.nfcNumber.ci"
			, "line": 25
			, "value": "r5g6b5"
		}, {
			"": "11"
			, "kind": ".literal"
			, "type": "int32"
			, "file": "extras/Tests/stdc.nfcNumber.ci"
			, "line": 25
			, "value": "11"
		}, {
			"": "5"
			, "kind": ".literal"
			, "type": "int32"
			, "file": "extras/Tests/stdc.nfcNumber.ci"
			, "line": 25
			, "value": "5"
		}]
	}
}, {
	"": "sxtG6"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "sxtG6"
	, "type": "int32"
	, "file": "extras/Tests/stdc.nfcNumber.ci"
	, "line": 26
	, "size": 4
	, "offs": 2124
	, "static": false
	, "const": false
	, "ast": {
		"": "uint32.sxt(r5g6b5, 5, 6)"
		, "kind": "()"
		, "type": "int32"
		, "file": "extras/Tests/stdc.nfcNumber.ci"
		, "line": 26
		, "args": [{
		}, {
			"": "r5g6b5"
			, "kind": ".variable"
			, "type": "int32"
			, "file": "extras/Tests/stdc.nfcNumber.ci"
			, "line": 26
			, "value": "r5g6b5"
		}, {
			"": "5"
			, "kind": ".literal"
			, "type": "int32"
			, "file": "extras/Tests/stdc.nfcNumber.ci"
			, "line": 26
			, "value": "5"
		}, {
			"": "6"
			, "kind": ".literal"
			, "type": "int32"
			, "file": "extras/Tests/stdc.nfcNumber.ci"
			, "line": 26
			, "value": "6"
		}]
	}
}, {
	"": "sxtB5"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "sxtB5"
	, "type": "int32"
	, "file": "extras/Tests/stdc.nfcNumber.ci"
	, "line": 27
	, "size": 4
	, "offs": 2128
	, "static": false
	, "const": false
	, "ast": {
		"": "uint32.sxt(r5g6b5, 0, 5)"
		, "kind": "()"
		, "type": "int32"
		, "file": "extras/Tests/stdc.nfcNumber.ci"
		, "line": 27
		, "args": [{
		}, {
			"": "r5g6b5"
			, "kind": ".variable"
			, "type": "int32"
			, "file": "extras/Tests/stdc.nfcNumber.ci"
			, "line": 27
			, "value": "r5g6b5"
		}, {
			"": "0"
			, "kind": ".literal"
			, "type": "int32"
			, "file": "extras/Tests/stdc.nfcNumber.ci"
			, "line": 27
			, "value": "0"
		}, {
			"": "5"
			, "kind": ".literal"
			, "type": "int32"
			, "file": "extras/Tests/stdc.nfcNumber.ci"
			, "line": 27
			, "value": "5"
		}]
	}
}, {
	"": "zxtR8"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "zxtR8"
	, "type": "int32"
	, "file": "extras/Tests/stdc.nfcNumber.ci"
	, "line": 29
	, "size": 4
	, "offs": 2132
	, "static": false
	, "const": false
	, "ast": {
		"": "uint32.zxt(r8g8b8, 16, 8)"
		, "kind": "()"
		, "type": "int32"
		, "file": "extras/Tests/stdc.nfcNumber.ci"
		, "line": 29
		, "args": [{
		}, {
			"": "r8g8b8"
			, "kind": ".variable"
			, "type": "int32"
			, "file": "extras/Tests/stdc.nfcNumber.ci"
			, "line": 29
			, "value": "r8g8b8"
		}, {
			"": "16"
			, "kind": ".literal"
			, "type": "int32"
			, "file": "extras/Tests/stdc.nfcNumber.ci"
			, "line": 29
			, "value": "16"
		}, {
			"": "8"
			, "kind": ".literal"
			, "type": "int32"
			, "file": "extras/Tests/stdc.nfcNumber.ci"
			, "line": 29
			, "value": "8"
		}]
	}
}, {
	"": "zxtG8"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "zxtG8"
	, "type": "int32"
	, "file": "extras/Tests/stdc.nfcNumber.ci"
	, "line": 30
	, "size": 4
	, "offs": 2136
	, "static": false
	, "const": false
	, "ast": {
		"": "uint32.zxt(r8g8b8, 8, 8)"
		, "kind": "()"
		, "type": "int32"
		, "file": "extras/Tests/stdc.nfcNumber.ci"
		, "line": 30
		, "args": [{
		}, {
			"": "r8g8b8"
			, "kind": ".variable"
			, "type": "int32"
			, "file": "extras/Tests/stdc.nfcNumber.ci"
			, "line": 30
			, "value": "r8g8b8"
		}, {
			"": "8"
			, "kind": ".literal"
			, "type": "int32"
			, "file": "extras/Tests/stdc.nfcNumber.ci"
			, "line": 30
			, "value": "8"
		}, {
			"": "8"
			, "kind": ".literal"
			, "type": "int32"
			, "file": "extras/Tests/stdc.nfcNumber.ci"
			, "line": 30
			, "value": "8"
		}]
	}
}, {
	"": "zxtB8"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "zxtB8"
	, "type": "int32"
	, "file": "extras/Tests/stdc.nfcNumber.ci"
	, "line": 31
	, "size": 4
	, "offs": 2140
	, "static": false
	, "const": false
	, "ast": {
		"": "uint32.zxt(r8g8b8, 0, 8)"
		, "kind": "()"
		, "type": "int32"
		, "file": "extras/Tests/stdc.nfcNumber.ci"
		, "line": 31
		, "args": [{
		}, {
			"": "r8g8b8"
			, "kind": ".variable"
			, "type": "int32"
			, "file": "extras/Tests/stdc.nfcNumber.ci"
			, "line": 31
			, "value": "r8g8b8"
		}, {
			"": "0"
			, "kind": ".literal"
			, "type": "int32"
			, "file": "extras/Tests/stdc.nfcNumber.ci"
			, "line": 31
			, "value": "0"
		}, {
			"": "8"
			, "kind": ".literal"
			, "type": "int32"
			, "file": "extras/Tests/stdc.nfcNumber.ci"
			, "line": 31
			, "value": "8"
		}]
	}
}, {
	"": "sxtR8"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "sxtR8"
	, "type": "int32"
	, "file": "extras/Tests/stdc.nfcNumber.ci"
	, "line": 33
	, "size": 4
	, "offs": 2144
	, "static": false
	, "const": false
	, "ast": {
		"": "uint32.sxt(r8g8b8, 16, 8)"
		, "kind": "()"
		, "type": "int32"
		, "file": "extras/Tests/stdc.nfcNumber.ci"
		, "line": 33
		, "args": [{
		}, {
			"": "r8g8b8"
			, "kind": ".variable"
			, "type": "int32"
			, "file": "extras/Tests/stdc.nfcNumber.ci"
			, "line": 33
			, "value": "r8g8b8"
		}, {
			"": "16"
			, "kind": ".literal"
			, "type": "int32"
			, "file": "extras/Tests/stdc.nfcNumber.ci"
			, "line": 33
			, "value": "16"
		}, {
			"": "8"
			, "kind": ".literal"
			, "type": "int32"
			, "file": "extras/Tests/stdc.nfcNumber.ci"
			, "line": 33
			, "value": "8"
		}]
	}
}, {
	"": "sxtG8"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "sxtG8"
	, "type": "int32"
	, "file": "extras/Tests/stdc.nfcNumber.ci"
	, "line": 34
	, "size": 4
	, "offs": 2148
	, "static": false
	, "const": false
	, "ast": {
		"": "uint32.sxt(r8g8b8, 8, 8)"
		, "kind": "()"
		, "type": "int32"
		, "file": "extras/Tests/stdc.nfcNumber.ci"
		, "line": 34
		, "args": [{
		}, {
			"": "r8g8b8"
			, "kind": ".variable"
			, "type": "int32"
			, "file": "extras/Tests/stdc.nfcNumber.ci"
			, "line": 34
			, "value": "r8g8b8"
		}, {
			"": "8"
			, "kind": ".literal"
			, "type": "int32"
			, "file": "extras/Tests/stdc.nfcNumber.ci"
			, "line": 34
			, "value": "8"
		}, {
			"": "8"
			, "kind": ".literal"
			, "type": "int32"
			, "file": "extras/Tests/stdc.nfcNumber.ci"
			, "line": 34
			, "value": "8"
		}]
	}
}, {
	"": "sxtB8"
	, "kind": "variable"
	, "cast": "i32"
	, "name": "sxtB8"
	, "type": "int32"
	, "file": "extras/Tests/stdc.nfcNumber.ci"
	, "line": 35
	, "size": 4
	, "offs": 2152
	, "static": false
	, "const": false
	, "ast": {
		"": "uint32.sxt(r8g8b8, 0, 8)"
		, "kind": "()"
		, "type": "int32"
		, "file": "extras/Tests/stdc.nfcNumber.ci"
		, "line": 35
		, "args": [{
		}, {
			"": "r8g8b8"
			, "kind": ".variable"
			, "type": "int32"
			, "file": "extras/Tests/stdc.nfcNumber.ci"
			, "line": 35
			, "value": "r8g8b8"
		}, {
			"": "0"
			, "kind": ".literal"
			, "type": "int32"
			, "file": "extras/Tests/stdc.nfcNumber.ci"
			, "line": 35
			, "value": "0"
		}, {
			"": "8"
			, "kind": ".literal"
			, "type": "int32"
			, "file": "extras/Tests/stdc.nfcNumber.ci"
			, "line": 35
			, "value": "8"
		}]
	}
}, {
	"": "sinF64"
	, "kind": "variable"
	, "cast": "f64"
	, "name": "sinF64"
	, "type": "float64"
	, "file": "extras/Tests/stdc.nfcNumber.ci"
	, "line": 37
	, "size": 8
	, "offs": 2160
	, "static": false
	, "const": false
	, "ast": {
		"": "float64.sin(pi64 / (2))"
		, "kind": "()"
		, "type": "float64"
		, "file": "extras/Tests/stdc.nfcNumber.ci"
		, "line": 37
		, "args": [{
			"": "pi64 / (2)"
			, "kind": "/"
			, "type": "float64"
			, "file": "extras/Tests/stdc.nfcNumber.ci"
			, "line": 37
			, "left": {
				"": "pi64"
				, "kind": ".variable"
				, "type": "float64"
				, "file": "extras/Tests/stdc.nfcNumber.ci"
				, "line": 37
				, "value": "pi64"
			}
			, "right": {
				"": "(2)"
				, "kind": "()"
				, "type": "float64"
				, "file": "extras/Tests/stdc.nfcNumber.ci"
				, "line": 37
				, "args": [{
					"": "2"
					, "kind": ".literal"
					, "type": "int32"
					, "file": "extras/Tests/stdc.nfcNumber.ci"
					, "line": 37
					, "value": "2"
				}]
			}
		}]
	}
}, {
	"": "cosF64"
	, "kind": "variable"
	, "cast": "f64"
	, "name": "cosF64"
	, "type": "float64"
	, "file": "extras/Tests/stdc.nfcNumber.ci"
	, "line": 38
	, "size": 8
	, "offs": 2168
	, "static": false
	, "const": false
	, "ast": {
		"": "float64.cos(pi64 / (2))"
		, "kind": "()"
		, "type": "float64"
		, "file": "extras/Tests/stdc.nfcNumber.ci"
		, "line": 38
		, "args": [{
			"": "pi64 / (2)"
			, "kind": "/"
			, "type": "float64"
			, "file": "extras/Tests/stdc.nfcNumber.ci"
			, "line": 38
			, "left": {
				"": "pi64"
				, "kind": ".variable"
				, "type": "float64"
				, "file": "extras/Tests/stdc.nfcNumber.ci"
				, "line": 38
				, "value": "pi64"
			}
			, "right": {
				"": "(2)"
				, "kind": "()"
				, "type": "float64"
				, "file": "extras/Tests/stdc.nfcNumber.ci"
				, "line": 38
				, "args": [{
					"": "2"
					, "kind": ".literal"
					, "type": "int32"
					, "file": "extras/Tests/stdc.nfcNumber.ci"
					, "line": 38
					, "value": "2"
				}]
			}
		}]
	}
}, {
	"": "tanF64"
	, "kind": "variable"
	, "cast": "f64"
	, "name": "tanF64"
	, "type": "float64"
	, "file": "extras/Tests/stdc.nfcNumber.ci"
	, "line": 39
	, "size": 8
	, "offs": 2176
	, "static": false
	, "const": false
	, "ast": {
		"": "float64.tan(pi64 / (4))"
		, "kind": "()"
		, "type": "float64"
		, "file": "extras/Tests/stdc.nfcNumber.ci"
		, "line": 39
		, "args": [{
			"": "pi64 / (4)"
			, "kind": "/"
			, "type": "float64"
			, "file": "extras/Tests/stdc.nfcNumber.ci"
			, "line": 39
			, "left": {
				"": "pi64"
				, "kind": ".variable"
				, "type": "float64"
				, "file": "extras/Tests/stdc.nfcNumber.ci"
				, "line": 39
				, "value": "pi64"
			}
			, "right": {
				"": "(4)"
				, "kind": "()"
				, "type": "float64"
				, "file": "extras/Tests/stdc.nfcNumber.ci"
				, "line": 39
				, "args": [{
					"": "4"
					, "kind": ".literal"
					, "type": "int32"
					, "file": "extras/Tests/stdc.nfcNumber.ci"
					, "line": 39
					, "value": "4"
				}]
			}
		}]
	}
}, {
	"": "logF64"
	, "kind": "variable"
	, "cast": "f64"
	, "name": "logF64"
	, "type": "float64"
	, "file": "extras/Tests/stdc.nfcNumber.ci"
	, "line": 40
	, "size": 8
	, "offs": 2184
	, "static": false
	, "const": false
	, "ast": {
		"": "float64.log(e64 * e64 * e64)"
		, "kind": "()"
		, "type": "float64"
		, "file": "extras/Tests/stdc.nfcNumber.ci"
		, "line": 40
		, "args": [{
			"": "e64 * e64 * e64"
			, "kind": "*"
			, "type": "float64"
			, "file": "extras/Tests/stdc.nfcNumber.ci"
			, "line": 40
			, "left": {
				"": "e64 * e64"
				, "kind": "*"
				, "type": "float64"
				, "file": "extras/Tests/stdc.nfcNumber.ci"
				, "line": 40
				, "left": {
					"": "e64"
					, "kind": ".variable"
					, "type": "float64"
					, "file": "extras/Tests/stdc.nfcNumber.ci"
					, "line": 40
					, "value": "e64"
				}
				, "right": {
					"": "e64"
					, "kind": ".variable"
					, "type": "float64"
					, "file": "extras/Tests/stdc.nfcNumber.ci"
					, "line": 40
					, "value": "e64"
				}
			}
			, "right": {
				"": "e64"
				, "kind": ".variable"
				, "type": "float64"
				, "file": "extras/Tests/stdc.nfcNumber.ci"
				, "line": 40
				, "value": "e64"
			}
		}]
	}
}, {
	"": "expF64"
	, "kind": "variable"
	, "cast": "f64"
	, "name": "expF64"
	, "type": "float64"
	, "file": "extras/Tests/stdc.nfcNumber.ci"
	, "line": 41
	, "size": 8
	, "offs": 2192
	, "static": false
	, "const": false
	, "ast": {
		"": "float64.exp(1.000000)"
		, "kind": "()"
		, "type": "float64"
		, "file": "extras/Tests/stdc.nfcNumber.ci"
		, "line": 41
		, "args": [{
			"": "1.000000"
			, "kind": ".literal"
			, "type": "float64"
			, "file": "extras/Tests/stdc.nfcNumber.ci"
			, "line": 41
			, "value": "1.000000"
		}]
	}
}, {
	"": "powF64"
	, "kind": "variable"
	, "cast": "f64"
	, "name": "powF64"
	, "type": "float64"
	, "file": "extras/Tests/stdc.nfcNumber.ci"
	, "line": 42
	, "size": 8
	, "offs": 2200
	, "static": false
	, "const": false
	, "ast": {
		"": "float64.pow(pi64 * pi64, 0.500000)"
		, "kind": "()"
		, "type": "float64"
		, "file": "extras/Tests/stdc.nfcNumber.ci"
		, "line": 42
		, "args": [{
		}, {
			"": "pi64 * pi64"
			, "kind": "*"
			, "type": "float64"
			, "file": "extras/Tests/stdc.nfcNumber.ci"
			, "line": 42
			, "left": {
				"": "pi64"
				, "kind": ".variable"
				, "type": "float64"
				, "file": "extras/Tests/stdc.nfcNumber.ci"
				, "line": 42
				, "value": "pi64"
			}
			, "right": {
				"": "pi64"
				, "kind": ".variable"
				, "type": "float64"
				, "file": "extras/Tests/stdc.nfcNumber.ci"
				, "line": 42
				, "value": "pi64"
			}
		}, {
			"": "0.500000"
			, "kind": ".literal"
			, "type": "float64"
			, "file": "extras/Tests/stdc.nfcNumber.ci"
			, "line": 42
			, "value": "0.500000"
		}]
	}
}, {
	"": "sqrtF64"
	, "kind": "variable"
	, "cast": "f64"
	, "name": "sqrtF64"
	, "type": "float64"
	, "file": "extras/Tests/stdc.nfcNumber.ci"
	, "line": 43
	, "size": 8
	, "offs": 2208
	, "static": false
	, "const": false
	, "ast": {
		"": "float64.sqrt(pi64 * pi64)"
		, "kind": "()"
		, "type": "float64"
		, "file": "extras/Tests/stdc.nfcNumber.ci"
		, "line": 43
		, "args": [{
			"": "pi64 * pi64"
			, "kind": "*"
			, "type": "float64"
			, "file": "extras/Tests/stdc.nfcNumber.ci"
			, "line": 43
			, "left": {
				"": "pi64"
				, "kind": ".variable"
				, "type": "float64"
				, "file": "extras/Tests/stdc.nfcNumber.ci"
				, "line": 43
				, "value": "pi64"
			}
			, "right": {
				"": "pi64"
				, "kind": ".variable"
				, "type": "float64"
				, "file": "extras/Tests/stdc.nfcNumber.ci"
				, "line": 43
				, "value": "pi64"
			}
		}]
	}
}, {
	"": "atanF64"
	, "kind": "variable"
	, "cast": "f64"
	, "name": "atanF64"
	, "type": "float64"
	, "file": "extras/Tests/stdc.nfcNumber.ci"
	, "line": 44
	, "size": 8
	, "offs": 2216
	, "static": false
	, "const": false
	, "ast": {
		"": "float64.atan2(pi64, 1.000000)"
		, "kind": "()"
		, "type": "float64"
		, "file": "extras/Tests/stdc.nfcNumber.ci"
		, "line": 44
		, "args": [{
		}, {
			"": "pi64"
			, "kind": ".variable"
			, "type": "float64"
			, "file": "extras/Tests/stdc.nfcNumber.ci"
			, "line": 44
			, "value": "pi64"
		}, {
			"": "1.000000"
			, "kind": ".literal"
			, "type": "float64"
			, "file": "extras/Tests/stdc.nfcNumber.ci"
			, "line": 44
			, "value": "1.000000"
		}]
	}
}, {
	"": "sinF32"
	, "kind": "variable"
	, "cast": "f32"
	, "name": "sinF32"
	, "type": "float32"
	, "file": "extras/Tests/stdc.nfcNumber.ci"
	, "line": 46
	, "size": 4
	, "offs": 2220
	, "static": false
	, "const": false
	, "ast": {
		"": "float32.sin(pi32 / (2))"
		, "kind": "()"
		, "type": "float32"
		, "file": "extras/Tests/stdc.nfcNumber.ci"
		, "line": 46
		, "args": [{
			"": "pi32 / (2)"
			, "kind": "/"
			, "type": "float32"
			, "file": "extras/Tests/stdc.nfcNumber.ci"
			, "line": 46
			, "left": {
				"": "pi32"
				, "kind": ".variable"
				, "type": "float32"
				, "file": "extras/Tests/stdc.nfcNumber.ci"
				, "line": 46
				, "value": "pi32"
			}
			, "right": {
				"": "(2)"
				, "kind": "()"
				, "type": "float32"
				, "file": "extras/Tests/stdc.nfcNumber.ci"
				, "line": 46
				, "args": [{
					"": "2"
					, "kind": ".literal"
					, "type": "int32"
					, "file": "extras/Tests/stdc.nfcNumber.ci"
					, "line": 46
					, "value": "2"
				}]
			}
		}]
	}
}, {
	"": "cosF32"
	, "kind": "variable"
	, "cast": "f32"
	, "name": "cosF32"
	, "type": "float32"
	, "file": "extras/Tests/stdc.nfcNumber.ci"
	, "line": 47
	, "size": 4
	, "offs": 2224
	, "static": false
	, "const": false
	, "ast": {
		"": "float32.cos(pi32 / (2))"
		, "kind": "()"
		, "type": "float32"
		, "file": "extras/Tests/stdc.nfcNumber.ci"
		, "line": 47
		, "args": [{
			"": "pi32 / (2)"
			, "kind": "/"
			, "type": "float32"
			, "file": "extras/Tests/stdc.nfcNumber.ci"
			, "line": 47
			, "left": {
				"": "pi32"
				, "kind": ".variable"
				, "type": "float32"
				, "file": "extras/Tests/stdc.nfcNumber.ci"
				, "line": 47
				, "value": "pi32"
			}
			, "right": {
				"": "(2)"
				, "kind": "()"
				, "type": "float32"
				, "file": "extras/Tests/stdc.nfcNumber.ci"
				, "line": 47
				, "args": [{
					"": "2"
					, "kind": ".literal"
					, "type": "int32"
					, "file": "extras/Tests/stdc.nfcNumber.ci"
					, "line": 47
					, "value": "2"
				}]
			}
		}]
	}
}, {
	"": "tanF32"
	, "kind": "variable"
	, "cast": "f32"
	, "name": "tanF32"
	, "type": "float32"
	, "file": "extras/Tests/stdc.nfcNumber.ci"
	, "line": 48
	, "size": 4
	, "offs": 2228
	, "static": false
	, "const": false
	, "ast": {
		"": "float32.tan(pi32 / (4))"
		, "kind": "()"
		, "type": "float32"
		, "file": "extras/Tests/stdc.nfcNumber.ci"
		, "line": 48
		, "args": [{
			"": "pi32 / (4)"
			, "kind": "/"
			, "type": "float32"
			, "file": "extras/Tests/stdc.nfcNumber.ci"
			, "line": 48
			, "left": {
				"": "pi32"
				, "kind": ".variable"
				, "type": "float32"
				, "file": "extras/Tests/stdc.nfcNumber.ci"
				, "line": 48
				, "value": "pi32"
			}
			, "right": {
				"": "(4)"
				, "kind": "()"
				, "type": "float32"
				, "file": "extras/Tests/stdc.nfcNumber.ci"
				, "line": 48
				, "args": [{
					"": "4"
					, "kind": ".literal"
					, "type": "int32"
					, "file": "extras/Tests/stdc.nfcNumber.ci"
					, "line": 48
					, "value": "4"
				}]
			}
		}]
	}
}, {
	"": "logF32"
	, "kind": "variable"
	, "cast": "f32"
	, "name": "logF32"
	, "type": "float32"
	, "file": "extras/Tests/stdc.nfcNumber.ci"
	, "line": 49
	, "size": 4
	, "offs": 2232
	, "static": false
	, "const": false
	, "ast": {
		"": "float32.log(e32 * e32 * e32)"
		, "kind": "()"
		, "type": "float32"
		, "file": "extras/Tests/stdc.nfcNumber.ci"
		, "line": 49
		, "args": [{
			"": "e32 * e32 * e32"
			, "kind": "*"
			, "type": "float32"
			, "file": "extras/Tests/stdc.nfcNumber.ci"
			, "line": 49
			, "left": {
				"": "e32 * e32"
				, "kind": "*"
				, "type": "float32"
				, "file": "extras/Tests/stdc.nfcNumber.ci"
				, "line": 49
				, "left": {
					"": "e32"
					, "kind": ".variable"
					, "type": "float32"
					, "file": "extras/Tests/stdc.nfcNumber.ci"
					, "line": 49
					, "value": "e32"
				}
				, "right": {
					"": "e32"
					, "kind": ".variable"
					, "type": "float32"
					, "file": "extras/Tests/stdc.nfcNumber.ci"
					, "line": 49
					, "value": "e32"
				}
			}
			, "right": {
				"": "e32"
				, "kind": ".variable"
				, "type": "float32"
				, "file": "extras/Tests/stdc.nfcNumber.ci"
				, "line": 49
				, "value": "e32"
			}
		}]
	}
}, {
	"": "expF32"
	, "kind": "variable"
	, "cast": "f32"
	, "name": "expF32"
	, "type": "float32"
	, "file": "extras/Tests/stdc.nfcNumber.ci"
	, "line": 50
	, "size": 4
	, "offs": 2236
	, "static": false
	, "const": false
	, "ast": {
		"": "float32.exp(1.000000)"
		, "kind": "()"
		, "type": "float32"
		, "file": "extras/Tests/stdc.nfcNumber.ci"
		, "line": 50
		, "args": [{
			"": "1.000000"
			, "kind": ".literal"
			, "type": "float32"
			, "file": "extras/Tests/stdc.nfcNumber.ci"
			, "line": 50
			, "value": "1.000000"
		}]
	}
}, {
	"": "powF32"
	, "kind": "variable"
	, "cast": "f32"
	, "name": "powF32"
	, "type": "float32"
	, "file": "extras/Tests/stdc.nfcNumber.ci"
	, "line": 51
	, "size": 4
	, "offs": 2240
	, "static": false
	, "const": false
	, "ast": {
		"": "float32.pow(pi32 * pi32, 0.500000)"
		, "kind": "()"
		, "type": "float32"
		, "file": "extras/Tests/stdc.nfcNumber.ci"
		, "line": 51
		, "args": [{
		}, {
			"": "pi32 * pi32"
			, "kind": "*"
			, "type": "float32"
			, "file": "extras/Tests/stdc.nfcNumber.ci"
			, "line": 51
			, "left": {
				"": "pi32"
				, "kind": ".variable"
				, "type": "float32"
				, "file": "extras/Tests/stdc.nfcNumber.ci"
				, "line": 51
				, "value": "pi32"
			}
			, "right": {
				"": "pi32"
				, "kind": ".variable"
				, "type": "float32"
				, "file": "extras/Tests/stdc.nfcNumber.ci"
				, "line": 51
				, "value": "pi32"
			}
		}, {
			"": "0.500000"
			, "kind": ".literal"
			, "type": "float32"
			, "file": "extras/Tests/stdc.nfcNumber.ci"
			, "line": 51
			, "value": "0.500000"
		}]
	}
}, {
	"": "sqrtF32"
	, "kind": "variable"
	, "cast": "f32"
	, "name": "sqrtF32"
	, "type": "float32"
	, "file": "extras/Tests/stdc.nfcNumber.ci"
	, "line": 52
	, "size": 4
	, "offs": 2244
	, "static": false
	, "const": false
	, "ast": {
		"": "float32.sqrt(pi32 * pi32)"
		, "kind": "()"
		, "type": "float32"
		, "file": "extras/Tests/stdc.nfcNumber.ci"
		, "line": 52
		, "args": [{
			"": "pi32 * pi32"
			, "kind": "*"
			, "type": "float32"
			, "file": "extras/Tests/stdc.nfcNumber.ci"
			, "line": 52
			, "left": {
				"": "pi32"
				, "kind": ".variable"
				, "type": "float32"
				, "file": "extras/Tests/stdc.nfcNumber.ci"
				, "line": 52
				, "value": "pi32"
			}
			, "right": {
				"": "pi32"
				, "kind": ".variable"
				, "type": "float32"
				, "file": "extras/Tests/stdc.nfcNumber.ci"
				, "line": 52
				, "value": "pi32"
			}
		}]
	}
}, {
	"": "atanF32"
	, "kind": "variable"
	, "cast": "f32"
	, "name": "atanF32"
	, "type": "float32"
	, "file": "extras/Tests/stdc.nfcNumber.ci"
	, "line": 53
	, "size": 4
	, "offs": 2248
	, "static": false
	, "const": false
	, "ast": {
		"": "float32.atan2(pi32, 1.000000)"
		, "kind": "()"
		, "type": "float32"
		, "file": "extras/Tests/stdc.nfcNumber.ci"
		, "line": 53
		, "args": [{
		}, {
			"": "pi32"
			, "kind": ".variable"
			, "type": "float32"
			, "file": "extras/Tests/stdc.nfcNumber.ci"
			, "line": 53
			, "value": "pi32"
		}, {
			"": "1.000000"
			, "kind": ".literal"
			, "type": "float32"
			, "file": "extras/Tests/stdc.nfcNumber.ci"
			, "line": 53
			, "value": "1.000000"
		}]
	}
}, {
	"": "realloc(data: pointer, size: int32): pointer"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "realloc"
	, "type": "function"
	, "file": "extras/Tests/stdc.nfcMemory.ci"
	, "line": 3
	, "args": [{
		"": ".result"
		, "kind": "inline"
		, "cast": "ref"
		, "name": ".result"
		, "type": "pointer"
		, "file": "extras/Tests/stdc.nfcMemory.ci"
		, "line": 3
		, "size": 4
		, "offs": 0
		, "static": false
		, "const": false
	}, {
		"": "data"
		, "kind": "inline"
		, "cast": "ref"
		, "name": "data"
		, "type": "pointer"
		, "file": "extras/Tests/stdc.nfcMemory.ci"
		, "line": 3
		, "size": 4
		, "offs": 4
		, "static": false
		, "const": false
	}, {
		"": "size"
		, "kind": "inline"
		, "cast": "i32"
		, "name": "size"
		, "type": "int32"
		, "file": "extras/Tests/stdc.nfcMemory.ci"
		, "line": 3
		, "size": 4
		, "offs": 8
		, "static": false
		, "const": false
	}]
	, "size": 0
	, "offs": 0
	, "static": false
	, "const": false
	, "ast": {
		"": "pointer.alloc(data, size)"
		, "kind": "()"
		, "type": "pointer"
		, "file": "extras/Tests/stdc.nfcMemory.ci"
		, "line": 3
		, "args": [{
		}, {
			"": "data"
			, "kind": ".variable"
			, "type": "pointer"
			, "file": "extras/Tests/stdc.nfcMemory.ci"
			, "line": 3
			, "value": "data"
		}, {
			"": "size"
			, "kind": ".variable"
			, "type": "int32"
			, "file": "extras/Tests/stdc.nfcMemory.ci"
			, "line": 3
			, "value": "size"
		}]
	}
}, {
	"": "malloc(size: int32): pointer"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "malloc"
	, "type": "function"
	, "file": "extras/Tests/stdc.nfcMemory.ci"
	, "line": 4
	, "args": [{
		"": ".result"
		, "kind": "inline"
		, "cast": "ref"
		, "name": ".result"
		, "type": "pointer"
		, "file": "extras/Tests/stdc.nfcMemory.ci"
		, "line": 4
		, "size": 4
		, "offs": 0
		, "static": false
		, "const": false
	}, {
		"": "size"
		, "kind": "inline"
		, "cast": "i32"
		, "name": "size"
		, "type": "int32"
		, "file": "extras/Tests/stdc.nfcMemory.ci"
		, "line": 4
		, "size": 4
		, "offs": 0
		, "static": false
		, "const": false
	}]
	, "size": 0
	, "offs": 0
	, "static": false
	, "const": false
	, "ast": {
		"": "pointer.alloc(null, size)"
		, "kind": "()"
		, "type": "pointer"
		, "file": "extras/Tests/stdc.nfcMemory.ci"
		, "line": 4
		, "args": [{
		}, {
			"": "null"
			, "kind": ".variable"
			, "type": "pointer"
			, "file": "extras/Tests/stdc.nfcMemory.ci"
			, "line": 4
			, "value": "null"
		}, {
			"": "size"
			, "kind": ".variable"
			, "type": "int32"
			, "file": "extras/Tests/stdc.nfcMemory.ci"
			, "line": 4
			, "value": "size"
		}]
	}
}, {
	"": "free(data: pointer): pointer"
	, "kind": "inline"
	, "cast": "inline"
	, "name": "free"
	, "type": "function"
	, "file": "extras/Tests/stdc.nfcMemory.ci"
	, "line": 5
	, "args": [{
		"": ".result"
		, "kind": "inline"
		, "cast": "ref"
		, "name": ".result"
		, "type": "pointer"
		, "file": "extras/Tests/stdc.nfcMemory.ci"
		, "line": 5
		, "size": 4
		, "offs": 0
		, "static": false
		, "const": false
	}, {
		"": "data"
		, "kind": "inline"
		, "cast": "ref"
		, "name": "data"
		, "type": "pointer"
		, "file": "extras/Tests/stdc.nfcMemory.ci"
		, "line": 5
		, "size": 4
		, "offs": 0
		, "static": false
		, "const": false
	}]
	, "size": 0
	, "offs": 0
	, "static": false
	, "const": false
	, "ast": {
		"": "pointer.alloc(data, 0)"
		, "kind": "()"
		, "type": "pointer"
		, "file": "extras/Tests/stdc.nfcMemory.ci"
		, "line": 5
		, "args": [{
		}, {
			"": "data"
			, "kind": ".variable"
			, "type": "pointer"
			, "file": "extras/Tests/stdc.nfcMemory.ci"
			, "line": 5
			, "value": "data"
		}, {
			"": "0"
			, "kind": ".literal"
			, "type": "int32"
			, "file": "extras/Tests/stdc.nfcMemory.ci"
			, "line": 5
			, "value": "0"
		}]
	}
}, {
	"": "p1"
	, "kind": "variable"
	, "cast": "ref"
	, "name": "p1"
	, "type": "pointer"
	, "file": "extras/Tests/stdc.nfcMemory.ci"
	, "line": 7
	, "size": 4
	, "offs": 2252
	, "static": false
	, "const": false
	, "ast": {
		"": "malloc(1024)"
		, "kind": "()"
		, "type": "pointer"
		, "file": "extras/Tests/stdc.nfcMemory.ci"
		, "line": 7
		, "args": [{
			"": "1024"
			, "kind": ".literal"
			, "type": "int32"
			, "file": "extras/Tests/stdc.nfcMemory.ci"
			, "line": 7
			, "value": "1024"
		}]
	}
}, {
	"": "p2"
	, "kind": "variable"
	, "cast": "ref"
	, "name": "p2"
	, "type": "pointer"
	, "file": "extras/Tests/stdc.nfcMemory.ci"
	, "line": 8
	, "size": 4
	, "offs": 2256
	, "static": false
	, "const": false
	, "ast": {
		"": "malloc(80)"
		, "kind": "()"
		, "type": "pointer"
		, "file": "extras/Tests/stdc.nfcMemory.ci"
		, "line": 8
		, "args": [{
			"": "80"
			, "kind": ".literal"
			, "type": "int32"
			, "file": "extras/Tests/stdc.nfcMemory.ci"
			, "line": 8
			, "value": "80"
		}]
	}
}, {
	"": "p3"
	, "kind": "variable"
	, "cast": "ref"
	, "name": "p3"
	, "type": "pointer"
	, "file": "extras/Tests/stdc.nfcMemory.ci"
	, "line": 9
	, "size": 4
	, "offs": 2260
	, "static": false
	, "const": false
	, "ast": {
		"": "malloc(160)"
		, "kind": "()"
		, "type": "pointer"
		, "file": "extras/Tests/stdc.nfcMemory.ci"
		, "line": 9
		, "args": [{
			"": "160"
			, "kind": ".literal"
			, "type": "int32"
			, "file": "extras/Tests/stdc.nfcMemory.ci"
			, "line": 9
			, "value": "160"
		}]
	}
}, {
	"": "p4"
	, "kind": "variable"
	, "cast": "ref"
	, "name": "p4"
	, "type": "pointer"
	, "file": "extras/Tests/stdc.nfcMemory.ci"
	, "line": 10
	, "size": 4
	, "offs": 2264
	, "static": false
	, "const": false
	, "ast": {
		"": "malloc(820)"
		, "kind": "()"
		, "type": "pointer"
		, "file": "extras/Tests/stdc.nfcMemory.ci"
		, "line": 10
		, "args": [{
			"": "820"
			, "kind": ".literal"
			, "type": "int32"
			, "file": "extras/Tests/stdc.nfcMemory.ci"
			, "line": 10
			, "value": "820"
		}]
	}
}, {
	"": "val1"
	, "kind": "variable"
	, "cast": "i64"
	, "name": "val1"
	, "type": "int64"
	, "file": "extras/Tests/stdc.nfcMemory.ci"
	, "line": 23
	, "size": 8
	, "offs": 2272
	, "static": false
	, "const": false
	, "ast": {
		"": "42"
		, "kind": ".literal"
		, "type": "int32"
		, "file": "extras/Tests/stdc.nfcMemory.ci"
		, "line": 23
		, "value": "42"
	}
}, {
	"": "val2"
	, "kind": "variable"
	, "cast": "i64"
	, "name": "val2"
	, "type": "int64"
	, "file": "extras/Tests/stdc.nfcMemory.ci"
	, "line": 24
	, "size": 8
	, "offs": 2280
	, "static": false
	, "const": false
	, "ast": {
		"": "96"
		, "kind": ".literal"
		, "type": "int32"
		, "file": "extras/Tests/stdc.nfcMemory.ci"
		, "line": 24
		, "value": "96"
	}
}, {
	"": ".main(): void"
	, "kind": "function"
	, "cast": "inline"
	, "name": ".main"
	, "type": "function"
	, "args": [{
		"": ".result"
		, "kind": "variable"
		, "cast": "inline"
		, "name": ".result"
		, "type": "void"
		, "size": 0
		, "offs": 0
		, "static": false
		, "const": false
	}]
	, "size": 5024
	, "offs": 149688
	, "static": true
	, "const": false
	, "ast": {
		"": "{...}"
		, "kind": "{}"
		, "type": "void"
		, "stmt": [{
			"": "intGlobal;"
			, "kind": ";"
			, "type": "int32"
			, "file": "extras/Tests/lang.varInitByVal.ci"
			, "line": 38
		}, {
			"": "intConstant;"
			, "kind": ";"
			, "type": "int32"
			, "file": "extras/Tests/lang.varInitByVal.ci"
			, "line": 43
		}, {
			"": "{...}"
			, "kind": "{}"
			, "type": "void"
			, "file": "stdlib.ci"
			, "line": 3
			, "stmt": [{
				"": "static if (typename(raise) == function)"
				, "kind": "static if"
				, "type": "void"
				, "file": "stdlib.ci"
				, "line": 3
				, "test": {
					"": "typename(raise) == function"
					, "kind": "=="
					, "type": "bool"
					, "file": "stdlib.ci"
					, "line": 3
					, "left": {
						"": "typename(raise)"
						, "kind": "()"
						, "type": "typename"
						, "file": "stdlib.ci"
						, "line": 3
						, "args": [{
							"": "raise"
							, "kind": ".variable"
							, "type": "void"
							, "file": "stdlib.ci"
							, "line": 3
							, "value": "raise"
						}]
					}
					, "right": {
						"": "function"
						, "kind": ".variable"
						, "type": "typename"
						, "file": "stdlib.ci"
						, "line": 3
						, "value": "function"
					}
				}
				, "then": {
					"": "{...}"
					, "kind": "{}"
					, "type": "void"
					, "file": "stdlib.ci"
					, "line": 3
					, "stmt": [{
						"": "verbose(message: char[*], inspect: variant): void"
						, "kind": ".variable"
						, "type": "typename"
						, "file": "stdlib.ci"
						, "line": 5
						, "value": "verbose(message: char[*], inspect: variant): void"
					}, {
						"": "verbose(message: char[*]): void"
						, "kind": ".variable"
						, "type": "typename"
						, "file": "stdlib.ci"
						, "line": 6
						, "value": "verbose(message: char[*]): void"
					}, {
						"": "trace(message: char[*], inspect: variant): void"
						, "kind": ".variable"
						, "type": "typename"
						, "file": "stdlib.ci"
						, "line": 8
						, "value": "trace(message: char[*], inspect: variant): void"
					}, {
						"": "trace(message: char[*]): void"
						, "kind": ".variable"
						, "type": "typename"
						, "file": "stdlib.ci"
						, "line": 9
						, "value": "trace(message: char[*]): void"
					}, {
						"": "debug(message: char[*], inspect: variant): void"
						, "kind": ".variable"
						, "type": "typename"
						, "file": "stdlib.ci"
						, "line": 11
						, "value": "debug(message: char[*], inspect: variant): void"
					}, {
						"": "debug(message: char[*]): void"
						, "kind": ".variable"
						, "type": "typename"
						, "file": "stdlib.ci"
						, "line": 12
						, "value": "debug(message: char[*]): void"
					}, {
						"": "info(message: char[*], inspect: variant): void"
						, "kind": ".variable"
						, "type": "typename"
						, "file": "stdlib.ci"
						, "line": 14
						, "value": "info(message: char[*], inspect: variant): void"
					}, {
						"": "info(message: char[*]): void"
						, "kind": ".variable"
						, "type": "typename"
						, "file": "stdlib.ci"
						, "line": 15
						, "value": "info(message: char[*]): void"
					}, {
						"": "warn(message: char[*], inspect: variant): void"
						, "kind": ".variable"
						, "type": "typename"
						, "file": "stdlib.ci"
						, "line": 17
						, "value": "warn(message: char[*], inspect: variant): void"
					}, {
						"": "warn(message: char[*]): void"
						, "kind": ".variable"
						, "type": "typename"
						, "file": "stdlib.ci"
						, "line": 18
						, "value": "warn(message: char[*]): void"
					}, {
						"": "error(message: char[*], inspect: variant): void"
						, "kind": ".variable"
						, "type": "typename"
						, "file": "stdlib.ci"
						, "line": 20
						, "value": "error(message: char[*], inspect: variant): void"
					}, {
						"": "error(message: char[*]): void"
						, "kind": ".variable"
						, "type": "typename"
						, "file": "stdlib.ci"
						, "line": 21
						, "value": "error(message: char[*]): void"
					}, {
						"": "abort(message: char[*], inspect: variant): void"
						, "kind": ".variable"
						, "type": "typename"
						, "file": "stdlib.ci"
						, "line": 23
						, "value": "abort(message: char[*], inspect: variant): void"
					}, {
						"": "abort(message: char[*]): void"
						, "kind": ".variable"
						, "type": "typename"
						, "file": "stdlib.ci"
						, "line": 24
						, "value": "abort(message: char[*]): void"
					}, {
						"": "abort(): void"
						, "kind": ".variable"
						, "type": "typename"
						, "file": "stdlib.ci"
						, "line": 25
						, "value": "abort(): void"
					}, {
						"": "assert(condition: bool, message: char[*], inspect: variant): void"
						, "kind": ".variable"
						, "type": "typename"
						, "file": "stdlib.ci"
						, "line": 27
						, "value": "assert(condition: bool, message: char[*], inspect: variant): void"
					}, {
						"": "assert(condition: bool, message: char[*]): void"
						, "kind": ".variable"
						, "type": "typename"
						, "file": "stdlib.ci"
						, "line": 28
						, "value": "assert(condition: bool, message: char[*]): void"
					}, {
						"": "assert(condition: bool): void"
						, "kind": ".variable"
						, "type": "typename"
						, "file": "stdlib.ci"
						, "line": 29
						, "value": "assert(condition: bool): void"
					}]
				}
			}, {
				"": "sizeof(type: typename): int32"
				, "kind": ".variable"
				, "type": "typename"
				, "file": "stdlib.ci"
				, "line": 33
				, "value": "sizeof(type: typename): int32"
			}]
		}, {
			"": "{...}"
			, "kind": "{}"
			, "type": "void"
			, "file": "test.ci"
			, "line": 4
			, "stmt": [{
				"": "integer"
				, "kind": ".variable"
				, "type": "typename"
				, "file": "test.ci"
				, "line": 4
				, "value": "integer"
			}, {
				"": "static if (0 == 0)"
				, "kind": "static if"
				, "type": "void"
				, "file": "extras/Tests/lang.statementIf.ci"
				, "line": 3
				, "test": {
					"": "0 == 0"
					, "kind": "=="
					, "type": "bool"
					, "file": "extras/Tests/lang.statementIf.ci"
					, "line": 3
					, "left": {
						"": "0"
						, "kind": ".literal"
						, "type": "int32"
						, "file": "extras/Tests/lang.statementIf.ci"
						, "line": 3
						, "value": "0"
					}
					, "right": {
						"": "0"
						, "kind": ".literal"
						, "type": "int32"
						, "file": "extras/Tests/lang.statementIf.ci"
						, "line": 3
						, "value": "0"
					}
				}
				, "then": {
					"": "{...}"
					, "kind": "{}"
					, "type": "void"
					, "file": "extras/Tests/lang.statementIf.ci"
					, "line": 3
					, "stmt": [{
						"": "raise(raise.debug, \"0 == 0\", null, 1);"
						, "kind": ";"
						, "type": "void"
						, "file": "extras/Tests/lang.statementIf.ci"
						, "line": 4
					}]
				}
			}, {
				"": "static if (0 != 0)"
				, "kind": "static if"
				, "type": "void"
				, "file": "extras/Tests/lang.statementIf.ci"
				, "line": 7
				, "test": {
					"": "0 != 0"
					, "kind": "!="
					, "type": "bool"
					, "file": "extras/Tests/lang.statementIf.ci"
					, "line": 7
					, "left": {
						"": "0"
						, "kind": ".literal"
						, "type": "int32"
						, "file": "extras/Tests/lang.statementIf.ci"
						, "line": 7
						, "value": "0"
					}
					, "right": {
						"": "0"
						, "kind": ".literal"
						, "type": "int32"
						, "file": "extras/Tests/lang.statementIf.ci"
						, "line": 7
						, "value": "0"
					}
				}
				, "then": {
					"": "{...}"
					, "kind": "{}"
					, "type": "void"
					, "file": "extras/Tests/lang.statementIf.ci"
					, "line": 7
					, "stmt": [{
						"": "raise(raise.debug, \"0 != 0\", null, 2);"
						, "kind": ";"
						, "type": "void"
						, "file": "extras/Tests/lang.statementIf.ci"
						, "line": 8
					}]
				}
			}, {
				"": "static if (0 == 0)"
				, "kind": "static if"
				, "type": "void"
				, "file": "extras/Tests/lang.statementIf.ci"
				, "line": 11
				, "test": {
					"": "0 == 0"
					, "kind": "=="
					, "type": "bool"
					, "file": "extras/Tests/lang.statementIf.ci"
					, "line": 11
					, "left": {
						"": "0"
						, "kind": ".literal"
						, "type": "int32"
						, "file": "extras/Tests/lang.statementIf.ci"
						, "line": 11
						, "value": "0"
					}
					, "right": {
						"": "0"
						, "kind": ".literal"
						, "type": "int32"
						, "file": "extras/Tests/lang.statementIf.ci"
						, "line": 11
						, "value": "0"
					}
				}
				, "then": {
					"": "{...}"
					, "kind": "{}"
					, "type": "void"
					, "file": "extras/Tests/lang.statementIf.ci"
					, "line": 11
					, "stmt": [{
						"": "raise(raise.debug, \"0 == 0\", null, 3);"
						, "kind": ";"
						, "type": "void"
						, "file": "extras/Tests/lang.statementIf.ci"
						, "line": 12
					}]
				}
				, "else": {
					"": "{...}"
					, "kind": "{}"
					, "type": "void"
					, "file": "extras/Tests/lang.statementIf.ci"
					, "line": 14
					, "stmt": [{
						"": "raise(raise.debug, \"0 != 0\", null, 4);"
						, "kind": ";"
						, "type": "void"
						, "file": "extras/Tests/lang.statementIf.ci"
						, "line": 15
					}]
				}
			}, {
				"": "static if (0 != 0)"
				, "kind": "static if"
				, "type": "void"
				, "file": "extras/Tests/lang.statementIf.ci"
				, "line": 18
				, "test": {
					"": "0 != 0"
					, "kind": "!="
					, "type": "bool"
					, "file": "extras/Tests/lang.statementIf.ci"
					, "line": 18
					, "left": {
						"": "0"
						, "kind": ".literal"
						, "type": "int32"
						, "file": "extras/Tests/lang.statementIf.ci"
						, "line": 18
						, "value": "0"
					}
					, "right": {
						"": "0"
						, "kind": ".literal"
						, "type": "int32"
						, "file": "extras/Tests/lang.statementIf.ci"
						, "line": 18
						, "value": "0"
					}
				}
				, "then": {
					"": "{...}"
					, "kind": "{}"
					, "type": "void"
					, "file": "extras/Tests/lang.statementIf.ci"
					, "line": 18
					, "stmt": [{
						"": "raise(raise.debug, \"0 != 0\", null, 5);"
						, "kind": ";"
						, "type": "void"
						, "file": "extras/Tests/lang.statementIf.ci"
						, "line": 19
					}]
				}
				, "else": {
					"": "{...}"
					, "kind": "{}"
					, "type": "void"
					, "file": "extras/Tests/lang.statementIf.ci"
					, "line": 21
					, "stmt": [{
						"": "raise(raise.debug, \"0 == 0\", null, 6);"
						, "kind": ";"
						, "type": "void"
						, "file": "extras/Tests/lang.statementIf.ci"
						, "line": 22
					}]
				}
			}, {
				"": "{...}"
				, "kind": "{}"
				, "type": "void"
				, "file": "extras/Tests/lang.statementIf.ci"
				, "line": 25
				, "stmt": [{
					"": "t"
					, "kind": ".variable"
					, "type": "int32"
					, "file": "extras/Tests/lang.statementIf.ci"
					, "line": 26
					, "value": "t"
				}, {
					"": "if (t == 0)"
					, "kind": "if"
					, "type": "void"
					, "file": "extras/Tests/lang.statementIf.ci"
					, "line": 28
					, "test": {
						"": "t == 0"
						, "kind": "=="
						, "type": "bool"
						, "file": "extras/Tests/lang.statementIf.ci"
						, "line": 28
						, "left": {
							"": "t"
							, "kind": ".variable"
							, "type": "int32"
							, "file": "extras/Tests/lang.statementIf.ci"
							, "line": 28
							, "value": "t"
						}
						, "right": {
							"": "0"
							, "kind": ".literal"
							, "type": "int32"
							, "file": "extras/Tests/lang.statementIf.ci"
							, "line": 28
							, "value": "0"
						}
					}
					, "then": {
						"": "{...}"
						, "kind": "{}"
						, "type": "void"
						, "file": "extras/Tests/lang.statementIf.ci"
						, "line": 28
						, "stmt": [{
							"": "raise(raise.debug, \"t == 0\", t, 7);"
							, "kind": ";"
							, "type": "void"
							, "file": "extras/Tests/lang.statementIf.ci"
							, "line": 29
						}]
					}
				}, {
					"": "if (t != 0)"
					, "kind": "if"
					, "type": "void"
					, "file": "extras/Tests/lang.statementIf.ci"
					, "line": 32
					, "test": {
						"": "t != 0"
						, "kind": "!="
						, "type": "bool"
						, "file": "extras/Tests/lang.statementIf.ci"
						, "line": 32
						, "left": {
							"": "t"
							, "kind": ".variable"
							, "type": "int32"
							, "file": "extras/Tests/lang.statementIf.ci"
							, "line": 32
							, "value": "t"
						}
						, "right": {
							"": "0"
							, "kind": ".literal"
							, "type": "int32"
							, "file": "extras/Tests/lang.statementIf.ci"
							, "line": 32
							, "value": "0"
						}
					}
					, "then": {
						"": "{...}"
						, "kind": "{}"
						, "type": "void"
						, "file": "extras/Tests/lang.statementIf.ci"
						, "line": 32
						, "stmt": [{
							"": "raise(raise.debug, \"t != 0\", t, 8);"
							, "kind": ";"
							, "type": "void"
							, "file": "extras/Tests/lang.statementIf.ci"
							, "line": 33
						}]
					}
				}, {
					"": "if (t == 0)"
					, "kind": "if"
					, "type": "void"
					, "file": "extras/Tests/lang.statementIf.ci"
					, "line": 36
					, "test": {
						"": "t == 0"
						, "kind": "=="
						, "type": "bool"
						, "file": "extras/Tests/lang.statementIf.ci"
						, "line": 36
						, "left": {
							"": "t"
							, "kind": ".variable"
							, "type": "int32"
							, "file": "extras/Tests/lang.statementIf.ci"
							, "line": 36
							, "value": "t"
						}
						, "right": {
							"": "0"
							, "kind": ".literal"
							, "type": "int32"
							, "file": "extras/Tests/lang.statementIf.ci"
							, "line": 36
							, "value": "0"
						}
					}
					, "then": {
						"": "{...}"
						, "kind": "{}"
						, "type": "void"
						, "file": "extras/Tests/lang.statementIf.ci"
						, "line": 36
						, "stmt": [{
							"": "raise(raise.debug, \"t == 0\", t, 10);"
							, "kind": ";"
							, "type": "void"
							, "file": "extras/Tests/lang.statementIf.ci"
							, "line": 37
						}]
					}
					, "else": {
						"": "{...}"
						, "kind": "{}"
						, "type": "void"
						, "file": "extras/Tests/lang.statementIf.ci"
						, "line": 39
						, "stmt": [{
							"": "raise(raise.debug, \"t != 0\", t, 9);"
							, "kind": ";"
							, "type": "void"
							, "file": "extras/Tests/lang.statementIf.ci"
							, "line": 40
						}]
					}
				}, {
					"": "if (t != 0)"
					, "kind": "if"
					, "type": "void"
					, "file": "extras/Tests/lang.statementIf.ci"
					, "line": 43
					, "test": {
						"": "t != 0"
						, "kind": "!="
						, "type": "bool"
						, "file": "extras/Tests/lang.statementIf.ci"
						, "line": 43
						, "left": {
							"": "t"
							, "kind": ".variable"
							, "type": "int32"
							, "file": "extras/Tests/lang.statementIf.ci"
							, "line": 43
							, "value": "t"
						}
						, "right": {
							"": "0"
							, "kind": ".literal"
							, "type": "int32"
							, "file": "extras/Tests/lang.statementIf.ci"
							, "line": 43
							, "value": "0"
						}
					}
					, "then": {
						"": "{...}"
						, "kind": "{}"
						, "type": "void"
						, "file": "extras/Tests/lang.statementIf.ci"
						, "line": 43
						, "stmt": [{
							"": "raise(raise.debug, \"t != 0\", t, 11);"
							, "kind": ";"
							, "type": "void"
							, "file": "extras/Tests/lang.statementIf.ci"
							, "line": 44
						}]
					}
					, "else": {
						"": "{...}"
						, "kind": "{}"
						, "type": "void"
						, "file": "extras/Tests/lang.statementIf.ci"
						, "line": 46
						, "stmt": [{
							"": "raise(raise.debug, \"t == 0\", t, 12);"
							, "kind": ";"
							, "type": "void"
							, "file": "extras/Tests/lang.statementIf.ci"
							, "line": 47
						}]
					}
				}]
			}, {
				"": "static if (typename(int64) == null)"
				, "kind": "static if"
				, "type": "void"
				, "file": "extras/Tests/lang.statementIf.ci"
				, "line": 51
				, "test": {
					"": "typename(int64) == null"
					, "kind": "=="
					, "type": "bool"
					, "file": "extras/Tests/lang.statementIf.ci"
					, "line": 51
					, "left": {
						"": "typename(int64)"
						, "kind": "()"
						, "type": "typename"
						, "file": "extras/Tests/lang.statementIf.ci"
						, "line": 51
						, "args": [{
							"": "int64"
							, "kind": ".variable"
							, "type": "typename"
							, "file": "extras/Tests/lang.statementIf.ci"
							, "line": 51
							, "value": "int64"
						}]
					}
					, "right": {
						"": "null"
						, "kind": ".variable"
						, "type": "pointer"
						, "file": "extras/Tests/lang.statementIf.ci"
						, "line": 51
						, "value": "null"
					}
				}
				, "then": {
					"": "{...}"
					, "kind": "{}"
					, "type": "void"
					, "file": "extras/Tests/lang.statementIf.ci"
					, "line": 51
					, "stmt": [{
						"": "abort(\"integer is not declared\");"
						, "kind": ";"
						, "type": "void"
						, "file": "extras/Tests/lang.statementIf.ci"
						, "line": 52
					}]
				}
			}, {
				"": "static if (typename(int64) != typename)"
				, "kind": "static if"
				, "type": "void"
				, "file": "extras/Tests/lang.statementIf.ci"
				, "line": 55
				, "test": {
					"": "typename(int64) != typename"
					, "kind": "!="
					, "type": "bool"
					, "file": "extras/Tests/lang.statementIf.ci"
					, "line": 55
					, "left": {
						"": "typename(int64)"
						, "kind": "()"
						, "type": "typename"
						, "file": "extras/Tests/lang.statementIf.ci"
						, "line": 55
						, "args": [{
							"": "int64"
							, "kind": ".variable"
							, "type": "typename"
							, "file": "extras/Tests/lang.statementIf.ci"
							, "line": 55
							, "value": "int64"
						}]
					}
					, "right": {
						"": "typename"
						, "kind": ".variable"
						, "type": "typename"
						, "file": "extras/Tests/lang.statementIf.ci"
						, "line": 55
						, "value": "typename"
					}
				}
				, "then": {
					"": "{...}"
					, "kind": "{}"
					, "type": "void"
					, "file": "extras/Tests/lang.statementIf.ci"
					, "line": 55
					, "stmt": [{
						"": "abort(\"integer is not a type\");"
						, "kind": ";"
						, "type": "void"
						, "file": "extras/Tests/lang.statementIf.ci"
						, "line": 56
					}]
				}
			}, {
				"": "for ( ; ; )"
				, "kind": "for"
				, "type": "void"
				, "file": "extras/Tests/lang.statementFor.ci"
				, "line": 3
				, "stmt": {
					"": "{...}"
					, "kind": "{}"
					, "type": "void"
					, "file": "extras/Tests/lang.statementFor.ci"
					, "line": 3
					, "stmt": [{
						"": "debug(\"for ( ; ; )\");"
						, "kind": ";"
						, "type": "void"
						, "file": "extras/Tests/lang.statementFor.ci"
						, "line": 4
					}, {
						"": "break;"
						, "kind": "break"
						, "type": "void"
						, "file": "extras/Tests/lang.statementFor.ci"
						, "line": 5
					}]
				}
			}, {
				"": "for (i; i < 2; i := i + 1)"
				, "kind": "for"
				, "type": "void"
				, "file": "extras/Tests/lang.statementFor.ci"
				, "line": 8
				, "init": {
					"": "i"
					, "kind": ".variable"
					, "type": "int32"
					, "file": "extras/Tests/lang.statementFor.ci"
					, "line": 8
					, "value": "i"
				}
				, "test": {
					"": "i < 2"
					, "kind": "<"
					, "type": "bool"
					, "file": "extras/Tests/lang.statementFor.ci"
					, "line": 8
					, "left": {
						"": "i"
						, "kind": ".variable"
						, "type": "int32"
						, "file": "extras/Tests/lang.statementFor.ci"
						, "line": 8
						, "value": "i"
					}
					, "right": {
						"": "2"
						, "kind": ".literal"
						, "type": "int32"
						, "file": "extras/Tests/lang.statementFor.ci"
						, "line": 8
						, "value": "2"
					}
				}
				, "step": {
					"": "i := i + 1"
					, "kind": ":="
					, "type": "int32"
					, "file": "extras/Tests/lang.statementFor.ci"
					, "line": 8
					, "left": {
						"": "i"
						, "kind": ".variable"
						, "type": "int32"
						, "file": "extras/Tests/lang.statementFor.ci"
						, "line": 8
						, "value": "i"
					}
					, "right": {
						"": "i + 1"
						, "kind": "+"
						, "type": "int32"
						, "file": "extras/Tests/lang.statementFor.ci"
						, "line": 8
						, "left": {
							"": "i"
							, "kind": ".variable"
							, "type": "int32"
							, "file": "extras/Tests/lang.statementFor.ci"
							, "line": 8
							, "value": "i"
						}
						, "right": {
							"": "1"
							, "kind": ".literal"
							, "type": "int32"
							, "file": "extras/Tests/lang.statementFor.ci"
							, "line": 8
							, "value": "1"
						}
					}
				}
				, "stmt": {
					"": "{...}"
					, "kind": "{}"
					, "type": "void"
					, "file": "extras/Tests/lang.statementFor.ci"
					, "line": 8
					, "stmt": [{
						"": "debug(\"for (int i = 0; i < 2; i += 1)\", i);"
						, "kind": ";"
						, "type": "void"
						, "file": "extras/Tests/lang.statementFor.ci"
						, "line": 9
					}]
				}
			}, {
				"": "forIdx"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.statementFor.ci"
				, "line": 12
				, "value": "forIdx"
			}, {
				"": "for (forIdx := 0; forIdx < 2; forIdx := forIdx + 1)"
				, "kind": "for"
				, "type": "void"
				, "file": "extras/Tests/lang.statementFor.ci"
				, "line": 13
				, "init": {
					"": "forIdx := 0"
					, "kind": ":="
					, "type": "int32"
					, "file": "extras/Tests/lang.statementFor.ci"
					, "line": 13
					, "left": {
						"": "forIdx"
						, "kind": ".variable"
						, "type": "int32"
						, "file": "extras/Tests/lang.statementFor.ci"
						, "line": 13
						, "value": "forIdx"
					}
					, "right": {
						"": "0"
						, "kind": ".literal"
						, "type": "int32"
						, "file": "extras/Tests/lang.statementFor.ci"
						, "line": 13
						, "value": "0"
					}
				}
				, "test": {
					"": "forIdx < 2"
					, "kind": "<"
					, "type": "bool"
					, "file": "extras/Tests/lang.statementFor.ci"
					, "line": 13
					, "left": {
						"": "forIdx"
						, "kind": ".variable"
						, "type": "int32"
						, "file": "extras/Tests/lang.statementFor.ci"
						, "line": 13
						, "value": "forIdx"
					}
					, "right": {
						"": "2"
						, "kind": ".literal"
						, "type": "int32"
						, "file": "extras/Tests/lang.statementFor.ci"
						, "line": 13
						, "value": "2"
					}
				}
				, "step": {
					"": "forIdx := forIdx + 1"
					, "kind": ":="
					, "type": "int32"
					, "file": "extras/Tests/lang.statementFor.ci"
					, "line": 13
					, "left": {
						"": "forIdx"
						, "kind": ".variable"
						, "type": "int32"
						, "file": "extras/Tests/lang.statementFor.ci"
						, "line": 13
						, "value": "forIdx"
					}
					, "right": {
						"": "forIdx + 1"
						, "kind": "+"
						, "type": "int32"
						, "file": "extras/Tests/lang.statementFor.ci"
						, "line": 13
						, "left": {
							"": "forIdx"
							, "kind": ".variable"
							, "type": "int32"
							, "file": "extras/Tests/lang.statementFor.ci"
							, "line": 13
							, "value": "forIdx"
						}
						, "right": {
							"": "1"
							, "kind": ".literal"
							, "type": "int32"
							, "file": "extras/Tests/lang.statementFor.ci"
							, "line": 13
							, "value": "1"
						}
					}
				}
				, "stmt": {
					"": "{...}"
					, "kind": "{}"
					, "type": "void"
					, "file": "extras/Tests/lang.statementFor.ci"
					, "line": 13
					, "stmt": [{
						"": "debug(\"for (forIdx = 0; forIdx < 2; forIdx += 1)\", forIdx);"
						, "kind": ";"
						, "type": "void"
						, "file": "extras/Tests/lang.statementFor.ci"
						, "line": 14
					}]
				}
			}, {
				"": "rgbF32"
				, "kind": ".variable"
				, "type": "typename"
				, "file": "extras/Tests/lang.record.ci"
				, "line": 2
				, "value": "rgbF32"
			}, {
				"": "rgbU8"
				, "kind": ".variable"
				, "type": "typename"
				, "file": "extras/Tests/lang.record.ci"
				, "line": 9
				, "value": "rgbU8"
			}, {
				"": "color"
				, "kind": ".variable"
				, "type": "typename"
				, "file": "extras/Tests/lang.record.ci"
				, "line": 16
				, "value": "color"
			}, {
				"": "Color"
				, "kind": ".variable"
				, "type": "typename"
				, "file": "extras/Tests/lang.record.ci"
				, "line": 22
				, "value": "Color"
			}, {
				"": "record_pack0"
				, "kind": ".variable"
				, "type": "typename"
				, "file": "extras/Tests/lang.recordPack.ci"
				, "line": 2
				, "value": "record_pack0"
			}, {
				"": "record_pack1"
				, "kind": ".variable"
				, "type": "typename"
				, "file": "extras/Tests/lang.recordPack.ci"
				, "line": 12
				, "value": "record_pack1"
			}, {
				"": "record_pack2"
				, "kind": ".variable"
				, "type": "typename"
				, "file": "extras/Tests/lang.recordPack.ci"
				, "line": 22
				, "value": "record_pack2"
			}, {
				"": "record_pack4"
				, "kind": ".variable"
				, "type": "typename"
				, "file": "extras/Tests/lang.recordPack.ci"
				, "line": 32
				, "value": "record_pack4"
			}, {
				"": "record_pack8"
				, "kind": ".variable"
				, "type": "typename"
				, "file": "extras/Tests/lang.recordPack.ci"
				, "line": 42
				, "value": "record_pack8"
			}, {
				"": "record_packDef"
				, "kind": ".variable"
				, "type": "typename"
				, "file": "extras/Tests/lang.recordPack.ci"
				, "line": 52
				, "value": "record_packDef"
			}, {
				"": "zero(a: int32, b: int32): int32"
				, "kind": ".variable"
				, "type": "typename"
				, "file": "extras/Tests/lang.inlineArgs.ci"
				, "line": 3
				, "value": "zero(a: int32, b: int32): int32"
			}, {
				"": "last(a: int32, b: int32): int32"
				, "kind": ".variable"
				, "type": "typename"
				, "file": "extras/Tests/lang.inlineArgs.ci"
				, "line": 4
				, "value": "last(a: int32, b: int32): int32"
			}, {
				"": "sum(a: int32, b: int32): int32"
				, "kind": ".variable"
				, "type": "typename"
				, "file": "extras/Tests/lang.inlineArgs.ci"
				, "line": 5
				, "value": "sum(a: int32, b: int32): int32"
			}, {
				"": "any(a: int32, b: int32): int32"
				, "kind": ".variable"
				, "type": "typename"
				, "file": "extras/Tests/lang.inlineArgs.ci"
				, "line": 6
				, "value": "any(a: int32, b: int32): int32"
			}, {
				"": "min(a: int32, b: int32): int32"
				, "kind": ".variable"
				, "type": "typename"
				, "file": "extras/Tests/lang.inlineArgs.ci"
				, "line": 7
				, "value": "min(a: int32, b: int32): int32"
			}, {
				"": "sum(a: int32, b: int32, c: int32): int32"
				, "kind": ".variable"
				, "type": "typename"
				, "file": "extras/Tests/lang.inlineArgs.ci"
				, "line": 9
				, "value": "sum(a: int32, b: int32, c: int32): int32"
			}, {
				"": "any(a: int32, b: int32, c: int32): int32"
				, "kind": ".variable"
				, "type": "typename"
				, "file": "extras/Tests/lang.inlineArgs.ci"
				, "line": 10
				, "value": "any(a: int32, b: int32, c: int32): int32"
			}, {
				"": "min(a: int32, b: int32, c: int32): int32"
				, "kind": ".variable"
				, "type": "typename"
				, "file": "extras/Tests/lang.inlineArgs.ci"
				, "line": 11
				, "value": "min(a: int32, b: int32, c: int32): int32"
			}, {
				"": "ma"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.inlineArgs.ci"
				, "line": 16
				, "value": "ma"
			}, {
				"": "mb"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.inlineArgs.ci"
				, "line": 17
				, "value": "mb"
			}, {
				"": "mc"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.inlineArgs.ci"
				, "line": 18
				, "value": "mc"
			}, {
				"": "zeroVal"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.inlineArgs.ci"
				, "line": 20
				, "value": "zeroVal"
			}, {
				"": "zeroVar"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.inlineArgs.ci"
				, "line": 21
				, "value": "zeroVar"
			}, {
				"": "zeroXpr"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.inlineArgs.ci"
				, "line": 22
				, "value": "zeroXpr"
			}, {
				"": "lastVal"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.inlineArgs.ci"
				, "line": 24
				, "value": "lastVal"
			}, {
				"": "lastVar"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.inlineArgs.ci"
				, "line": 25
				, "value": "lastVar"
			}, {
				"": "lastXpr"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.inlineArgs.ci"
				, "line": 26
				, "value": "lastXpr"
			}, {
				"": "sum2Val"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.inlineArgs.ci"
				, "line": 28
				, "value": "sum2Val"
			}, {
				"": "sum2Var"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.inlineArgs.ci"
				, "line": 29
				, "value": "sum2Var"
			}, {
				"": "sum2Xpr"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.inlineArgs.ci"
				, "line": 30
				, "value": "sum2Xpr"
			}, {
				"": "any2Val"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.inlineArgs.ci"
				, "line": 32
				, "value": "any2Val"
			}, {
				"": "any2Var"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.inlineArgs.ci"
				, "line": 33
				, "value": "any2Var"
			}, {
				"": "any2Xpr"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.inlineArgs.ci"
				, "line": 34
				, "value": "any2Xpr"
			}, {
				"": "min2Val"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.inlineArgs.ci"
				, "line": 36
				, "value": "min2Val"
			}, {
				"": "min2Var"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.inlineArgs.ci"
				, "line": 37
				, "value": "min2Var"
			}, {
				"": "min2Xpr"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.inlineArgs.ci"
				, "line": 38
				, "value": "min2Xpr"
			}, {
				"": "any3Val"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.inlineArgs.ci"
				, "line": 45
				, "value": "any3Val"
			}, {
				"": "any3Var"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.inlineArgs.ci"
				, "line": 46
				, "value": "any3Var"
			}, {
				"": "any3Xpr"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.inlineArgs.ci"
				, "line": 47
				, "value": "any3Xpr"
			}, {
				"": "min3Val"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.inlineArgs.ci"
				, "line": 49
				, "value": "min3Val"
			}, {
				"": "min3Var"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.inlineArgs.ci"
				, "line": 50
				, "value": "min3Var"
			}, {
				"": "min3Xpr"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.inlineArgs.ci"
				, "line": 51
				, "value": "min3Xpr"
			}, {
				"": "overload"
				, "kind": ".variable"
				, "type": "typename"
				, "file": "extras/Tests/test.inlineOverload.ci"
				, "line": 3
				, "value": "overload"
			}, {
				"": "overload(): int32"
				, "kind": ".variable"
				, "type": "typename"
				, "file": "extras/Tests/test.inlineOverload.ci"
				, "line": 4
				, "value": "overload(): int32"
			}, {
				"": "overload(a: int32): int32"
				, "kind": ".variable"
				, "type": "typename"
				, "file": "extras/Tests/test.inlineOverload.ci"
				, "line": 5
				, "value": "overload(a: int32): int32"
			}, {
				"": "overload(a: float32): int32"
				, "kind": ".variable"
				, "type": "typename"
				, "file": "extras/Tests/test.inlineOverload.ci"
				, "line": 6
				, "value": "overload(a: float32): int32"
			}, {
				"": "overload(a: int32, b: int32): int32"
				, "kind": ".variable"
				, "type": "typename"
				, "file": "extras/Tests/test.inlineOverload.ci"
				, "line": 7
				, "value": "overload(a: int32, b: int32): int32"
			}, {
				"": "overload1"
				, "kind": ".variable"
				, "type": "float32"
				, "file": "extras/Tests/test.inlineOverload.ci"
				, "line": 9
				, "value": "overload1"
			}, {
				"": "overload2"
				, "kind": ".variable"
				, "type": "float32"
				, "file": "extras/Tests/test.inlineOverload.ci"
				, "line": 10
				, "value": "overload2"
			}, {
				"": "overload3"
				, "kind": ".variable"
				, "type": "float32"
				, "file": "extras/Tests/test.inlineOverload.ci"
				, "line": 11
				, "value": "overload3"
			}, {
				"": "overload4"
				, "kind": ".variable"
				, "type": "float32"
				, "file": "extras/Tests/test.inlineOverload.ci"
				, "line": 12
				, "value": "overload4"
			}, {
				"": "overload5"
				, "kind": ".variable"
				, "type": "float32"
				, "file": "extras/Tests/test.inlineOverload.ci"
				, "line": 13
				, "value": "overload5"
			}, {
				"": "emitldz32"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.inlineEmit.ci"
				, "line": 3
				, "value": "emitldz32"
			}, {
				"": "emitldz64"
				, "kind": ".variable"
				, "type": "int64"
				, "file": "extras/Tests/lang.inlineEmit.ci"
				, "line": 4
				, "value": "emitldz64"
			}, {
				"": "emitA"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.inlineEmit.ci"
				, "line": 6
				, "value": "emitA"
			}, {
				"": "emitB"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.inlineEmit.ci"
				, "line": 7
				, "value": "emitB"
			}, {
				"": "emitAddI32"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.inlineEmit.ci"
				, "line": 9
				, "value": "emitAddI32"
			}, {
				"": "emitDivI32"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.inlineEmit.ci"
				, "line": 10
				, "value": "emitDivI32"
			}, {
				"": "emitNfcF32"
				, "kind": ".variable"
				, "type": "float32"
				, "file": "extras/Tests/lang.inlineEmit.ci"
				, "line": 11
				, "value": "emitNfcF32"
			}, {
				"": "sizeofVoid"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.reflection.ci"
				, "line": 3
				, "value": "sizeofVoid"
			}, {
				"": "sizeofBool"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.reflection.ci"
				, "line": 4
				, "value": "sizeofBool"
			}, {
				"": "sizeofChar"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.reflection.ci"
				, "line": 5
				, "value": "sizeofChar"
			}, {
				"": "sizeofInt8"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.reflection.ci"
				, "line": 6
				, "value": "sizeofInt8"
			}, {
				"": "sizeofInt16"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.reflection.ci"
				, "line": 7
				, "value": "sizeofInt16"
			}, {
				"": "sizeofInt32"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.reflection.ci"
				, "line": 8
				, "value": "sizeofInt32"
			}, {
				"": "sizeofInt64"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.reflection.ci"
				, "line": 9
				, "value": "sizeofInt64"
			}, {
				"": "sizeofUint8"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.reflection.ci"
				, "line": 10
				, "value": "sizeofUint8"
			}, {
				"": "sizeofUint16"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.reflection.ci"
				, "line": 11
				, "value": "sizeofUint16"
			}, {
				"": "sizeofUint32"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.reflection.ci"
				, "line": 12
				, "value": "sizeofUint32"
			}, {
				"": "sizeofUint64"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.reflection.ci"
				, "line": 13
				, "value": "sizeofUint64"
			}, {
				"": "sizeofFloat32"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.reflection.ci"
				, "line": 14
				, "value": "sizeofFloat32"
			}, {
				"": "sizeofFloat64"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.reflection.ci"
				, "line": 15
				, "value": "sizeofFloat64"
			}, {
				"": "sizeofPointer"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.reflection.ci"
				, "line": 16
				, "value": "sizeofPointer"
			}, {
				"": "sizeofVariant"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.reflection.ci"
				, "line": 17
				, "value": "sizeofVariant"
			}, {
				"": "sizeofTypename"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.reflection.ci"
				, "line": 18
				, "value": "sizeofTypename"
			}, {
				"": "sizeofFunction"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.reflection.ci"
				, "line": 19
				, "value": "sizeofFunction"
			}, {
				"": "sizeofObject"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.reflection.ci"
				, "line": 20
				, "value": "sizeofObject"
			}, {
				"": "RecordSizeof"
				, "kind": ".variable"
				, "type": "typename"
				, "file": "extras/Tests/lang.reflection.ci"
				, "line": 22
				, "value": "RecordSizeof"
			}, {
				"": "RecordSizeofExt"
				, "kind": ".variable"
				, "type": "typename"
				, "file": "extras/Tests/lang.reflection.ci"
				, "line": 26
				, "value": "RecordSizeofExt"
			}, {
				"": "typeofRecord"
				, "kind": ".variable"
				, "type": "typename"
				, "file": "extras/Tests/lang.reflection.ci"
				, "line": 30
				, "value": "typeofRecord"
			}, {
				"": "nameOfRecord"
				, "kind": ".variable"
				, "type": "char[*]"
				, "file": "extras/Tests/lang.reflection.ci"
				, "line": 31
				, "value": "nameOfRecord"
			}, {
				"": "offsetOfRecord"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.reflection.ci"
				, "line": 32
				, "value": "offsetOfRecord"
			}, {
				"": "sizeOfRecord"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.reflection.ci"
				, "line": 33
				, "value": "sizeOfRecord"
			}, {
				"": "fileOfRecord"
				, "kind": ".variable"
				, "type": "char[*]"
				, "file": "extras/Tests/lang.reflection.ci"
				, "line": 34
				, "value": "fileOfRecord"
			}, {
				"": "lineOfRecord"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.reflection.ci"
				, "line": 35
				, "value": "lineOfRecord"
			}, {
				"": "typeofBase"
				, "kind": ".variable"
				, "type": "typename"
				, "file": "extras/Tests/lang.reflection.ci"
				, "line": 37
				, "value": "typeofBase"
			}, {
				"": "nameOfBase"
				, "kind": ".variable"
				, "type": "char[*]"
				, "file": "extras/Tests/lang.reflection.ci"
				, "line": 38
				, "value": "nameOfBase"
			}, {
				"": "offsetOfBase"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.reflection.ci"
				, "line": 39
				, "value": "offsetOfBase"
			}, {
				"": "sizeOfBase"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.reflection.ci"
				, "line": 40
				, "value": "sizeOfBase"
			}, {
				"": "fileOfBase"
				, "kind": ".variable"
				, "type": "char[*]"
				, "file": "extras/Tests/lang.reflection.ci"
				, "line": 41
				, "value": "fileOfBase"
			}, {
				"": "lineOfBase"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.reflection.ci"
				, "line": 42
				, "value": "lineOfBase"
			}, {
				"": "typeofBase1"
				, "kind": ".variable"
				, "type": "typename"
				, "file": "extras/Tests/lang.reflection.ci"
				, "line": 44
				, "value": "typeofBase1"
			}, {
				"": "offsetOfBase1"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.reflection.ci"
				, "line": 45
				, "value": "offsetOfBase1"
			}, {
				"": "sizeOfBase1"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.reflection.ci"
				, "line": 46
				, "value": "sizeOfBase1"
			}, {
				"": "typeofBase2"
				, "kind": ".variable"
				, "type": "typename"
				, "file": "extras/Tests/lang.reflection.ci"
				, "line": 48
				, "value": "typeofBase2"
			}, {
				"": "offsetOfBase2"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.reflection.ci"
				, "line": 49
				, "value": "offsetOfBase2"
			}, {
				"": "sizeOfBase2"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.reflection.ci"
				, "line": 50
				, "value": "sizeOfBase2"
			}, {
				"": "empty(): void"
				, "kind": ".variable"
				, "type": "function"
				, "file": "extras/Tests/lang.function.ci"
				, "line": 5
				, "value": "empty(): void"
			}, {
				"": "funAdd(x: int32, y: int32): int32"
				, "kind": ".variable"
				, "type": "function"
				, "file": "extras/Tests/lang.function.ci"
				, "line": 8
				, "value": "funAdd(x: int32, y: int32): int32"
			}, {
				"": "funAddResult"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.function.ci"
				, "line": 13
				, "value": "funAddResult"
			}, {
				"": "funAddRef(x: int32, y: int32): int32"
				, "kind": ".variable"
				, "type": "function"
				, "file": "extras/Tests/lang.function.ci"
				, "line": 16
				, "value": "funAddRef(x: int32, y: int32): int32"
			}, {
				"": "funAddRefResult"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.function.ci"
				, "line": 19
				, "value": "funAddRefResult"
			}, {
				"": "funMul(x: int32, y: int32): int32"
				, "kind": ".variable"
				, "type": "function"
				, "file": "extras/Tests/lang.function.ci"
				, "line": 22
				, "value": "funMul(x: int32, y: int32): int32"
			}, {
				"": "funMulResult"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.function.ci"
				, "line": 25
				, "value": "funMulResult"
			}, {
				"": "funMulRef(x: int32, y: int32): int32"
				, "kind": ".variable"
				, "type": "function"
				, "file": "extras/Tests/lang.function.ci"
				, "line": 28
				, "value": "funMulRef(x: int32, y: int32): int32"
			}, {
				"": "funMulRefResult"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.function.ci"
				, "line": 31
				, "value": "funMulRefResult"
			}, {
				"": "funMul(x: int32, y: int32): int32"
				, "kind": ".variable"
				, "type": "function"
				, "file": "extras/Tests/lang.function.ci"
				, "line": 34
				, "value": "funMul(x: int32, y: int32): int32"
			}, {
				"": "fib(n: uint32): uint32"
				, "kind": ".variable"
				, "type": "function"
				, "file": "extras/Tests/lang.function.ci"
				, "line": 39
				, "value": "fib(n: uint32): uint32"
			}, {
				"": "fibonacci_13"
				, "kind": ".variable"
				, "type": "uint32"
				, "file": "extras/Tests/lang.function.ci"
				, "line": 50
				, "value": "fibonacci_13"
			}, {
				"": "a"
				, "kind": ".variable"
				, "type": "typename"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 3
				, "value": "a"
			}, {
				"": "b"
				, "kind": ".variable"
				, "type": "typename"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 4
				, "value": "b"
			}, {
				"": "shift"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 5
				, "value": "shift"
			}, {
				"": "boolA"
				, "kind": ".variable"
				, "type": "bool"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 7
				, "value": "boolA"
			}, {
				"": "boolB"
				, "kind": ".variable"
				, "type": "bool"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 8
				, "value": "boolB"
			}, {
				"": "boolAnd"
				, "kind": ".variable"
				, "type": "bool"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 17
				, "value": "boolAnd"
			}, {
				"": "boolIor"
				, "kind": ".variable"
				, "type": "bool"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 18
				, "value": "boolIor"
			}, {
				"": "boolXor"
				, "kind": ".variable"
				, "type": "bool"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 19
				, "value": "boolXor"
			}, {
				"": "boolNot"
				, "kind": ".variable"
				, "type": "bool"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 22
				, "value": "boolNot"
			}, {
				"": "boolCeq"
				, "kind": ".variable"
				, "type": "bool"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 23
				, "value": "boolCeq"
			}, {
				"": "boolCne"
				, "kind": ".variable"
				, "type": "bool"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 24
				, "value": "boolCne"
			}, {
				"": "boolClt"
				, "kind": ".variable"
				, "type": "bool"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 25
				, "value": "boolClt"
			}, {
				"": "boolCle"
				, "kind": ".variable"
				, "type": "bool"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 26
				, "value": "boolCle"
			}, {
				"": "boolCgt"
				, "kind": ".variable"
				, "type": "bool"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 27
				, "value": "boolCgt"
			}, {
				"": "boolCge"
				, "kind": ".variable"
				, "type": "bool"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 28
				, "value": "boolCge"
			}, {
				"": "chrA"
				, "kind": ".variable"
				, "type": "char"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 30
				, "value": "chrA"
			}, {
				"": "chrB"
				, "kind": ".variable"
				, "type": "char"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 31
				, "value": "chrB"
			}, {
				"": "chrPls"
				, "kind": ".variable"
				, "type": "char"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 32
				, "value": "chrPls"
			}, {
				"": "chrNeg"
				, "kind": ".variable"
				, "type": "char"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 33
				, "value": "chrNeg"
			}, {
				"": "chrCmt"
				, "kind": ".variable"
				, "type": "char"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 34
				, "value": "chrCmt"
			}, {
				"": "chrAdd"
				, "kind": ".variable"
				, "type": "char"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 35
				, "value": "chrAdd"
			}, {
				"": "chrSub"
				, "kind": ".variable"
				, "type": "char"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 36
				, "value": "chrSub"
			}, {
				"": "chrMul"
				, "kind": ".variable"
				, "type": "char"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 37
				, "value": "chrMul"
			}, {
				"": "chrDiv"
				, "kind": ".variable"
				, "type": "char"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 38
				, "value": "chrDiv"
			}, {
				"": "chrMod"
				, "kind": ".variable"
				, "type": "char"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 39
				, "value": "chrMod"
			}, {
				"": "chrAnd"
				, "kind": ".variable"
				, "type": "char"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 40
				, "value": "chrAnd"
			}, {
				"": "chrIor"
				, "kind": ".variable"
				, "type": "char"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 41
				, "value": "chrIor"
			}, {
				"": "chrXor"
				, "kind": ".variable"
				, "type": "char"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 42
				, "value": "chrXor"
			}, {
				"": "chrShl"
				, "kind": ".variable"
				, "type": "char"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 43
				, "value": "chrShl"
			}, {
				"": "chrShr"
				, "kind": ".variable"
				, "type": "char"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 44
				, "value": "chrShr"
			}, {
				"": "chrNot"
				, "kind": ".variable"
				, "type": "bool"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 45
				, "value": "chrNot"
			}, {
				"": "chrCeq"
				, "kind": ".variable"
				, "type": "bool"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 46
				, "value": "chrCeq"
			}, {
				"": "chrCne"
				, "kind": ".variable"
				, "type": "bool"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 47
				, "value": "chrCne"
			}, {
				"": "chrClt"
				, "kind": ".variable"
				, "type": "bool"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 48
				, "value": "chrClt"
			}, {
				"": "chrCle"
				, "kind": ".variable"
				, "type": "bool"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 49
				, "value": "chrCle"
			}, {
				"": "chrCgt"
				, "kind": ".variable"
				, "type": "bool"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 50
				, "value": "chrCgt"
			}, {
				"": "chrCge"
				, "kind": ".variable"
				, "type": "bool"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 51
				, "value": "chrCge"
			}, {
				"": "i8A"
				, "kind": ".variable"
				, "type": "int8"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 53
				, "value": "i8A"
			}, {
				"": "i8B"
				, "kind": ".variable"
				, "type": "int8"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 54
				, "value": "i8B"
			}, {
				"": "i8Pls"
				, "kind": ".variable"
				, "type": "int8"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 55
				, "value": "i8Pls"
			}, {
				"": "i8Neg"
				, "kind": ".variable"
				, "type": "int8"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 56
				, "value": "i8Neg"
			}, {
				"": "i8Cmt"
				, "kind": ".variable"
				, "type": "int8"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 57
				, "value": "i8Cmt"
			}, {
				"": "i8Add"
				, "kind": ".variable"
				, "type": "int8"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 58
				, "value": "i8Add"
			}, {
				"": "i8Sub"
				, "kind": ".variable"
				, "type": "int8"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 59
				, "value": "i8Sub"
			}, {
				"": "i8Mul"
				, "kind": ".variable"
				, "type": "int8"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 60
				, "value": "i8Mul"
			}, {
				"": "i8Div"
				, "kind": ".variable"
				, "type": "int8"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 61
				, "value": "i8Div"
			}, {
				"": "i8Mod"
				, "kind": ".variable"
				, "type": "int8"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 62
				, "value": "i8Mod"
			}, {
				"": "i8And"
				, "kind": ".variable"
				, "type": "int8"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 63
				, "value": "i8And"
			}, {
				"": "i8Ior"
				, "kind": ".variable"
				, "type": "int8"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 64
				, "value": "i8Ior"
			}, {
				"": "i8Xor"
				, "kind": ".variable"
				, "type": "int8"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 65
				, "value": "i8Xor"
			}, {
				"": "i8Shl"
				, "kind": ".variable"
				, "type": "int8"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 66
				, "value": "i8Shl"
			}, {
				"": "i8Shr"
				, "kind": ".variable"
				, "type": "int8"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 67
				, "value": "i8Shr"
			}, {
				"": "i8Not"
				, "kind": ".variable"
				, "type": "bool"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 68
				, "value": "i8Not"
			}, {
				"": "i8Ceq"
				, "kind": ".variable"
				, "type": "bool"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 69
				, "value": "i8Ceq"
			}, {
				"": "i8Cne"
				, "kind": ".variable"
				, "type": "bool"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 70
				, "value": "i8Cne"
			}, {
				"": "i8Clt"
				, "kind": ".variable"
				, "type": "bool"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 71
				, "value": "i8Clt"
			}, {
				"": "i8Cle"
				, "kind": ".variable"
				, "type": "bool"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 72
				, "value": "i8Cle"
			}, {
				"": "i8Cgt"
				, "kind": ".variable"
				, "type": "bool"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 73
				, "value": "i8Cgt"
			}, {
				"": "i8Cge"
				, "kind": ".variable"
				, "type": "bool"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 74
				, "value": "i8Cge"
			}, {
				"": "u8A"
				, "kind": ".variable"
				, "type": "uint8"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 76
				, "value": "u8A"
			}, {
				"": "u8B"
				, "kind": ".variable"
				, "type": "uint8"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 77
				, "value": "u8B"
			}, {
				"": "u8Pls"
				, "kind": ".variable"
				, "type": "uint8"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 78
				, "value": "u8Pls"
			}, {
				"": "u8Neg"
				, "kind": ".variable"
				, "type": "uint8"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 79
				, "value": "u8Neg"
			}, {
				"": "u8Cmt"
				, "kind": ".variable"
				, "type": "uint8"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 80
				, "value": "u8Cmt"
			}, {
				"": "u8Add"
				, "kind": ".variable"
				, "type": "uint8"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 81
				, "value": "u8Add"
			}, {
				"": "u8Sub"
				, "kind": ".variable"
				, "type": "uint8"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 82
				, "value": "u8Sub"
			}, {
				"": "u8Mul"
				, "kind": ".variable"
				, "type": "uint8"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 83
				, "value": "u8Mul"
			}, {
				"": "u8Div"
				, "kind": ".variable"
				, "type": "uint8"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 84
				, "value": "u8Div"
			}, {
				"": "u8Mod"
				, "kind": ".variable"
				, "type": "uint8"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 85
				, "value": "u8Mod"
			}, {
				"": "u8And"
				, "kind": ".variable"
				, "type": "uint8"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 86
				, "value": "u8And"
			}, {
				"": "u8Ior"
				, "kind": ".variable"
				, "type": "uint8"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 87
				, "value": "u8Ior"
			}, {
				"": "u8Xor"
				, "kind": ".variable"
				, "type": "uint8"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 88
				, "value": "u8Xor"
			}, {
				"": "u8Shl"
				, "kind": ".variable"
				, "type": "uint8"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 89
				, "value": "u8Shl"
			}, {
				"": "u8Shr"
				, "kind": ".variable"
				, "type": "uint8"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 90
				, "value": "u8Shr"
			}, {
				"": "u8Not"
				, "kind": ".variable"
				, "type": "bool"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 91
				, "value": "u8Not"
			}, {
				"": "u8Ceq"
				, "kind": ".variable"
				, "type": "bool"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 92
				, "value": "u8Ceq"
			}, {
				"": "u8Cne"
				, "kind": ".variable"
				, "type": "bool"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 93
				, "value": "u8Cne"
			}, {
				"": "u8Clt"
				, "kind": ".variable"
				, "type": "bool"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 94
				, "value": "u8Clt"
			}, {
				"": "u8Cle"
				, "kind": ".variable"
				, "type": "bool"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 95
				, "value": "u8Cle"
			}, {
				"": "u8Cgt"
				, "kind": ".variable"
				, "type": "bool"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 96
				, "value": "u8Cgt"
			}, {
				"": "u8Cge"
				, "kind": ".variable"
				, "type": "bool"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 97
				, "value": "u8Cge"
			}, {
				"": "i16A"
				, "kind": ".variable"
				, "type": "int16"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 99
				, "value": "i16A"
			}, {
				"": "i16B"
				, "kind": ".variable"
				, "type": "int16"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 100
				, "value": "i16B"
			}, {
				"": "i16Pls"
				, "kind": ".variable"
				, "type": "int16"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 101
				, "value": "i16Pls"
			}, {
				"": "i16Neg"
				, "kind": ".variable"
				, "type": "int16"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 102
				, "value": "i16Neg"
			}, {
				"": "i16Cmt"
				, "kind": ".variable"
				, "type": "int16"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 103
				, "value": "i16Cmt"
			}, {
				"": "i16Add"
				, "kind": ".variable"
				, "type": "int16"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 104
				, "value": "i16Add"
			}, {
				"": "i16Sub"
				, "kind": ".variable"
				, "type": "int16"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 105
				, "value": "i16Sub"
			}, {
				"": "i16Mul"
				, "kind": ".variable"
				, "type": "int16"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 106
				, "value": "i16Mul"
			}, {
				"": "i16Div"
				, "kind": ".variable"
				, "type": "int16"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 107
				, "value": "i16Div"
			}, {
				"": "i16Mod"
				, "kind": ".variable"
				, "type": "int16"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 108
				, "value": "i16Mod"
			}, {
				"": "i16And"
				, "kind": ".variable"
				, "type": "int16"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 109
				, "value": "i16And"
			}, {
				"": "i16Ior"
				, "kind": ".variable"
				, "type": "int16"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 110
				, "value": "i16Ior"
			}, {
				"": "i16Xor"
				, "kind": ".variable"
				, "type": "int16"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 111
				, "value": "i16Xor"
			}, {
				"": "i16Shl"
				, "kind": ".variable"
				, "type": "int16"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 112
				, "value": "i16Shl"
			}, {
				"": "i16Shr"
				, "kind": ".variable"
				, "type": "int16"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 113
				, "value": "i16Shr"
			}, {
				"": "i16Not"
				, "kind": ".variable"
				, "type": "bool"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 114
				, "value": "i16Not"
			}, {
				"": "i16Ceq"
				, "kind": ".variable"
				, "type": "bool"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 115
				, "value": "i16Ceq"
			}, {
				"": "i16Cne"
				, "kind": ".variable"
				, "type": "bool"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 116
				, "value": "i16Cne"
			}, {
				"": "i16Clt"
				, "kind": ".variable"
				, "type": "bool"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 117
				, "value": "i16Clt"
			}, {
				"": "i16Cle"
				, "kind": ".variable"
				, "type": "bool"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 118
				, "value": "i16Cle"
			}, {
				"": "i16Cgt"
				, "kind": ".variable"
				, "type": "bool"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 119
				, "value": "i16Cgt"
			}, {
				"": "i16Cge"
				, "kind": ".variable"
				, "type": "bool"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 120
				, "value": "i16Cge"
			}, {
				"": "u16A"
				, "kind": ".variable"
				, "type": "uint16"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 122
				, "value": "u16A"
			}, {
				"": "u16B"
				, "kind": ".variable"
				, "type": "uint16"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 123
				, "value": "u16B"
			}, {
				"": "u16Pls"
				, "kind": ".variable"
				, "type": "uint16"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 124
				, "value": "u16Pls"
			}, {
				"": "u16Neg"
				, "kind": ".variable"
				, "type": "uint16"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 125
				, "value": "u16Neg"
			}, {
				"": "u16Cmt"
				, "kind": ".variable"
				, "type": "uint16"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 126
				, "value": "u16Cmt"
			}, {
				"": "u16Add"
				, "kind": ".variable"
				, "type": "uint16"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 127
				, "value": "u16Add"
			}, {
				"": "u16Sub"
				, "kind": ".variable"
				, "type": "uint16"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 128
				, "value": "u16Sub"
			}, {
				"": "u16Mul"
				, "kind": ".variable"
				, "type": "uint16"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 129
				, "value": "u16Mul"
			}, {
				"": "u16Div"
				, "kind": ".variable"
				, "type": "uint16"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 130
				, "value": "u16Div"
			}, {
				"": "u16Mod"
				, "kind": ".variable"
				, "type": "uint16"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 131
				, "value": "u16Mod"
			}, {
				"": "u16And"
				, "kind": ".variable"
				, "type": "uint16"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 132
				, "value": "u16And"
			}, {
				"": "u16Ior"
				, "kind": ".variable"
				, "type": "uint16"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 133
				, "value": "u16Ior"
			}, {
				"": "u16Xor"
				, "kind": ".variable"
				, "type": "uint16"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 134
				, "value": "u16Xor"
			}, {
				"": "u16Shl"
				, "kind": ".variable"
				, "type": "uint16"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 135
				, "value": "u16Shl"
			}, {
				"": "u16Shr"
				, "kind": ".variable"
				, "type": "uint16"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 136
				, "value": "u16Shr"
			}, {
				"": "u16Not"
				, "kind": ".variable"
				, "type": "bool"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 137
				, "value": "u16Not"
			}, {
				"": "u16Ceq"
				, "kind": ".variable"
				, "type": "bool"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 138
				, "value": "u16Ceq"
			}, {
				"": "u16Cne"
				, "kind": ".variable"
				, "type": "bool"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 139
				, "value": "u16Cne"
			}, {
				"": "u16Clt"
				, "kind": ".variable"
				, "type": "bool"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 140
				, "value": "u16Clt"
			}, {
				"": "u16Cle"
				, "kind": ".variable"
				, "type": "bool"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 141
				, "value": "u16Cle"
			}, {
				"": "u16Cgt"
				, "kind": ".variable"
				, "type": "bool"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 142
				, "value": "u16Cgt"
			}, {
				"": "u16Cge"
				, "kind": ".variable"
				, "type": "bool"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 143
				, "value": "u16Cge"
			}, {
				"": "i32A"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 145
				, "value": "i32A"
			}, {
				"": "i32B"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 146
				, "value": "i32B"
			}, {
				"": "i32Pls"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 147
				, "value": "i32Pls"
			}, {
				"": "i32Neg"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 148
				, "value": "i32Neg"
			}, {
				"": "i32Cmt"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 149
				, "value": "i32Cmt"
			}, {
				"": "i32Add"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 150
				, "value": "i32Add"
			}, {
				"": "i32Sub"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 151
				, "value": "i32Sub"
			}, {
				"": "i32Mul"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 152
				, "value": "i32Mul"
			}, {
				"": "i32Div"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 153
				, "value": "i32Div"
			}, {
				"": "i32Mod"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 154
				, "value": "i32Mod"
			}, {
				"": "i32And"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 155
				, "value": "i32And"
			}, {
				"": "i32Ior"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 156
				, "value": "i32Ior"
			}, {
				"": "i32Xor"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 157
				, "value": "i32Xor"
			}, {
				"": "i32Shl"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 158
				, "value": "i32Shl"
			}, {
				"": "i32Shr"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 159
				, "value": "i32Shr"
			}, {
				"": "i32Not"
				, "kind": ".variable"
				, "type": "bool"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 160
				, "value": "i32Not"
			}, {
				"": "i32Ceq"
				, "kind": ".variable"
				, "type": "bool"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 161
				, "value": "i32Ceq"
			}, {
				"": "i32Cne"
				, "kind": ".variable"
				, "type": "bool"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 162
				, "value": "i32Cne"
			}, {
				"": "i32Clt"
				, "kind": ".variable"
				, "type": "bool"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 163
				, "value": "i32Clt"
			}, {
				"": "i32Cle"
				, "kind": ".variable"
				, "type": "bool"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 164
				, "value": "i32Cle"
			}, {
				"": "i32Cgt"
				, "kind": ".variable"
				, "type": "bool"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 165
				, "value": "i32Cgt"
			}, {
				"": "i32Cge"
				, "kind": ".variable"
				, "type": "bool"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 166
				, "value": "i32Cge"
			}, {
				"": "u32A"
				, "kind": ".variable"
				, "type": "uint32"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 168
				, "value": "u32A"
			}, {
				"": "u32B"
				, "kind": ".variable"
				, "type": "uint32"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 169
				, "value": "u32B"
			}, {
				"": "u32Pls"
				, "kind": ".variable"
				, "type": "uint32"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 170
				, "value": "u32Pls"
			}, {
				"": "u32Neg"
				, "kind": ".variable"
				, "type": "uint32"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 171
				, "value": "u32Neg"
			}, {
				"": "u32Cmt"
				, "kind": ".variable"
				, "type": "uint32"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 172
				, "value": "u32Cmt"
			}, {
				"": "u32Add"
				, "kind": ".variable"
				, "type": "uint32"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 173
				, "value": "u32Add"
			}, {
				"": "u32Sub"
				, "kind": ".variable"
				, "type": "uint32"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 174
				, "value": "u32Sub"
			}, {
				"": "u32Mul"
				, "kind": ".variable"
				, "type": "uint32"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 175
				, "value": "u32Mul"
			}, {
				"": "u32Div"
				, "kind": ".variable"
				, "type": "uint32"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 176
				, "value": "u32Div"
			}, {
				"": "u32Mod"
				, "kind": ".variable"
				, "type": "uint32"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 177
				, "value": "u32Mod"
			}, {
				"": "u32And"
				, "kind": ".variable"
				, "type": "uint32"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 178
				, "value": "u32And"
			}, {
				"": "u32Ior"
				, "kind": ".variable"
				, "type": "uint32"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 179
				, "value": "u32Ior"
			}, {
				"": "u32Xor"
				, "kind": ".variable"
				, "type": "uint32"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 180
				, "value": "u32Xor"
			}, {
				"": "u32Shl"
				, "kind": ".variable"
				, "type": "uint32"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 181
				, "value": "u32Shl"
			}, {
				"": "u32Shr"
				, "kind": ".variable"
				, "type": "uint32"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 182
				, "value": "u32Shr"
			}, {
				"": "u32Not"
				, "kind": ".variable"
				, "type": "bool"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 183
				, "value": "u32Not"
			}, {
				"": "u32Ceq"
				, "kind": ".variable"
				, "type": "bool"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 184
				, "value": "u32Ceq"
			}, {
				"": "u32Cne"
				, "kind": ".variable"
				, "type": "bool"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 185
				, "value": "u32Cne"
			}, {
				"": "u32Clt"
				, "kind": ".variable"
				, "type": "bool"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 186
				, "value": "u32Clt"
			}, {
				"": "u32Cle"
				, "kind": ".variable"
				, "type": "bool"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 187
				, "value": "u32Cle"
			}, {
				"": "u32Cgt"
				, "kind": ".variable"
				, "type": "bool"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 188
				, "value": "u32Cgt"
			}, {
				"": "u32Cge"
				, "kind": ".variable"
				, "type": "bool"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 189
				, "value": "u32Cge"
			}, {
				"": "i64A"
				, "kind": ".variable"
				, "type": "int64"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 191
				, "value": "i64A"
			}, {
				"": "i64B"
				, "kind": ".variable"
				, "type": "int64"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 192
				, "value": "i64B"
			}, {
				"": "i64Pls"
				, "kind": ".variable"
				, "type": "int64"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 193
				, "value": "i64Pls"
			}, {
				"": "i64Neg"
				, "kind": ".variable"
				, "type": "int64"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 194
				, "value": "i64Neg"
			}, {
				"": "i64Cmt"
				, "kind": ".variable"
				, "type": "int64"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 195
				, "value": "i64Cmt"
			}, {
				"": "i64Add"
				, "kind": ".variable"
				, "type": "int64"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 196
				, "value": "i64Add"
			}, {
				"": "i64Sub"
				, "kind": ".variable"
				, "type": "int64"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 197
				, "value": "i64Sub"
			}, {
				"": "i64Mul"
				, "kind": ".variable"
				, "type": "int64"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 198
				, "value": "i64Mul"
			}, {
				"": "i64Div"
				, "kind": ".variable"
				, "type": "int64"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 199
				, "value": "i64Div"
			}, {
				"": "i64Mod"
				, "kind": ".variable"
				, "type": "int64"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 200
				, "value": "i64Mod"
			}, {
				"": "i64And"
				, "kind": ".variable"
				, "type": "int64"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 201
				, "value": "i64And"
			}, {
				"": "i64Ior"
				, "kind": ".variable"
				, "type": "int64"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 202
				, "value": "i64Ior"
			}, {
				"": "i64Xor"
				, "kind": ".variable"
				, "type": "int64"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 203
				, "value": "i64Xor"
			}, {
				"": "i64Shl"
				, "kind": ".variable"
				, "type": "int64"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 204
				, "value": "i64Shl"
			}, {
				"": "i64Shr"
				, "kind": ".variable"
				, "type": "int64"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 205
				, "value": "i64Shr"
			}, {
				"": "i64Not"
				, "kind": ".variable"
				, "type": "bool"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 206
				, "value": "i64Not"
			}, {
				"": "i64Ceq"
				, "kind": ".variable"
				, "type": "bool"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 207
				, "value": "i64Ceq"
			}, {
				"": "i64Cne"
				, "kind": ".variable"
				, "type": "bool"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 208
				, "value": "i64Cne"
			}, {
				"": "i64Clt"
				, "kind": ".variable"
				, "type": "bool"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 209
				, "value": "i64Clt"
			}, {
				"": "i64Cle"
				, "kind": ".variable"
				, "type": "bool"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 210
				, "value": "i64Cle"
			}, {
				"": "i64Cgt"
				, "kind": ".variable"
				, "type": "bool"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 211
				, "value": "i64Cgt"
			}, {
				"": "i64Cge"
				, "kind": ".variable"
				, "type": "bool"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 212
				, "value": "i64Cge"
			}, {
				"": "u64A"
				, "kind": ".variable"
				, "type": "uint64"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 214
				, "value": "u64A"
			}, {
				"": "u64B"
				, "kind": ".variable"
				, "type": "uint64"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 215
				, "value": "u64B"
			}, {
				"": "u64Pls"
				, "kind": ".variable"
				, "type": "uint64"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 216
				, "value": "u64Pls"
			}, {
				"": "u64Neg"
				, "kind": ".variable"
				, "type": "uint64"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 217
				, "value": "u64Neg"
			}, {
				"": "u64Cmt"
				, "kind": ".variable"
				, "type": "uint64"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 218
				, "value": "u64Cmt"
			}, {
				"": "u64Add"
				, "kind": ".variable"
				, "type": "uint64"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 219
				, "value": "u64Add"
			}, {
				"": "u64Sub"
				, "kind": ".variable"
				, "type": "uint64"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 220
				, "value": "u64Sub"
			}, {
				"": "u64Mul"
				, "kind": ".variable"
				, "type": "uint64"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 221
				, "value": "u64Mul"
			}, {
				"": "u64Div"
				, "kind": ".variable"
				, "type": "uint64"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 222
				, "value": "u64Div"
			}, {
				"": "u64Mod"
				, "kind": ".variable"
				, "type": "uint64"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 223
				, "value": "u64Mod"
			}, {
				"": "u64And"
				, "kind": ".variable"
				, "type": "uint64"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 224
				, "value": "u64And"
			}, {
				"": "u64Ior"
				, "kind": ".variable"
				, "type": "uint64"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 225
				, "value": "u64Ior"
			}, {
				"": "u64Xor"
				, "kind": ".variable"
				, "type": "uint64"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 226
				, "value": "u64Xor"
			}, {
				"": "u64Shl"
				, "kind": ".variable"
				, "type": "uint64"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 227
				, "value": "u64Shl"
			}, {
				"": "u64Shr"
				, "kind": ".variable"
				, "type": "uint64"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 228
				, "value": "u64Shr"
			}, {
				"": "u64Not"
				, "kind": ".variable"
				, "type": "bool"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 229
				, "value": "u64Not"
			}, {
				"": "u64Ceq"
				, "kind": ".variable"
				, "type": "bool"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 230
				, "value": "u64Ceq"
			}, {
				"": "u64Cne"
				, "kind": ".variable"
				, "type": "bool"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 231
				, "value": "u64Cne"
			}, {
				"": "u64Clt"
				, "kind": ".variable"
				, "type": "bool"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 232
				, "value": "u64Clt"
			}, {
				"": "u64Cle"
				, "kind": ".variable"
				, "type": "bool"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 233
				, "value": "u64Cle"
			}, {
				"": "u64Cgt"
				, "kind": ".variable"
				, "type": "bool"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 234
				, "value": "u64Cgt"
			}, {
				"": "u64Cge"
				, "kind": ".variable"
				, "type": "bool"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 235
				, "value": "u64Cge"
			}, {
				"": "f32A"
				, "kind": ".variable"
				, "type": "float32"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 237
				, "value": "f32A"
			}, {
				"": "f32B"
				, "kind": ".variable"
				, "type": "float32"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 238
				, "value": "f32B"
			}, {
				"": "f32Pls"
				, "kind": ".variable"
				, "type": "float32"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 239
				, "value": "f32Pls"
			}, {
				"": "f32Neg"
				, "kind": ".variable"
				, "type": "float32"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 240
				, "value": "f32Neg"
			}, {
				"": "f32Add"
				, "kind": ".variable"
				, "type": "float32"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 242
				, "value": "f32Add"
			}, {
				"": "f32Sub"
				, "kind": ".variable"
				, "type": "float32"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 243
				, "value": "f32Sub"
			}, {
				"": "f32Mul"
				, "kind": ".variable"
				, "type": "float32"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 244
				, "value": "f32Mul"
			}, {
				"": "f32Div"
				, "kind": ".variable"
				, "type": "float32"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 245
				, "value": "f32Div"
			}, {
				"": "f32Mod"
				, "kind": ".variable"
				, "type": "float32"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 246
				, "value": "f32Mod"
			}, {
				"": "f32Not"
				, "kind": ".variable"
				, "type": "bool"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 252
				, "value": "f32Not"
			}, {
				"": "f32Ceq"
				, "kind": ".variable"
				, "type": "bool"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 253
				, "value": "f32Ceq"
			}, {
				"": "f32Cne"
				, "kind": ".variable"
				, "type": "bool"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 254
				, "value": "f32Cne"
			}, {
				"": "f32Clt"
				, "kind": ".variable"
				, "type": "bool"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 255
				, "value": "f32Clt"
			}, {
				"": "f32Cle"
				, "kind": ".variable"
				, "type": "bool"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 256
				, "value": "f32Cle"
			}, {
				"": "f32Cgt"
				, "kind": ".variable"
				, "type": "bool"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 257
				, "value": "f32Cgt"
			}, {
				"": "f32Cge"
				, "kind": ".variable"
				, "type": "bool"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 258
				, "value": "f32Cge"
			}, {
				"": "f64A"
				, "kind": ".variable"
				, "type": "float64"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 260
				, "value": "f64A"
			}, {
				"": "f64B"
				, "kind": ".variable"
				, "type": "float64"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 261
				, "value": "f64B"
			}, {
				"": "f64Pls"
				, "kind": ".variable"
				, "type": "float64"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 262
				, "value": "f64Pls"
			}, {
				"": "f64Neg"
				, "kind": ".variable"
				, "type": "float64"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 263
				, "value": "f64Neg"
			}, {
				"": "f64Add"
				, "kind": ".variable"
				, "type": "float64"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 265
				, "value": "f64Add"
			}, {
				"": "f64Sub"
				, "kind": ".variable"
				, "type": "float64"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 266
				, "value": "f64Sub"
			}, {
				"": "f64Mul"
				, "kind": ".variable"
				, "type": "float64"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 267
				, "value": "f64Mul"
			}, {
				"": "f64Div"
				, "kind": ".variable"
				, "type": "float64"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 268
				, "value": "f64Div"
			}, {
				"": "f64Mod"
				, "kind": ".variable"
				, "type": "float64"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 269
				, "value": "f64Mod"
			}, {
				"": "f64Not"
				, "kind": ".variable"
				, "type": "bool"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 275
				, "value": "f64Not"
			}, {
				"": "f64Ceq"
				, "kind": ".variable"
				, "type": "bool"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 276
				, "value": "f64Ceq"
			}, {
				"": "f64Cne"
				, "kind": ".variable"
				, "type": "bool"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 277
				, "value": "f64Cne"
			}, {
				"": "f64Clt"
				, "kind": ".variable"
				, "type": "bool"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 278
				, "value": "f64Clt"
			}, {
				"": "f64Cle"
				, "kind": ".variable"
				, "type": "bool"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 279
				, "value": "f64Cle"
			}, {
				"": "f64Cgt"
				, "kind": ".variable"
				, "type": "bool"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 280
				, "value": "f64Cgt"
			}, {
				"": "f64Cge"
				, "kind": ".variable"
				, "type": "bool"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 281
				, "value": "f64Cge"
			}, {
				"": "ptrA"
				, "kind": ".variable"
				, "type": "pointer"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 283
				, "value": "ptrA"
			}, {
				"": "ptrB"
				, "kind": ".variable"
				, "type": "pointer"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 284
				, "value": "ptrB"
			}, {
				"": "ptrCeq"
				, "kind": ".variable"
				, "type": "bool"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 299
				, "value": "ptrCeq"
			}, {
				"": "ptrCne"
				, "kind": ".variable"
				, "type": "bool"
				, "file": "extras/Tests/lang.useOperator.ci"
				, "line": 300
				, "value": "ptrCne"
			}, {
				"": "static if (typename(int64) == null)"
				, "kind": "static if"
				, "type": "void"
				, "file": "extras/Tests/lang.varInitArray.ci"
				, "line": 3
				, "test": {
					"": "typename(int64) == null"
					, "kind": "=="
					, "type": "bool"
					, "file": "extras/Tests/lang.varInitArray.ci"
					, "line": 3
					, "left": {
						"": "typename(int64)"
						, "kind": "()"
						, "type": "typename"
						, "file": "extras/Tests/lang.varInitArray.ci"
						, "line": 3
						, "args": [{
							"": "int64"
							, "kind": ".variable"
							, "type": "typename"
							, "file": "extras/Tests/lang.varInitArray.ci"
							, "line": 3
							, "value": "int64"
						}]
					}
					, "right": {
						"": "null"
						, "kind": ".variable"
						, "type": "pointer"
						, "file": "extras/Tests/lang.varInitArray.ci"
						, "line": 3
						, "value": "null"
					}
				}
				, "then": {
					"": "{...}"
					, "kind": "{}"
					, "type": "void"
					, "file": "extras/Tests/lang.varInitArray.ci"
					, "line": 3
					, "stmt": [{
						"": "integer"
						, "kind": ".variable"
						, "type": "typename"
						, "file": "extras/Tests/lang.varInitArray.ci"
						, "line": 4
						, "value": "integer"
					}]
				}
			}, {
				"": "arrFixedNoInit"
				, "kind": ".variable"
				, "type": "int64[7]"
				, "file": "extras/Tests/lang.varInitArray.ci"
				, "line": 8
				, "value": "arrFixedNoInit"
			}, {
				"": "arrSliceNoInit"
				, "kind": ".variable"
				, "type": "int64[]"
				, "file": "extras/Tests/lang.varInitArray.ci"
				, "line": 9
				, "value": "arrSliceNoInit"
			}, {
				"": "arrPtrNoInit"
				, "kind": ".variable"
				, "type": "int64[*]"
				, "file": "extras/Tests/lang.varInitArray.ci"
				, "line": 10
				, "value": "arrPtrNoInit"
			}, {
				"": "arrSliceInitNull"
				, "kind": ".variable"
				, "type": "int64[]"
				, "file": "extras/Tests/lang.varInitArray.ci"
				, "line": 13
				, "value": "arrSliceInitNull"
			}, {
				"": "arrPtrInitNull"
				, "kind": ".variable"
				, "type": "int64[*]"
				, "file": "extras/Tests/lang.varInitArray.ci"
				, "line": 14
				, "value": "arrPtrInitNull"
			}, {
				"": "arrSliceInitFixed"
				, "kind": ".variable"
				, "type": "int64[]"
				, "file": "extras/Tests/lang.varInitArray.ci"
				, "line": 17
				, "value": "arrSliceInitFixed"
			}, {
				"": "arrPtrInitFixed"
				, "kind": ".variable"
				, "type": "int64[*]"
				, "file": "extras/Tests/lang.varInitArray.ci"
				, "line": 18
				, "value": "arrPtrInitFixed"
			}, {
				"": "arrSliceInitSlice"
				, "kind": ".variable"
				, "type": "int64[]"
				, "file": "extras/Tests/lang.varInitArray.ci"
				, "line": 21
				, "value": "arrSliceInitSlice"
			}, {
				"": "arrPtrInitSlice"
				, "kind": ".variable"
				, "type": "int64[*]"
				, "file": "extras/Tests/lang.varInitArray.ci"
				, "line": 22
				, "value": "arrPtrInitSlice"
			}, {
				"": "arrPtrInitPtr"
				, "kind": ".variable"
				, "type": "int64[*]"
				, "file": "extras/Tests/lang.varInitArray.ci"
				, "line": 26
				, "value": "arrPtrInitPtr"
			}, {
				"": "arrSliceInitString"
				, "kind": ".variable"
				, "type": "char[]"
				, "file": "extras/Tests/lang.varInitArray.ci"
				, "line": 37
				, "value": "arrSliceInitString"
			}, {
				"": "arrPtrInitString"
				, "kind": ".variable"
				, "type": "char[*]"
				, "file": "extras/Tests/lang.varInitArray.ci"
				, "line": 38
				, "value": "arrPtrInitString"
			}, {
				"": "assert(arrFixedNoInit.length == 7);"
				, "kind": ";"
				, "type": "void"
				, "file": "extras/Tests/lang.varInitArray.ci"
				, "line": 47
			}, {
				"": "assert(arrSliceNoInit.length == (0), \"This one might fail\");"
				, "kind": ";"
				, "type": "void"
				, "file": "extras/Tests/lang.varInitArray.ci"
				, "line": 48
			}, {
				"": "assert(arrSliceInitNull.length == (0));"
				, "kind": ";"
				, "type": "void"
				, "file": "extras/Tests/lang.varInitArray.ci"
				, "line": 50
			}, {
				"": "assert(arrSliceInitSlice.length == arrSliceInitFixed.length);"
				, "kind": ";"
				, "type": "void"
				, "file": "extras/Tests/lang.varInitArray.ci"
				, "line": 51
			}, {
				"": "static if (typename(int64) == null)"
				, "kind": "static if"
				, "type": "void"
				, "file": "extras/Tests/lang.varInitByRef.ci"
				, "line": 3
				, "test": {
					"": "typename(int64) == null"
					, "kind": "=="
					, "type": "bool"
					, "file": "extras/Tests/lang.varInitByRef.ci"
					, "line": 3
					, "left": {
						"": "typename(int64)"
						, "kind": "()"
						, "type": "typename"
						, "file": "extras/Tests/lang.varInitByRef.ci"
						, "line": 3
						, "args": [{
							"": "int64"
							, "kind": ".variable"
							, "type": "typename"
							, "file": "extras/Tests/lang.varInitByRef.ci"
							, "line": 3
							, "value": "int64"
						}]
					}
					, "right": {
						"": "null"
						, "kind": ".variable"
						, "type": "pointer"
						, "file": "extras/Tests/lang.varInitByRef.ci"
						, "line": 3
						, "value": "null"
					}
				}
				, "then": {
					"": "{...}"
					, "kind": "{}"
					, "type": "void"
					, "file": "extras/Tests/lang.varInitByRef.ci"
					, "line": 3
					, "stmt": [{
						"": "integer"
						, "kind": ".variable"
						, "type": "typename"
						, "file": "extras/Tests/lang.varInitByRef.ci"
						, "line": 4
						, "value": "integer"
					}]
				}
			}, {
				"": "value"
				, "kind": ".variable"
				, "type": "int64"
				, "file": "extras/Tests/lang.varInitByRef.ci"
				, "line": 7
				, "value": "value"
			}, {
				"": "valueRef"
				, "kind": ".variable"
				, "type": "int64"
				, "file": "extras/Tests/lang.varInitByRef.ci"
				, "line": 8
				, "value": "valueRef"
			}, {
				"": "valuePtr"
				, "kind": ".variable"
				, "type": "pointer"
				, "file": "extras/Tests/lang.varInitByRef.ci"
				, "line": 9
				, "value": "valuePtr"
			}, {
				"": "valueVar"
				, "kind": ".variable"
				, "type": "variant"
				, "file": "extras/Tests/lang.varInitByRef.ci"
				, "line": 10
				, "value": "valueVar"
			}, {
				"": "fromRef"
				, "kind": ".variable"
				, "type": "int64"
				, "file": "extras/Tests/lang.varInitByRef.ci"
				, "line": 12
				, "value": "fromRef"
			}, {
				"": "fromPtr"
				, "kind": ".variable"
				, "type": "int64"
				, "file": "extras/Tests/lang.varInitByRef.ci"
				, "line": 13
				, "value": "fromPtr"
			}, {
				"": "fromVar"
				, "kind": ".variable"
				, "type": "int64"
				, "file": "extras/Tests/lang.varInitByRef.ci"
				, "line": 14
				, "value": "fromVar"
			}, {
				"": "nullRef"
				, "kind": ".variable"
				, "type": "int64"
				, "file": "extras/Tests/lang.varInitByRef.ci"
				, "line": 16
				, "value": "nullRef"
			}, {
				"": "nullPtr"
				, "kind": ".variable"
				, "type": "pointer"
				, "file": "extras/Tests/lang.varInitByRef.ci"
				, "line": 17
				, "value": "nullPtr"
			}, {
				"": "nullVar"
				, "kind": ".variable"
				, "type": "variant"
				, "file": "extras/Tests/lang.varInitByRef.ci"
				, "line": 18
				, "value": "nullVar"
			}, {
				"": "nullTyp"
				, "kind": ".variable"
				, "type": "typename"
				, "file": "extras/Tests/lang.varInitByRef.ci"
				, "line": 19
				, "value": "nullTyp"
			}, {
				"": "nullFun"
				, "kind": ".variable"
				, "type": "function"
				, "file": "extras/Tests/lang.varInitByRef.ci"
				, "line": 20
				, "value": "nullFun"
			}, {
				"": "nullObj"
				, "kind": ".variable"
				, "type": "object"
				, "file": "extras/Tests/lang.varInitByRef.ci"
				, "line": 21
				, "value": "nullObj"
			}, {
				"": "typePtr"
				, "kind": ".variable"
				, "type": "pointer"
				, "file": "extras/Tests/lang.varInitByRef.ci"
				, "line": 23
				, "value": "typePtr"
			}, {
				"": "typeVar"
				, "kind": ".variable"
				, "type": "variant"
				, "file": "extras/Tests/lang.varInitByRef.ci"
				, "line": 24
				, "value": "typeVar"
			}, {
				"": "typeTyp"
				, "kind": ".variable"
				, "type": "typename"
				, "file": "extras/Tests/lang.varInitByRef.ci"
				, "line": 25
				, "value": "typeTyp"
			}, {
				"": "local"
				, "kind": ".variable"
				, "type": "int64"
				, "file": "extras/Tests/lang.varInitByRef.ci"
				, "line": 27
				, "value": "local"
			}, {
				"": "copyVal"
				, "kind": ".variable"
				, "type": "int64"
				, "file": "extras/Tests/lang.varInitByRef.ci"
				, "line": 28
				, "value": "copyVal"
			}, {
				"": "copyRef"
				, "kind": ".variable"
				, "type": "int64"
				, "file": "extras/Tests/lang.varInitByRef.ci"
				, "line": 29
				, "value": "copyRef"
			}, {
				"": "copyPtr"
				, "kind": ".variable"
				, "type": "pointer"
				, "file": "extras/Tests/lang.varInitByRef.ci"
				, "line": 30
				, "value": "copyPtr"
			}, {
				"": "copyVar"
				, "kind": ".variable"
				, "type": "variant"
				, "file": "extras/Tests/lang.varInitByRef.ci"
				, "line": 31
				, "value": "copyVar"
			}, {
				"": "copyTyp"
				, "kind": ".variable"
				, "type": "typename"
				, "file": "extras/Tests/lang.varInitByRef.ci"
				, "line": 32
				, "value": "copyTyp"
			}, {
				"": "ptrVoid"
				, "kind": ".variable"
				, "type": "pointer"
				, "file": "extras/Tests/lang.varInitByRef.ci"
				, "line": 35
				, "value": "ptrVoid"
			}, {
				"": "ptrBool"
				, "kind": ".variable"
				, "type": "pointer"
				, "file": "extras/Tests/lang.varInitByRef.ci"
				, "line": 36
				, "value": "ptrBool"
			}, {
				"": "ptrChar"
				, "kind": ".variable"
				, "type": "pointer"
				, "file": "extras/Tests/lang.varInitByRef.ci"
				, "line": 37
				, "value": "ptrChar"
			}, {
				"": "ptrInt8"
				, "kind": ".variable"
				, "type": "pointer"
				, "file": "extras/Tests/lang.varInitByRef.ci"
				, "line": 38
				, "value": "ptrInt8"
			}, {
				"": "ptrInt16"
				, "kind": ".variable"
				, "type": "pointer"
				, "file": "extras/Tests/lang.varInitByRef.ci"
				, "line": 39
				, "value": "ptrInt16"
			}, {
				"": "ptrInt32"
				, "kind": ".variable"
				, "type": "pointer"
				, "file": "extras/Tests/lang.varInitByRef.ci"
				, "line": 40
				, "value": "ptrInt32"
			}, {
				"": "ptrInt64"
				, "kind": ".variable"
				, "type": "pointer"
				, "file": "extras/Tests/lang.varInitByRef.ci"
				, "line": 41
				, "value": "ptrInt64"
			}, {
				"": "ptrUint8"
				, "kind": ".variable"
				, "type": "pointer"
				, "file": "extras/Tests/lang.varInitByRef.ci"
				, "line": 42
				, "value": "ptrUint8"
			}, {
				"": "ptrUint16"
				, "kind": ".variable"
				, "type": "pointer"
				, "file": "extras/Tests/lang.varInitByRef.ci"
				, "line": 43
				, "value": "ptrUint16"
			}, {
				"": "ptrUint32"
				, "kind": ".variable"
				, "type": "pointer"
				, "file": "extras/Tests/lang.varInitByRef.ci"
				, "line": 44
				, "value": "ptrUint32"
			}, {
				"": "ptrUint64"
				, "kind": ".variable"
				, "type": "pointer"
				, "file": "extras/Tests/lang.varInitByRef.ci"
				, "line": 45
				, "value": "ptrUint64"
			}, {
				"": "ptrFloat32"
				, "kind": ".variable"
				, "type": "pointer"
				, "file": "extras/Tests/lang.varInitByRef.ci"
				, "line": 46
				, "value": "ptrFloat32"
			}, {
				"": "ptrFloat64"
				, "kind": ".variable"
				, "type": "pointer"
				, "file": "extras/Tests/lang.varInitByRef.ci"
				, "line": 47
				, "value": "ptrFloat64"
			}, {
				"": "ptrTypename"
				, "kind": ".variable"
				, "type": "pointer"
				, "file": "extras/Tests/lang.varInitByRef.ci"
				, "line": 48
				, "value": "ptrTypename"
			}, {
				"": "ptrFunction"
				, "kind": ".variable"
				, "type": "pointer"
				, "file": "extras/Tests/lang.varInitByRef.ci"
				, "line": 49
				, "value": "ptrFunction"
			}, {
				"": "ptrPointer"
				, "kind": ".variable"
				, "type": "pointer"
				, "file": "extras/Tests/lang.varInitByRef.ci"
				, "line": 50
				, "value": "ptrPointer"
			}, {
				"": "ptrVariant"
				, "kind": ".variable"
				, "type": "pointer"
				, "file": "extras/Tests/lang.varInitByRef.ci"
				, "line": 51
				, "value": "ptrVariant"
			}, {
				"": "ptrObject"
				, "kind": ".variable"
				, "type": "pointer"
				, "file": "extras/Tests/lang.varInitByRef.ci"
				, "line": 52
				, "value": "ptrObject"
			}, {
				"": "varVoid"
				, "kind": ".variable"
				, "type": "variant"
				, "file": "extras/Tests/lang.varInitByRef.ci"
				, "line": 55
				, "value": "varVoid"
			}, {
				"": "varBool"
				, "kind": ".variable"
				, "type": "variant"
				, "file": "extras/Tests/lang.varInitByRef.ci"
				, "line": 56
				, "value": "varBool"
			}, {
				"": "varChar"
				, "kind": ".variable"
				, "type": "variant"
				, "file": "extras/Tests/lang.varInitByRef.ci"
				, "line": 57
				, "value": "varChar"
			}, {
				"": "varInt8"
				, "kind": ".variable"
				, "type": "variant"
				, "file": "extras/Tests/lang.varInitByRef.ci"
				, "line": 58
				, "value": "varInt8"
			}, {
				"": "varInt16"
				, "kind": ".variable"
				, "type": "variant"
				, "file": "extras/Tests/lang.varInitByRef.ci"
				, "line": 59
				, "value": "varInt16"
			}, {
				"": "varInt32"
				, "kind": ".variable"
				, "type": "variant"
				, "file": "extras/Tests/lang.varInitByRef.ci"
				, "line": 60
				, "value": "varInt32"
			}, {
				"": "varInt64"
				, "kind": ".variable"
				, "type": "variant"
				, "file": "extras/Tests/lang.varInitByRef.ci"
				, "line": 61
				, "value": "varInt64"
			}, {
				"": "varUint8"
				, "kind": ".variable"
				, "type": "variant"
				, "file": "extras/Tests/lang.varInitByRef.ci"
				, "line": 62
				, "value": "varUint8"
			}, {
				"": "varUint16"
				, "kind": ".variable"
				, "type": "variant"
				, "file": "extras/Tests/lang.varInitByRef.ci"
				, "line": 63
				, "value": "varUint16"
			}, {
				"": "varUint32"
				, "kind": ".variable"
				, "type": "variant"
				, "file": "extras/Tests/lang.varInitByRef.ci"
				, "line": 64
				, "value": "varUint32"
			}, {
				"": "varUint64"
				, "kind": ".variable"
				, "type": "variant"
				, "file": "extras/Tests/lang.varInitByRef.ci"
				, "line": 65
				, "value": "varUint64"
			}, {
				"": "varFloat32"
				, "kind": ".variable"
				, "type": "variant"
				, "file": "extras/Tests/lang.varInitByRef.ci"
				, "line": 66
				, "value": "varFloat32"
			}, {
				"": "varFloat64"
				, "kind": ".variable"
				, "type": "variant"
				, "file": "extras/Tests/lang.varInitByRef.ci"
				, "line": 67
				, "value": "varFloat64"
			}, {
				"": "varTypename"
				, "kind": ".variable"
				, "type": "variant"
				, "file": "extras/Tests/lang.varInitByRef.ci"
				, "line": 68
				, "value": "varTypename"
			}, {
				"": "varFunction"
				, "kind": ".variable"
				, "type": "variant"
				, "file": "extras/Tests/lang.varInitByRef.ci"
				, "line": 69
				, "value": "varFunction"
			}, {
				"": "varPointer"
				, "kind": ".variable"
				, "type": "variant"
				, "file": "extras/Tests/lang.varInitByRef.ci"
				, "line": 70
				, "value": "varPointer"
			}, {
				"": "varVariant"
				, "kind": ".variable"
				, "type": "variant"
				, "file": "extras/Tests/lang.varInitByRef.ci"
				, "line": 71
				, "value": "varVariant"
			}, {
				"": "varObject"
				, "kind": ".variable"
				, "type": "variant"
				, "file": "extras/Tests/lang.varInitByRef.ci"
				, "line": 72
				, "value": "varObject"
			}, {
				"": "typVoid"
				, "kind": ".variable"
				, "type": "typename"
				, "file": "extras/Tests/lang.varInitByRef.ci"
				, "line": 75
				, "value": "typVoid"
			}, {
				"": "typBool"
				, "kind": ".variable"
				, "type": "typename"
				, "file": "extras/Tests/lang.varInitByRef.ci"
				, "line": 76
				, "value": "typBool"
			}, {
				"": "typChar"
				, "kind": ".variable"
				, "type": "typename"
				, "file": "extras/Tests/lang.varInitByRef.ci"
				, "line": 77
				, "value": "typChar"
			}, {
				"": "typInt8"
				, "kind": ".variable"
				, "type": "typename"
				, "file": "extras/Tests/lang.varInitByRef.ci"
				, "line": 78
				, "value": "typInt8"
			}, {
				"": "typInt16"
				, "kind": ".variable"
				, "type": "typename"
				, "file": "extras/Tests/lang.varInitByRef.ci"
				, "line": 79
				, "value": "typInt16"
			}, {
				"": "typInt32"
				, "kind": ".variable"
				, "type": "typename"
				, "file": "extras/Tests/lang.varInitByRef.ci"
				, "line": 80
				, "value": "typInt32"
			}, {
				"": "typInt64"
				, "kind": ".variable"
				, "type": "typename"
				, "file": "extras/Tests/lang.varInitByRef.ci"
				, "line": 81
				, "value": "typInt64"
			}, {
				"": "typUint8"
				, "kind": ".variable"
				, "type": "typename"
				, "file": "extras/Tests/lang.varInitByRef.ci"
				, "line": 82
				, "value": "typUint8"
			}, {
				"": "typUint16"
				, "kind": ".variable"
				, "type": "typename"
				, "file": "extras/Tests/lang.varInitByRef.ci"
				, "line": 83
				, "value": "typUint16"
			}, {
				"": "typUint32"
				, "kind": ".variable"
				, "type": "typename"
				, "file": "extras/Tests/lang.varInitByRef.ci"
				, "line": 84
				, "value": "typUint32"
			}, {
				"": "typUint64"
				, "kind": ".variable"
				, "type": "typename"
				, "file": "extras/Tests/lang.varInitByRef.ci"
				, "line": 85
				, "value": "typUint64"
			}, {
				"": "typFloat32"
				, "kind": ".variable"
				, "type": "typename"
				, "file": "extras/Tests/lang.varInitByRef.ci"
				, "line": 86
				, "value": "typFloat32"
			}, {
				"": "typFloat64"
				, "kind": ".variable"
				, "type": "typename"
				, "file": "extras/Tests/lang.varInitByRef.ci"
				, "line": 87
				, "value": "typFloat64"
			}, {
				"": "typTypename"
				, "kind": ".variable"
				, "type": "typename"
				, "file": "extras/Tests/lang.varInitByRef.ci"
				, "line": 88
				, "value": "typTypename"
			}, {
				"": "typFunction"
				, "kind": ".variable"
				, "type": "typename"
				, "file": "extras/Tests/lang.varInitByRef.ci"
				, "line": 89
				, "value": "typFunction"
			}, {
				"": "typPointer"
				, "kind": ".variable"
				, "type": "typename"
				, "file": "extras/Tests/lang.varInitByRef.ci"
				, "line": 90
				, "value": "typPointer"
			}, {
				"": "typVariant"
				, "kind": ".variable"
				, "type": "typename"
				, "file": "extras/Tests/lang.varInitByRef.ci"
				, "line": 91
				, "value": "typVariant"
			}, {
				"": "typObject"
				, "kind": ".variable"
				, "type": "typename"
				, "file": "extras/Tests/lang.varInitByRef.ci"
				, "line": 92
				, "value": "typObject"
			}, {
				"": "valueOfPtr"
				, "kind": ".variable"
				, "type": "pointer"
				, "file": "extras/Tests/lang.varInitByRef.ci"
				, "line": 95
				, "value": "valueOfPtr"
			}, {
				"": "valueOfVar"
				, "kind": ".variable"
				, "type": "variant"
				, "file": "extras/Tests/lang.varInitByRef.ci"
				, "line": 96
				, "value": "valueOfVar"
			}, {
				"": "valueOfTyp"
				, "kind": ".variable"
				, "type": "typename"
				, "file": "extras/Tests/lang.varInitByRef.ci"
				, "line": 97
				, "value": "valueOfTyp"
			}, {
				"": "typeOfValue"
				, "kind": ".variable"
				, "type": "typename"
				, "file": "extras/Tests/lang.varInitByRef.ci"
				, "line": 99
				, "value": "typeOfValue"
			}, {
				"": "copyPtrFloat64"
				, "kind": ".variable"
				, "type": "variant"
				, "file": "extras/Tests/lang.varInitByRef.ci"
				, "line": 105
				, "value": "copyPtrFloat64"
			}, {
				"": "copyVarFloat64"
				, "kind": ".variable"
				, "type": "pointer"
				, "file": "extras/Tests/lang.varInitByRef.ci"
				, "line": 108
				, "value": "copyVarFloat64"
			}, {
				"": "static if (typename(int64) == null)"
				, "kind": "static if"
				, "type": "void"
				, "file": "extras/Tests/lang.varInitByVal.ci"
				, "line": 3
				, "test": {
					"": "typename(int64) == null"
					, "kind": "=="
					, "type": "bool"
					, "file": "extras/Tests/lang.varInitByVal.ci"
					, "line": 3
					, "left": {
						"": "typename(int64)"
						, "kind": "()"
						, "type": "typename"
						, "file": "extras/Tests/lang.varInitByVal.ci"
						, "line": 3
						, "args": [{
							"": "int64"
							, "kind": ".variable"
							, "type": "typename"
							, "file": "extras/Tests/lang.varInitByVal.ci"
							, "line": 3
							, "value": "int64"
						}]
					}
					, "right": {
						"": "null"
						, "kind": ".variable"
						, "type": "pointer"
						, "file": "extras/Tests/lang.varInitByVal.ci"
						, "line": 3
						, "value": "null"
					}
				}
				, "then": {
					"": "{...}"
					, "kind": "{}"
					, "type": "void"
					, "file": "extras/Tests/lang.varInitByVal.ci"
					, "line": 3
					, "stmt": [{
						"": "integer"
						, "kind": ".variable"
						, "type": "typename"
						, "file": "extras/Tests/lang.varInitByVal.ci"
						, "line": 4
						, "value": "integer"
					}]
				}
			}, {
				"": "localNoInit"
				, "kind": ".variable"
				, "type": "int64"
				, "file": "extras/Tests/lang.varInitByVal.ci"
				, "line": 7
				, "value": "localNoInit"
			}, {
				"": "globalNoInit"
				, "kind": ".variable"
				, "type": "int64"
				, "file": "extras/Tests/lang.varInitByVal.ci"
				, "line": 8
				, "value": "globalNoInit"
			}, {
				"": "localInitValue"
				, "kind": ".variable"
				, "type": "int64"
				, "file": "extras/Tests/lang.varInitByVal.ci"
				, "line": 9
				, "value": "localInitValue"
			}, {
				"": "globalInitValue"
				, "kind": ".variable"
				, "type": "int64"
				, "file": "extras/Tests/lang.varInitByVal.ci"
				, "line": 10
				, "value": "globalInitValue"
			}, {
				"": "localInitLocal"
				, "kind": ".variable"
				, "type": "int64"
				, "file": "extras/Tests/lang.varInitByVal.ci"
				, "line": 11
				, "value": "localInitLocal"
			}, {
				"": "globalInitLocal"
				, "kind": ".variable"
				, "type": "int64"
				, "file": "extras/Tests/lang.varInitByVal.ci"
				, "line": 12
				, "value": "globalInitLocal"
			}, {
				"": "localInitGlobal"
				, "kind": ".variable"
				, "type": "int64"
				, "file": "extras/Tests/lang.varInitByVal.ci"
				, "line": 13
				, "value": "localInitGlobal"
			}, {
				"": "globalInitGlobal"
				, "kind": ".variable"
				, "type": "int64"
				, "file": "extras/Tests/lang.varInitByVal.ci"
				, "line": 14
				, "value": "globalInitGlobal"
			}, {
				"": "InitMember"
				, "kind": ".variable"
				, "type": "typename"
				, "file": "extras/Tests/lang.varInitByVal.ci"
				, "line": 17
				, "value": "InitMember"
			}, {
				"": "pi64"
				, "kind": ".variable"
				, "type": "float64"
				, "file": "extras/Tests/stdc.nfcNumber.ci"
				, "line": 3
				, "value": "pi64"
			}, {
				"": "e64"
				, "kind": ".variable"
				, "type": "float64"
				, "file": "extras/Tests/stdc.nfcNumber.ci"
				, "line": 4
				, "value": "e64"
			}, {
				"": "pi32"
				, "kind": ".variable"
				, "type": "float32"
				, "file": "extras/Tests/stdc.nfcNumber.ci"
				, "line": 6
				, "value": "pi32"
			}, {
				"": "e32"
				, "kind": ".variable"
				, "type": "float32"
				, "file": "extras/Tests/stdc.nfcNumber.ci"
				, "line": 7
				, "value": "e32"
			}, {
				"": "rgb888(r: int32, g: int32, b: int32): int32"
				, "kind": ".variable"
				, "type": "typename"
				, "file": "extras/Tests/stdc.nfcNumber.ci"
				, "line": 10
				, "value": "rgb888(r: int32, g: int32, b: int32): int32"
			}, {
				"": "rgb565(r: int32, g: int32, b: int32): int32"
				, "kind": ".variable"
				, "type": "typename"
				, "file": "extras/Tests/stdc.nfcNumber.ci"
				, "line": 12
				, "value": "rgb565(r: int32, g: int32, b: int32): int32"
			}, {
				"": "r_comp"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/stdc.nfcNumber.ci"
				, "line": 14
				, "value": "r_comp"
			}, {
				"": "g_comp"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/stdc.nfcNumber.ci"
				, "line": 15
				, "value": "g_comp"
			}, {
				"": "b_comp"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/stdc.nfcNumber.ci"
				, "line": 16
				, "value": "b_comp"
			}, {
				"": "r5g6b5"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/stdc.nfcNumber.ci"
				, "line": 18
				, "value": "r5g6b5"
			}, {
				"": "r8g8b8"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/stdc.nfcNumber.ci"
				, "line": 19
				, "value": "r8g8b8"
			}, {
				"": "zxtR5"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/stdc.nfcNumber.ci"
				, "line": 21
				, "value": "zxtR5"
			}, {
				"": "zxtG6"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/stdc.nfcNumber.ci"
				, "line": 22
				, "value": "zxtG6"
			}, {
				"": "zxtB5"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/stdc.nfcNumber.ci"
				, "line": 23
				, "value": "zxtB5"
			}, {
				"": "sxtR5"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/stdc.nfcNumber.ci"
				, "line": 25
				, "value": "sxtR5"
			}, {
				"": "sxtG6"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/stdc.nfcNumber.ci"
				, "line": 26
				, "value": "sxtG6"
			}, {
				"": "sxtB5"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/stdc.nfcNumber.ci"
				, "line": 27
				, "value": "sxtB5"
			}, {
				"": "zxtR8"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/stdc.nfcNumber.ci"
				, "line": 29
				, "value": "zxtR8"
			}, {
				"": "zxtG8"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/stdc.nfcNumber.ci"
				, "line": 30
				, "value": "zxtG8"
			}, {
				"": "zxtB8"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/stdc.nfcNumber.ci"
				, "line": 31
				, "value": "zxtB8"
			}, {
				"": "sxtR8"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/stdc.nfcNumber.ci"
				, "line": 33
				, "value": "sxtR8"
			}, {
				"": "sxtG8"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/stdc.nfcNumber.ci"
				, "line": 34
				, "value": "sxtG8"
			}, {
				"": "sxtB8"
				, "kind": ".variable"
				, "type": "int32"
				, "file": "extras/Tests/stdc.nfcNumber.ci"
				, "line": 35
				, "value": "sxtB8"
			}, {
				"": "sinF64"
				, "kind": ".variable"
				, "type": "float64"
				, "file": "extras/Tests/stdc.nfcNumber.ci"
				, "line": 37
				, "value": "sinF64"
			}, {
				"": "cosF64"
				, "kind": ".variable"
				, "type": "float64"
				, "file": "extras/Tests/stdc.nfcNumber.ci"
				, "line": 38
				, "value": "cosF64"
			}, {
				"": "tanF64"
				, "kind": ".variable"
				, "type": "float64"
				, "file": "extras/Tests/stdc.nfcNumber.ci"
				, "line": 39
				, "value": "tanF64"
			}, {
				"": "logF64"
				, "kind": ".variable"
				, "type": "float64"
				, "file": "extras/Tests/stdc.nfcNumber.ci"
				, "line": 40
				, "value": "logF64"
			}, {
				"": "expF64"
				, "kind": ".variable"
				, "type": "float64"
				, "file": "extras/Tests/stdc.nfcNumber.ci"
				, "line": 41
				, "value": "expF64"
			}, {
				"": "powF64"
				, "kind": ".variable"
				, "type": "float64"
				, "file": "extras/Tests/stdc.nfcNumber.ci"
				, "line": 42
				, "value": "powF64"
			}, {
				"": "sqrtF64"
				, "kind": ".variable"
				, "type": "float64"
				, "file": "extras/Tests/stdc.nfcNumber.ci"
				, "line": 43
				, "value": "sqrtF64"
			}, {
				"": "atanF64"
				, "kind": ".variable"
				, "type": "float64"
				, "file": "extras/Tests/stdc.nfcNumber.ci"
				, "line": 44
				, "value": "atanF64"
			}, {
				"": "sinF32"
				, "kind": ".variable"
				, "type": "float32"
				, "file": "extras/Tests/stdc.nfcNumber.ci"
				, "line": 46
				, "value": "sinF32"
			}, {
				"": "cosF32"
				, "kind": ".variable"
				, "type": "float32"
				, "file": "extras/Tests/stdc.nfcNumber.ci"
				, "line": 47
				, "value": "cosF32"
			}, {
				"": "tanF32"
				, "kind": ".variable"
				, "type": "float32"
				, "file": "extras/Tests/stdc.nfcNumber.ci"
				, "line": 48
				, "value": "tanF32"
			}, {
				"": "logF32"
				, "kind": ".variable"
				, "type": "float32"
				, "file": "extras/Tests/stdc.nfcNumber.ci"
				, "line": 49
				, "value": "logF32"
			}, {
				"": "expF32"
				, "kind": ".variable"
				, "type": "float32"
				, "file": "extras/Tests/stdc.nfcNumber.ci"
				, "line": 50
				, "value": "expF32"
			}, {
				"": "powF32"
				, "kind": ".variable"
				, "type": "float32"
				, "file": "extras/Tests/stdc.nfcNumber.ci"
				, "line": 51
				, "value": "powF32"
			}, {
				"": "sqrtF32"
				, "kind": ".variable"
				, "type": "float32"
				, "file": "extras/Tests/stdc.nfcNumber.ci"
				, "line": 52
				, "value": "sqrtF32"
			}, {
				"": "atanF32"
				, "kind": ".variable"
				, "type": "float32"
				, "file": "extras/Tests/stdc.nfcNumber.ci"
				, "line": 53
				, "value": "atanF32"
			}, {
				"": "realloc(data: pointer, size: int32): pointer"
				, "kind": ".variable"
				, "type": "typename"
				, "file": "extras/Tests/stdc.nfcMemory.ci"
				, "line": 3
				, "value": "realloc(data: pointer, size: int32): pointer"
			}, {
				"": "malloc(size: int32): pointer"
				, "kind": ".variable"
				, "type": "typename"
				, "file": "extras/Tests/stdc.nfcMemory.ci"
				, "line": 4
				, "value": "malloc(size: int32): pointer"
			}, {
				"": "free(data: pointer): pointer"
				, "kind": ".variable"
				, "type": "typename"
				, "file": "extras/Tests/stdc.nfcMemory.ci"
				, "line": 5
				, "value": "free(data: pointer): pointer"
			}, {
				"": "p1"
				, "kind": ".variable"
				, "type": "pointer"
				, "file": "extras/Tests/stdc.nfcMemory.ci"
				, "line": 7
				, "value": "p1"
			}, {
				"": "p2"
				, "kind": ".variable"
				, "type": "pointer"
				, "file": "extras/Tests/stdc.nfcMemory.ci"
				, "line": 8
				, "value": "p2"
			}, {
				"": "p3"
				, "kind": ".variable"
				, "type": "pointer"
				, "file": "extras/Tests/stdc.nfcMemory.ci"
				, "line": 9
				, "value": "p3"
			}, {
				"": "p4"
				, "kind": ".variable"
				, "type": "pointer"
				, "file": "extras/Tests/stdc.nfcMemory.ci"
				, "line": 10
				, "value": "p4"
			}, {
				"": "pointer.fill(p1, 0, 1024);"
				, "kind": ";"
				, "type": "void"
				, "file": "extras/Tests/stdc.nfcMemory.ci"
				, "line": 13
			}, {
				"": "pointer.copy(p1, p3, 160);"
				, "kind": ";"
				, "type": "void"
				, "file": "extras/Tests/stdc.nfcMemory.ci"
				, "line": 14
			}, {
				"": "free(p1);"
				, "kind": ";"
				, "type": "void"
				, "file": "extras/Tests/stdc.nfcMemory.ci"
				, "line": 17
			}, {
				"": "free(p2);"
				, "kind": ";"
				, "type": "void"
				, "file": "extras/Tests/stdc.nfcMemory.ci"
				, "line": 18
			}, {
				"": "free(p3);"
				, "kind": ";"
				, "type": "void"
				, "file": "extras/Tests/stdc.nfcMemory.ci"
				, "line": 19
			}, {
				"": "free(p4);"
				, "kind": ";"
				, "type": "void"
				, "file": "extras/Tests/stdc.nfcMemory.ci"
				, "line": 20
			}, {
				"": "val1"
				, "kind": ".variable"
				, "type": "int64"
				, "file": "extras/Tests/stdc.nfcMemory.ci"
				, "line": 23
				, "value": "val1"
			}, {
				"": "val2"
				, "kind": ".variable"
				, "type": "int64"
				, "file": "extras/Tests/stdc.nfcMemory.ci"
				, "line": 24
				, "value": "val2"
			}, {
				"": "debug(\"val1\", val1);"
				, "kind": ";"
				, "type": "void"
				, "file": "extras/Tests/stdc.nfcMemory.ci"
				, "line": 26
			}, {
				"": "debug(\"val2\", val2);"
				, "kind": ";"
				, "type": "void"
				, "file": "extras/Tests/stdc.nfcMemory.ci"
				, "line": 27
			}, {
				"": "pointer.copy(pointer(val2), pointer(val1), 8);"
				, "kind": ";"
				, "type": "void"
				, "file": "extras/Tests/stdc.nfcMemory.ci"
				, "line": 29
			}, {
				"": "pointer.fill(pointer(val1), 0, 8);"
				, "kind": ";"
				, "type": "void"
				, "file": "extras/Tests/stdc.nfcMemory.ci"
				, "line": 30
			}, {
				"": "debug(\"val1\", val1);"
				, "kind": ";"
				, "type": "void"
				, "file": "extras/Tests/stdc.nfcMemory.ci"
				, "line": 32
			}, {
				"": "debug(\"val2\", val2);"
				, "kind": ";"
				, "type": "void"
				, "file": "extras/Tests/stdc.nfcMemory.ci"
				, "line": 33
			}, {
				"": "assert(5 == 5, \"5 != 5\");"
				, "kind": ";"
				, "type": "void"
				, "file": "extras/Tests/stdc.nfcRaise.ci"
				, "line": 3
			}]
		}]
	}
	, "asm": [{
		"instruction": "load.c32 44"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 149688
		, "size": 5
	}, {
		"instruction": "store.m32 .0248b0"
		, "name": "store.m32"
		, "code": "0x2d"
		, "offs": 149693
		, "size": 4
	}, {
		"instruction": "load.c32 45"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 149697
		, "size": 5
	}, {
		"instruction": "store.m32 .0248b4"
		, "name": "store.m32"
		, "code": "0x2d"
		, "offs": 149702
		, "size": 4
	}, {
		"instruction": "load.ref .00d3f0"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 149706
		, "size": 5
	}, {
		"instruction": "load.c32 4"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 149711
		, "size": 5
	}, {
		"instruction": "load.c32 3"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 149716
		, "size": 5
	}, {
		"instruction": "load.ref .00d680"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 149721
		, "size": 5
	}, {
		"instruction": "load.ref .0007f0"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 149726
		, "size": 5
	}, {
		"instruction": "load.ref .000000"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 149731
		, "size": 5
	}, {
		"instruction": "load.c32 1"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 149736
		, "size": 5
	}, {
		"instruction": "nfc(5)"
		, "name": "nfc"
		, "code": "0x01"
		, "offs": 149741
		, "size": 4
	}, {
		"instruction": "load.ref .00d3f0"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 149745
		, "size": 5
	}, {
		"instruction": "load.c32 12"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 149750
		, "size": 5
	}, {
		"instruction": "load.c32 3"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 149755
		, "size": 5
	}, {
		"instruction": "load.ref .00d680"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 149760
		, "size": 5
	}, {
		"instruction": "load.ref .0007f0"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 149765
		, "size": 5
	}, {
		"instruction": "load.ref .000000"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 149770
		, "size": 5
	}, {
		"instruction": "load.c32 3"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 149775
		, "size": 5
	}, {
		"instruction": "nfc(5)"
		, "name": "nfc"
		, "code": "0x01"
		, "offs": 149780
		, "size": 4
	}, {
		"instruction": "load.ref .00d3f0"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 149784
		, "size": 5
	}, {
		"instruction": "load.c32 22"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 149789
		, "size": 5
	}, {
		"instruction": "load.c32 3"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 149794
		, "size": 5
	}, {
		"instruction": "load.ref .00d680"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 149799
		, "size": 5
	}, {
		"instruction": "load.ref .0007f0"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 149804
		, "size": 5
	}, {
		"instruction": "load.ref .000000"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 149809
		, "size": 5
	}, {
		"instruction": "load.c32 6"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 149814
		, "size": 5
	}, {
		"instruction": "nfc(5)"
		, "name": "nfc"
		, "code": "0x01"
		, "offs": 149819
		, "size": 4
	}, {
		"instruction": "load.c32 0"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 149823
		, "size": 5
	}, {
		"instruction": "dup.x1 sp(0)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 149828
		, "size": 2
	}, {
		"instruction": "load.c32 0"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 149830
		, "size": 5
	}, {
		"instruction": "ceq.i32"
		, "name": "ceq.i32"
		, "code": "0x57"
		, "offs": 149835
		, "size": 1
	}, {
		"instruction": "jz +42"
		, "name": "jz"
		, "code": "0x06"
		, "offs": 149836
		, "size": 4
	}, {
		"instruction": "load.ref .00d3f0"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 149840
		, "size": 5
	}, {
		"instruction": "load.c32 29"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 149845
		, "size": 5
	}, {
		"instruction": "load.c32 3"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 149850
		, "size": 5
	}, {
		"instruction": "load.ref .00d690"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 149855
		, "size": 5
	}, {
		"instruction": "load.ref .000370"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 149860
		, "size": 5
	}, {
		"instruction": "load.sp(+20)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 149865
		, "size": 4
	}, {
		"instruction": "load.c32 7"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 149869
		, "size": 5
	}, {
		"instruction": "nfc(5)"
		, "name": "nfc"
		, "code": "0x01"
		, "offs": 149874
		, "size": 4
	}, {
		"instruction": "dup.x1 sp(0)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 149878
		, "size": 2
	}, {
		"instruction": "load.c32 0"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 149880
		, "size": 5
	}, {
		"instruction": "ceq.i32"
		, "name": "ceq.i32"
		, "code": "0x57"
		, "offs": 149885
		, "size": 1
	}, {
		"instruction": "jnz +42"
		, "name": "jnz"
		, "code": "0x05"
		, "offs": 149886
		, "size": 4
	}, {
		"instruction": "load.ref .00d3f0"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 149890
		, "size": 5
	}, {
		"instruction": "load.c32 33"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 149895
		, "size": 5
	}, {
		"instruction": "load.c32 3"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 149900
		, "size": 5
	}, {
		"instruction": "load.ref .00d697"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 149905
		, "size": 5
	}, {
		"instruction": "load.ref .000370"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 149910
		, "size": 5
	}, {
		"instruction": "load.sp(+20)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 149915
		, "size": 4
	}, {
		"instruction": "load.c32 8"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 149919
		, "size": 5
	}, {
		"instruction": "nfc(5)"
		, "name": "nfc"
		, "code": "0x01"
		, "offs": 149924
		, "size": 4
	}, {
		"instruction": "dup.x1 sp(0)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 149928
		, "size": 2
	}, {
		"instruction": "load.c32 0"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 149930
		, "size": 5
	}, {
		"instruction": "ceq.i32"
		, "name": "ceq.i32"
		, "code": "0x57"
		, "offs": 149935
		, "size": 1
	}, {
		"instruction": "jz +46"
		, "name": "jz"
		, "code": "0x06"
		, "offs": 149936
		, "size": 4
	}, {
		"instruction": "load.ref .00d3f0"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 149940
		, "size": 5
	}, {
		"instruction": "load.c32 37"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 149945
		, "size": 5
	}, {
		"instruction": "load.c32 3"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 149950
		, "size": 5
	}, {
		"instruction": "load.ref .00d690"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 149955
		, "size": 5
	}, {
		"instruction": "load.ref .000370"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 149960
		, "size": 5
	}, {
		"instruction": "load.sp(+20)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 149965
		, "size": 4
	}, {
		"instruction": "load.c32 10"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 149969
		, "size": 5
	}, {
		"instruction": "nfc(5)"
		, "name": "nfc"
		, "code": "0x01"
		, "offs": 149974
		, "size": 4
	}, {
		"instruction": "jmp +42"
		, "name": "jmp"
		, "code": "0x04"
		, "offs": 149978
		, "size": 4
	}, {
		"instruction": "load.ref .00d3f0"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 149982
		, "size": 5
	}, {
		"instruction": "load.c32 40"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 149987
		, "size": 5
	}, {
		"instruction": "load.c32 3"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 149992
		, "size": 5
	}, {
		"instruction": "load.ref .00d697"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 149997
		, "size": 5
	}, {
		"instruction": "load.ref .000370"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 150002
		, "size": 5
	}, {
		"instruction": "load.sp(+20)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 150007
		, "size": 4
	}, {
		"instruction": "load.c32 9"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 150011
		, "size": 5
	}, {
		"instruction": "nfc(5)"
		, "name": "nfc"
		, "code": "0x01"
		, "offs": 150016
		, "size": 4
	}, {
		"instruction": "dup.x1 sp(0)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 150020
		, "size": 2
	}, {
		"instruction": "load.c32 0"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 150022
		, "size": 5
	}, {
		"instruction": "ceq.i32"
		, "name": "ceq.i32"
		, "code": "0x57"
		, "offs": 150027
		, "size": 1
	}, {
		"instruction": "jnz +46"
		, "name": "jnz"
		, "code": "0x05"
		, "offs": 150028
		, "size": 4
	}, {
		"instruction": "load.ref .00d3f0"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 150032
		, "size": 5
	}, {
		"instruction": "load.c32 44"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 150037
		, "size": 5
	}, {
		"instruction": "load.c32 3"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 150042
		, "size": 5
	}, {
		"instruction": "load.ref .00d697"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 150047
		, "size": 5
	}, {
		"instruction": "load.ref .000370"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 150052
		, "size": 5
	}, {
		"instruction": "load.sp(+20)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 150057
		, "size": 4
	}, {
		"instruction": "load.c32 11"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 150061
		, "size": 5
	}, {
		"instruction": "nfc(5)"
		, "name": "nfc"
		, "code": "0x01"
		, "offs": 150066
		, "size": 4
	}, {
		"instruction": "jmp +42"
		, "name": "jmp"
		, "code": "0x04"
		, "offs": 150070
		, "size": 4
	}, {
		"instruction": "load.ref .00d3f0"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 150074
		, "size": 5
	}, {
		"instruction": "load.c32 47"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 150079
		, "size": 5
	}, {
		"instruction": "load.c32 3"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 150084
		, "size": 5
	}, {
		"instruction": "load.ref .00d690"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 150089
		, "size": 5
	}, {
		"instruction": "load.ref .000370"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 150094
		, "size": 5
	}, {
		"instruction": "load.sp(+20)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 150099
		, "size": 4
	}, {
		"instruction": "load.c32 12"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 150103
		, "size": 5
	}, {
		"instruction": "nfc(5)"
		, "name": "nfc"
		, "code": "0x01"
		, "offs": 150108
		, "size": 4
	}, {
		"instruction": "jmp +47"
		, "name": "jmp"
		, "code": "0x04"
		, "offs": 150112
		, "size": 4
	}, {
		"instruction": "load.ref .00d411"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 150116
		, "size": 5
	}, {
		"instruction": "load.c32 4"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 150121
		, "size": 5
	}, {
		"instruction": "load.c32 3"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 150126
		, "size": 5
	}, {
		"instruction": "load.ref .00d758"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 150131
		, "size": 5
	}, {
		"instruction": "load.ref .0007f0"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 150136
		, "size": 5
	}, {
		"instruction": "load.ref .000000"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 150141
		, "size": 5
	}, {
		"instruction": "load.c32 0"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 150146
		, "size": 5
	}, {
		"instruction": "nfc(5)"
		, "name": "nfc"
		, "code": "0x01"
		, "offs": 150151
		, "size": 4
	}, {
		"instruction": "jmp +8"
		, "name": "jmp"
		, "code": "0x04"
		, "offs": 150155
		, "size": 4
	}, {
		"instruction": "jmp -43"
		, "name": "jmp"
		, "code": "0x04"
		, "offs": 150159
		, "size": 4
	}, {
		"instruction": "load.c32 0"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 150163
		, "size": 5
	}, {
		"instruction": "jmp +46"
		, "name": "jmp"
		, "code": "0x04"
		, "offs": 150168
		, "size": 4
	}, {
		"instruction": "load.ref .00d411"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 150172
		, "size": 5
	}, {
		"instruction": "load.c32 9"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 150177
		, "size": 5
	}, {
		"instruction": "load.c32 3"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 150182
		, "size": 5
	}, {
		"instruction": "load.ref .00d766"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 150187
		, "size": 5
	}, {
		"instruction": "load.ref .000370"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 150192
		, "size": 5
	}, {
		"instruction": "load.sp(+20)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 150197
		, "size": 4
	}, {
		"instruction": "load.c32 0"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 150201
		, "size": 5
	}, {
		"instruction": "nfc(5)"
		, "name": "nfc"
		, "code": "0x01"
		, "offs": 150206
		, "size": 4
	}, {
		"instruction": "inc.i32(+1)"
		, "name": "inc.i32"
		, "code": "0x0b"
		, "offs": 150210
		, "size": 4
	}, {
		"instruction": "dup.x1 sp(0)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 150214
		, "size": 2
	}, {
		"instruction": "load.c32 2"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 150216
		, "size": 5
	}, {
		"instruction": "clt.i32"
		, "name": "clt.i32"
		, "code": "0x58"
		, "offs": 150221
		, "size": 1
	}, {
		"instruction": "jnz -50"
		, "name": "jnz"
		, "code": "0x05"
		, "offs": 150222
		, "size": 4
	}, {
		"instruction": "inc.sp(-4)"
		, "name": "inc.sp"
		, "code": "0x10"
		, "offs": 150226
		, "size": 4
	}, {
		"instruction": "load.c32 0"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 150230
		, "size": 5
	}, {
		"instruction": "load.c32 0"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 150235
		, "size": 5
	}, {
		"instruction": "set.x1 sp(1)"
		, "name": "set.x1"
		, "code": "0x15"
		, "offs": 150240
		, "size": 2
	}, {
		"instruction": "jmp +46"
		, "name": "jmp"
		, "code": "0x04"
		, "offs": 150242
		, "size": 4
	}, {
		"instruction": "load.ref .00d411"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 150246
		, "size": 5
	}, {
		"instruction": "load.c32 14"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 150251
		, "size": 5
	}, {
		"instruction": "load.c32 3"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 150256
		, "size": 5
	}, {
		"instruction": "load.ref .00d78c"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 150261
		, "size": 5
	}, {
		"instruction": "load.ref .000370"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 150266
		, "size": 5
	}, {
		"instruction": "load.sp(+20)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 150271
		, "size": 4
	}, {
		"instruction": "load.c32 0"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 150275
		, "size": 5
	}, {
		"instruction": "nfc(5)"
		, "name": "nfc"
		, "code": "0x01"
		, "offs": 150280
		, "size": 4
	}, {
		"instruction": "inc.i32(+1)"
		, "name": "inc.i32"
		, "code": "0x0b"
		, "offs": 150284
		, "size": 4
	}, {
		"instruction": "dup.x1 sp(0)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 150288
		, "size": 2
	}, {
		"instruction": "load.c32 2"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 150290
		, "size": 5
	}, {
		"instruction": "clt.i32"
		, "name": "clt.i32"
		, "code": "0x58"
		, "offs": 150295
		, "size": 1
	}, {
		"instruction": "jnz -50"
		, "name": "jnz"
		, "code": "0x05"
		, "offs": 150296
		, "size": 4
	}, {
		"instruction": "load.c32 3"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 150300
		, "size": 5
	}, {
		"instruction": "load.c32 6"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 150305
		, "size": 5
	}, {
		"instruction": "load.c32 9"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 150310
		, "size": 5
	}, {
		"instruction": "load.c32 0"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 150315
		, "size": 5
	}, {
		"instruction": "load.c32 0"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 150320
		, "size": 5
	}, {
		"instruction": "load.c32 0"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 150325
		, "size": 5
	}, {
		"instruction": "load.c32 3"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 150330
		, "size": 5
	}, {
		"instruction": "dup.x1 sp(5)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 150335
		, "size": 2
	}, {
		"instruction": "dup.x1 sp(6)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 150337
		, "size": 2
	}, {
		"instruction": "dup.x1 sp(6)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 150339
		, "size": 2
	}, {
		"instruction": "add.i32"
		, "name": "add.i32"
		, "code": "0x51"
		, "offs": 150341
		, "size": 1
	}, {
		"instruction": "load.c32 3"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 150342
		, "size": 5
	}, {
		"instruction": "inc.i32(+12)"
		, "name": "inc.i32"
		, "code": "0x0b"
		, "offs": 150347
		, "size": 4
	}, {
		"instruction": "dup.x1 sp(9)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 150351
		, "size": 2
	}, {
		"instruction": "dup.x1 sp(9)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 150353
		, "size": 2
	}, {
		"instruction": "add.i32"
		, "name": "add.i32"
		, "code": "0x51"
		, "offs": 150355
		, "size": 1
	}, {
		"instruction": "dup.x1 sp(10)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 150356
		, "size": 2
	}, {
		"instruction": "dup.x1 sp(10)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 150358
		, "size": 2
	}, {
		"instruction": "add.i32"
		, "name": "add.i32"
		, "code": "0x51"
		, "offs": 150360
		, "size": 1
	}, {
		"instruction": "dup.x1 sp(10)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 150361
		, "size": 2
	}, {
		"instruction": "dup.x1 sp(10)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 150363
		, "size": 2
	}, {
		"instruction": "add.i32"
		, "name": "add.i32"
		, "code": "0x51"
		, "offs": 150365
		, "size": 1
	}, {
		"instruction": "add.i32"
		, "name": "add.i32"
		, "code": "0x51"
		, "offs": 150366
		, "size": 1
	}, {
		"instruction": "load.c32 3"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 150367
		, "size": 5
	}, {
		"instruction": "dup.x1 sp(0)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 150372
		, "size": 2
	}, {
		"instruction": "jz +10"
		, "name": "jz"
		, "code": "0x06"
		, "offs": 150374
		, "size": 4
	}, {
		"instruction": "dup.x1 sp(0)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 150378
		, "size": 2
	}, {
		"instruction": "jmp +9"
		, "name": "jmp"
		, "code": "0x04"
		, "offs": 150380
		, "size": 4
	}, {
		"instruction": "load.c32 12"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 150384
		, "size": 5
	}, {
		"instruction": "set.x1 sp(1)"
		, "name": "set.x1"
		, "code": "0x15"
		, "offs": 150389
		, "size": 2
	}, {
		"instruction": "dup.x1 sp(12)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 150391
		, "size": 2
	}, {
		"instruction": "dup.x1 sp(0)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 150393
		, "size": 2
	}, {
		"instruction": "jz +10"
		, "name": "jz"
		, "code": "0x06"
		, "offs": 150395
		, "size": 4
	}, {
		"instruction": "dup.x1 sp(0)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 150399
		, "size": 2
	}, {
		"instruction": "jmp +6"
		, "name": "jmp"
		, "code": "0x04"
		, "offs": 150401
		, "size": 4
	}, {
		"instruction": "dup.x1 sp(12)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 150405
		, "size": 2
	}, {
		"instruction": "set.x1 sp(1)"
		, "name": "set.x1"
		, "code": "0x15"
		, "offs": 150407
		, "size": 2
	}, {
		"instruction": "dup.x1 sp(13)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 150409
		, "size": 2
	}, {
		"instruction": "dup.x1 sp(13)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 150411
		, "size": 2
	}, {
		"instruction": "add.i32"
		, "name": "add.i32"
		, "code": "0x51"
		, "offs": 150413
		, "size": 1
	}, {
		"instruction": "dup.x1 sp(0)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 150414
		, "size": 2
	}, {
		"instruction": "jz +10"
		, "name": "jz"
		, "code": "0x06"
		, "offs": 150416
		, "size": 4
	}, {
		"instruction": "dup.x1 sp(0)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 150420
		, "size": 2
	}, {
		"instruction": "jmp +9"
		, "name": "jmp"
		, "code": "0x04"
		, "offs": 150422
		, "size": 4
	}, {
		"instruction": "dup.x1 sp(13)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 150426
		, "size": 2
	}, {
		"instruction": "dup.x1 sp(13)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 150428
		, "size": 2
	}, {
		"instruction": "add.i32"
		, "name": "add.i32"
		, "code": "0x51"
		, "offs": 150430
		, "size": 1
	}, {
		"instruction": "set.x1 sp(1)"
		, "name": "set.x1"
		, "code": "0x15"
		, "offs": 150431
		, "size": 2
	}, {
		"instruction": "load.c32 3"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 150433
		, "size": 5
	}, {
		"instruction": "load.c32 12"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 150438
		, "size": 5
	}, {
		"instruction": "dup.x1 sp(1)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 150443
		, "size": 2
	}, {
		"instruction": "dup.x1 sp(1)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 150445
		, "size": 2
	}, {
		"instruction": "clt.i32"
		, "name": "clt.i32"
		, "code": "0x58"
		, "offs": 150447
		, "size": 1
	}, {
		"instruction": "jz +10"
		, "name": "jz"
		, "code": "0x06"
		, "offs": 150448
		, "size": 4
	}, {
		"instruction": "dup.x1 sp(1)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 150452
		, "size": 2
	}, {
		"instruction": "jmp +6"
		, "name": "jmp"
		, "code": "0x04"
		, "offs": 150454
		, "size": 4
	}, {
		"instruction": "dup.x1 sp(0)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 150458
		, "size": 2
	}, {
		"instruction": "set.x1 sp(2)"
		, "name": "set.x1"
		, "code": "0x15"
		, "offs": 150460
		, "size": 2
	}, {
		"instruction": "inc.sp(-4)"
		, "name": "inc.sp"
		, "code": "0x10"
		, "offs": 150462
		, "size": 4
	}, {
		"instruction": "dup.x1 sp(15)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 150466
		, "size": 2
	}, {
		"instruction": "dup.x1 sp(15)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 150468
		, "size": 2
	}, {
		"instruction": "dup.x1 sp(1)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 150470
		, "size": 2
	}, {
		"instruction": "dup.x1 sp(1)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 150472
		, "size": 2
	}, {
		"instruction": "clt.i32"
		, "name": "clt.i32"
		, "code": "0x58"
		, "offs": 150474
		, "size": 1
	}, {
		"instruction": "jz +10"
		, "name": "jz"
		, "code": "0x06"
		, "offs": 150475
		, "size": 4
	}, {
		"instruction": "dup.x1 sp(1)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 150479
		, "size": 2
	}, {
		"instruction": "jmp +6"
		, "name": "jmp"
		, "code": "0x04"
		, "offs": 150481
		, "size": 4
	}, {
		"instruction": "dup.x1 sp(0)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 150485
		, "size": 2
	}, {
		"instruction": "set.x1 sp(2)"
		, "name": "set.x1"
		, "code": "0x15"
		, "offs": 150487
		, "size": 2
	}, {
		"instruction": "inc.sp(-4)"
		, "name": "inc.sp"
		, "code": "0x10"
		, "offs": 150489
		, "size": 4
	}, {
		"instruction": "dup.x1 sp(16)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 150493
		, "size": 2
	}, {
		"instruction": "dup.x1 sp(16)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 150495
		, "size": 2
	}, {
		"instruction": "add.i32"
		, "name": "add.i32"
		, "code": "0x51"
		, "offs": 150497
		, "size": 1
	}, {
		"instruction": "dup.x1 sp(16)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 150498
		, "size": 2
	}, {
		"instruction": "dup.x1 sp(16)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 150500
		, "size": 2
	}, {
		"instruction": "add.i32"
		, "name": "add.i32"
		, "code": "0x51"
		, "offs": 150502
		, "size": 1
	}, {
		"instruction": "dup.x1 sp(1)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 150503
		, "size": 2
	}, {
		"instruction": "dup.x1 sp(1)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 150505
		, "size": 2
	}, {
		"instruction": "clt.i32"
		, "name": "clt.i32"
		, "code": "0x58"
		, "offs": 150507
		, "size": 1
	}, {
		"instruction": "jz +10"
		, "name": "jz"
		, "code": "0x06"
		, "offs": 150508
		, "size": 4
	}, {
		"instruction": "dup.x1 sp(1)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 150512
		, "size": 2
	}, {
		"instruction": "jmp +6"
		, "name": "jmp"
		, "code": "0x04"
		, "offs": 150514
		, "size": 4
	}, {
		"instruction": "dup.x1 sp(0)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 150518
		, "size": 2
	}, {
		"instruction": "set.x1 sp(2)"
		, "name": "set.x1"
		, "code": "0x15"
		, "offs": 150520
		, "size": 2
	}, {
		"instruction": "inc.sp(-4)"
		, "name": "inc.sp"
		, "code": "0x10"
		, "offs": 150522
		, "size": 4
	}, {
		"instruction": "load.c32 3"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 150526
		, "size": 5
	}, {
		"instruction": "dup.x1 sp(0)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 150531
		, "size": 2
	}, {
		"instruction": "jz +10"
		, "name": "jz"
		, "code": "0x06"
		, "offs": 150533
		, "size": 4
	}, {
		"instruction": "dup.x1 sp(0)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 150537
		, "size": 2
	}, {
		"instruction": "jmp +9"
		, "name": "jmp"
		, "code": "0x04"
		, "offs": 150539
		, "size": 4
	}, {
		"instruction": "load.c32 2"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 150543
		, "size": 5
	}, {
		"instruction": "set.x1 sp(1)"
		, "name": "set.x1"
		, "code": "0x15"
		, "offs": 150548
		, "size": 2
	}, {
		"instruction": "dup.x1 sp(0)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 150550
		, "size": 2
	}, {
		"instruction": "jz +10"
		, "name": "jz"
		, "code": "0x06"
		, "offs": 150552
		, "size": 4
	}, {
		"instruction": "dup.x1 sp(0)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 150556
		, "size": 2
	}, {
		"instruction": "jmp +9"
		, "name": "jmp"
		, "code": "0x04"
		, "offs": 150558
		, "size": 4
	}, {
		"instruction": "load.c32 6"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 150562
		, "size": 5
	}, {
		"instruction": "set.x1 sp(1)"
		, "name": "set.x1"
		, "code": "0x15"
		, "offs": 150567
		, "size": 2
	}, {
		"instruction": "dup.x1 sp(18)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 150569
		, "size": 2
	}, {
		"instruction": "dup.x1 sp(0)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 150571
		, "size": 2
	}, {
		"instruction": "jz +10"
		, "name": "jz"
		, "code": "0x06"
		, "offs": 150573
		, "size": 4
	}, {
		"instruction": "dup.x1 sp(0)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 150577
		, "size": 2
	}, {
		"instruction": "jmp +6"
		, "name": "jmp"
		, "code": "0x04"
		, "offs": 150579
		, "size": 4
	}, {
		"instruction": "dup.x1 sp(18)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 150583
		, "size": 2
	}, {
		"instruction": "set.x1 sp(1)"
		, "name": "set.x1"
		, "code": "0x15"
		, "offs": 150585
		, "size": 2
	}, {
		"instruction": "dup.x1 sp(0)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 150587
		, "size": 2
	}, {
		"instruction": "jz +10"
		, "name": "jz"
		, "code": "0x06"
		, "offs": 150589
		, "size": 4
	}, {
		"instruction": "dup.x1 sp(0)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 150593
		, "size": 2
	}, {
		"instruction": "jmp +6"
		, "name": "jmp"
		, "code": "0x04"
		, "offs": 150595
		, "size": 4
	}, {
		"instruction": "dup.x1 sp(17)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 150599
		, "size": 2
	}, {
		"instruction": "set.x1 sp(1)"
		, "name": "set.x1"
		, "code": "0x15"
		, "offs": 150601
		, "size": 2
	}, {
		"instruction": "dup.x1 sp(19)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 150603
		, "size": 2
	}, {
		"instruction": "dup.x1 sp(19)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 150605
		, "size": 2
	}, {
		"instruction": "add.i32"
		, "name": "add.i32"
		, "code": "0x51"
		, "offs": 150607
		, "size": 1
	}, {
		"instruction": "dup.x1 sp(0)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 150608
		, "size": 2
	}, {
		"instruction": "jz +10"
		, "name": "jz"
		, "code": "0x06"
		, "offs": 150610
		, "size": 4
	}, {
		"instruction": "dup.x1 sp(0)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 150614
		, "size": 2
	}, {
		"instruction": "jmp +9"
		, "name": "jmp"
		, "code": "0x04"
		, "offs": 150616
		, "size": 4
	}, {
		"instruction": "dup.x1 sp(19)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 150620
		, "size": 2
	}, {
		"instruction": "dup.x1 sp(19)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 150622
		, "size": 2
	}, {
		"instruction": "add.i32"
		, "name": "add.i32"
		, "code": "0x51"
		, "offs": 150624
		, "size": 1
	}, {
		"instruction": "set.x1 sp(1)"
		, "name": "set.x1"
		, "code": "0x15"
		, "offs": 150625
		, "size": 2
	}, {
		"instruction": "dup.x1 sp(0)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 150627
		, "size": 2
	}, {
		"instruction": "jz +10"
		, "name": "jz"
		, "code": "0x06"
		, "offs": 150629
		, "size": 4
	}, {
		"instruction": "dup.x1 sp(0)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 150633
		, "size": 2
	}, {
		"instruction": "jmp +9"
		, "name": "jmp"
		, "code": "0x04"
		, "offs": 150635
		, "size": 4
	}, {
		"instruction": "dup.x1 sp(18)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 150639
		, "size": 2
	}, {
		"instruction": "dup.x1 sp(21)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 150641
		, "size": 2
	}, {
		"instruction": "add.i32"
		, "name": "add.i32"
		, "code": "0x51"
		, "offs": 150643
		, "size": 1
	}, {
		"instruction": "set.x1 sp(1)"
		, "name": "set.x1"
		, "code": "0x15"
		, "offs": 150644
		, "size": 2
	}, {
		"instruction": "load.c32 3"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 150646
		, "size": 5
	}, {
		"instruction": "load.c32 2"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 150651
		, "size": 5
	}, {
		"instruction": "dup.x1 sp(1)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 150656
		, "size": 2
	}, {
		"instruction": "dup.x1 sp(1)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 150658
		, "size": 2
	}, {
		"instruction": "clt.i32"
		, "name": "clt.i32"
		, "code": "0x58"
		, "offs": 150660
		, "size": 1
	}, {
		"instruction": "jz +10"
		, "name": "jz"
		, "code": "0x06"
		, "offs": 150661
		, "size": 4
	}, {
		"instruction": "dup.x1 sp(1)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 150665
		, "size": 2
	}, {
		"instruction": "jmp +6"
		, "name": "jmp"
		, "code": "0x04"
		, "offs": 150667
		, "size": 4
	}, {
		"instruction": "dup.x1 sp(0)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 150671
		, "size": 2
	}, {
		"instruction": "set.x1 sp(2)"
		, "name": "set.x1"
		, "code": "0x15"
		, "offs": 150673
		, "size": 2
	}, {
		"instruction": "inc.sp(-4)"
		, "name": "inc.sp"
		, "code": "0x10"
		, "offs": 150675
		, "size": 4
	}, {
		"instruction": "load.c32 6"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 150679
		, "size": 5
	}, {
		"instruction": "dup.x1 sp(1)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 150684
		, "size": 2
	}, {
		"instruction": "dup.x1 sp(1)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 150686
		, "size": 2
	}, {
		"instruction": "clt.i32"
		, "name": "clt.i32"
		, "code": "0x58"
		, "offs": 150688
		, "size": 1
	}, {
		"instruction": "jz +10"
		, "name": "jz"
		, "code": "0x06"
		, "offs": 150689
		, "size": 4
	}, {
		"instruction": "dup.x1 sp(1)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 150693
		, "size": 2
	}, {
		"instruction": "jmp +6"
		, "name": "jmp"
		, "code": "0x04"
		, "offs": 150695
		, "size": 4
	}, {
		"instruction": "dup.x1 sp(0)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 150699
		, "size": 2
	}, {
		"instruction": "set.x1 sp(2)"
		, "name": "set.x1"
		, "code": "0x15"
		, "offs": 150701
		, "size": 2
	}, {
		"instruction": "inc.sp(-4)"
		, "name": "inc.sp"
		, "code": "0x10"
		, "offs": 150703
		, "size": 4
	}, {
		"instruction": "dup.x1 sp(21)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 150707
		, "size": 2
	}, {
		"instruction": "dup.x1 sp(21)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 150709
		, "size": 2
	}, {
		"instruction": "dup.x1 sp(1)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 150711
		, "size": 2
	}, {
		"instruction": "dup.x1 sp(1)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 150713
		, "size": 2
	}, {
		"instruction": "clt.i32"
		, "name": "clt.i32"
		, "code": "0x58"
		, "offs": 150715
		, "size": 1
	}, {
		"instruction": "jz +10"
		, "name": "jz"
		, "code": "0x06"
		, "offs": 150716
		, "size": 4
	}, {
		"instruction": "dup.x1 sp(1)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 150720
		, "size": 2
	}, {
		"instruction": "jmp +6"
		, "name": "jmp"
		, "code": "0x04"
		, "offs": 150722
		, "size": 4
	}, {
		"instruction": "dup.x1 sp(0)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 150726
		, "size": 2
	}, {
		"instruction": "set.x1 sp(2)"
		, "name": "set.x1"
		, "code": "0x15"
		, "offs": 150728
		, "size": 2
	}, {
		"instruction": "inc.sp(-4)"
		, "name": "inc.sp"
		, "code": "0x10"
		, "offs": 150730
		, "size": 4
	}, {
		"instruction": "dup.x1 sp(20)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 150734
		, "size": 2
	}, {
		"instruction": "dup.x1 sp(1)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 150736
		, "size": 2
	}, {
		"instruction": "dup.x1 sp(1)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 150738
		, "size": 2
	}, {
		"instruction": "clt.i32"
		, "name": "clt.i32"
		, "code": "0x58"
		, "offs": 150740
		, "size": 1
	}, {
		"instruction": "jz +10"
		, "name": "jz"
		, "code": "0x06"
		, "offs": 150741
		, "size": 4
	}, {
		"instruction": "dup.x1 sp(1)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 150745
		, "size": 2
	}, {
		"instruction": "jmp +6"
		, "name": "jmp"
		, "code": "0x04"
		, "offs": 150747
		, "size": 4
	}, {
		"instruction": "dup.x1 sp(0)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 150751
		, "size": 2
	}, {
		"instruction": "set.x1 sp(2)"
		, "name": "set.x1"
		, "code": "0x15"
		, "offs": 150753
		, "size": 2
	}, {
		"instruction": "inc.sp(-4)"
		, "name": "inc.sp"
		, "code": "0x10"
		, "offs": 150755
		, "size": 4
	}, {
		"instruction": "dup.x1 sp(22)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 150759
		, "size": 2
	}, {
		"instruction": "dup.x1 sp(22)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 150761
		, "size": 2
	}, {
		"instruction": "add.i32"
		, "name": "add.i32"
		, "code": "0x51"
		, "offs": 150763
		, "size": 1
	}, {
		"instruction": "dup.x1 sp(22)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 150764
		, "size": 2
	}, {
		"instruction": "dup.x1 sp(22)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 150766
		, "size": 2
	}, {
		"instruction": "add.i32"
		, "name": "add.i32"
		, "code": "0x51"
		, "offs": 150768
		, "size": 1
	}, {
		"instruction": "dup.x1 sp(1)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 150769
		, "size": 2
	}, {
		"instruction": "dup.x1 sp(1)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 150771
		, "size": 2
	}, {
		"instruction": "clt.i32"
		, "name": "clt.i32"
		, "code": "0x58"
		, "offs": 150773
		, "size": 1
	}, {
		"instruction": "jz +10"
		, "name": "jz"
		, "code": "0x06"
		, "offs": 150774
		, "size": 4
	}, {
		"instruction": "dup.x1 sp(1)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 150778
		, "size": 2
	}, {
		"instruction": "jmp +6"
		, "name": "jmp"
		, "code": "0x04"
		, "offs": 150780
		, "size": 4
	}, {
		"instruction": "dup.x1 sp(0)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 150784
		, "size": 2
	}, {
		"instruction": "set.x1 sp(2)"
		, "name": "set.x1"
		, "code": "0x15"
		, "offs": 150786
		, "size": 2
	}, {
		"instruction": "inc.sp(-4)"
		, "name": "inc.sp"
		, "code": "0x10"
		, "offs": 150788
		, "size": 4
	}, {
		"instruction": "dup.x1 sp(21)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 150792
		, "size": 2
	}, {
		"instruction": "dup.x1 sp(24)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 150794
		, "size": 2
	}, {
		"instruction": "add.i32"
		, "name": "add.i32"
		, "code": "0x51"
		, "offs": 150796
		, "size": 1
	}, {
		"instruction": "dup.x1 sp(1)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 150797
		, "size": 2
	}, {
		"instruction": "dup.x1 sp(1)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 150799
		, "size": 2
	}, {
		"instruction": "clt.i32"
		, "name": "clt.i32"
		, "code": "0x58"
		, "offs": 150801
		, "size": 1
	}, {
		"instruction": "jz +10"
		, "name": "jz"
		, "code": "0x06"
		, "offs": 150802
		, "size": 4
	}, {
		"instruction": "dup.x1 sp(1)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 150806
		, "size": 2
	}, {
		"instruction": "jmp +6"
		, "name": "jmp"
		, "code": "0x04"
		, "offs": 150808
		, "size": 4
	}, {
		"instruction": "dup.x1 sp(0)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 150812
		, "size": 2
	}, {
		"instruction": "set.x1 sp(2)"
		, "name": "set.x1"
		, "code": "0x15"
		, "offs": 150814
		, "size": 2
	}, {
		"instruction": "inc.sp(-4)"
		, "name": "inc.sp"
		, "code": "0x10"
		, "offs": 150816
		, "size": 4
	}, {
		"instruction": "load.f32 1.000000"
		, "name": "load.f32"
		, "code": "0x1d"
		, "offs": 150820
		, "size": 5
	}, {
		"instruction": "load.f32 2.000000"
		, "name": "load.f32"
		, "code": "0x1d"
		, "offs": 150825
		, "size": 5
	}, {
		"instruction": "load.f32 3.000000"
		, "name": "load.f32"
		, "code": "0x1d"
		, "offs": 150830
		, "size": 5
	}, {
		"instruction": "load.f32 1.000000"
		, "name": "load.f32"
		, "code": "0x1d"
		, "offs": 150835
		, "size": 5
	}, {
		"instruction": "load.f32 5.000000"
		, "name": "load.f32"
		, "code": "0x1d"
		, "offs": 150840
		, "size": 5
	}, {
		"instruction": "load.z32"
		, "name": "load.z32"
		, "code": "0x18"
		, "offs": 150845
		, "size": 1
	}, {
		"instruction": "load.z64"
		, "name": "load.z64"
		, "code": "0x19"
		, "offs": 150846
		, "size": 1
	}, {
		"instruction": "load.c32 42"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 150847
		, "size": 5
	}, {
		"instruction": "load.c32 96"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 150852
		, "size": 5
	}, {
		"instruction": "dup.x1 sp(1)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 150857
		, "size": 2
	}, {
		"instruction": "dup.x1 sp(1)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 150859
		, "size": 2
	}, {
		"instruction": "add.i32"
		, "name": "add.i32"
		, "code": "0x51"
		, "offs": 150861
		, "size": 1
	}, {
		"instruction": "load.c32 10"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 150862
		, "size": 5
	}, {
		"instruction": "load.c32 5"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 150867
		, "size": 5
	}, {
		"instruction": "div.i32"
		, "name": "div.i32"
		, "code": "0x54"
		, "offs": 150872
		, "size": 1
	}, {
		"instruction": "load.f64 3.140000"
		, "name": "load.f64"
		, "code": "0x1e"
		, "offs": 150873
		, "size": 9
	}, {
		"instruction": "load.f64 2.000000"
		, "name": "load.f64"
		, "code": "0x1e"
		, "offs": 150882
		, "size": 9
	}, {
		"instruction": "div.f64"
		, "name": "div.f64"
		, "code": "0x84"
		, "offs": 150891
		, "size": 1
	}, {
		"instruction": "f64.2f32"
		, "name": "f64.2f32"
		, "code": "0x8b"
		, "offs": 150892
		, "size": 1
	}, {
		"instruction": "nfc(21)"
		, "name": "nfc"
		, "code": "0x01"
		, "offs": 150893
		, "size": 4
	}, {
		"instruction": "load.m32 .0000b8"
		, "name": "load.m32"
		, "code": "0x2a"
		, "offs": 150897
		, "size": 4
	}, {
		"instruction": "load.m32 .000148"
		, "name": "load.m32"
		, "code": "0x2a"
		, "offs": 150901
		, "size": 4
	}, {
		"instruction": "load.m32 .0001d8"
		, "name": "load.m32"
		, "code": "0x2a"
		, "offs": 150905
		, "size": 4
	}, {
		"instruction": "load.m32 .000268"
		, "name": "load.m32"
		, "code": "0x2a"
		, "offs": 150909
		, "size": 4
	}, {
		"instruction": "load.m32 .0002f8"
		, "name": "load.m32"
		, "code": "0x2a"
		, "offs": 150913
		, "size": 4
	}, {
		"instruction": "load.m32 .000388"
		, "name": "load.m32"
		, "code": "0x2a"
		, "offs": 150917
		, "size": 4
	}, {
		"instruction": "load.m32 .000418"
		, "name": "load.m32"
		, "code": "0x2a"
		, "offs": 150921
		, "size": 4
	}, {
		"instruction": "load.m32 .0004a8"
		, "name": "load.m32"
		, "code": "0x2a"
		, "offs": 150925
		, "size": 4
	}, {
		"instruction": "load.m32 .000538"
		, "name": "load.m32"
		, "code": "0x2a"
		, "offs": 150929
		, "size": 4
	}, {
		"instruction": "load.m32 .0005c8"
		, "name": "load.m32"
		, "code": "0x2a"
		, "offs": 150933
		, "size": 4
	}, {
		"instruction": "load.m32 .000658"
		, "name": "load.m32"
		, "code": "0x2a"
		, "offs": 150937
		, "size": 4
	}, {
		"instruction": "load.m32 .0006e8"
		, "name": "load.m32"
		, "code": "0x2a"
		, "offs": 150941
		, "size": 4
	}, {
		"instruction": "load.m32 .000778"
		, "name": "load.m32"
		, "code": "0x2a"
		, "offs": 150945
		, "size": 4
	}, {
		"instruction": "load.m32 .000808"
		, "name": "load.m32"
		, "code": "0x2a"
		, "offs": 150949
		, "size": 4
	}, {
		"instruction": "load.m32 .000898"
		, "name": "load.m32"
		, "code": "0x2a"
		, "offs": 150953
		, "size": 4
	}, {
		"instruction": "load.m32 .000020"
		, "name": "load.m32"
		, "code": "0x2a"
		, "offs": 150957
		, "size": 4
	}, {
		"instruction": "load.m32 .000928"
		, "name": "load.m32"
		, "code": "0x2a"
		, "offs": 150961
		, "size": 4
	}, {
		"instruction": "load.m32 .0009c0"
		, "name": "load.m32"
		, "code": "0x2a"
		, "offs": 150965
		, "size": 4
	}, {
		"instruction": "load.ref .013100"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 150969
		, "size": 5
	}, {
		"instruction": "dup.x1 sp(0)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 150974
		, "size": 2
	}, {
		"instruction": "nfc(4)"
		, "name": "nfc"
		, "code": "0x01"
		, "offs": 150976
		, "size": 4
	}, {
		"instruction": "dup.x1 sp(1)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 150980
		, "size": 2
	}, {
		"instruction": "inc.i32(+32)"
		, "name": "inc.i32"
		, "code": "0x0b"
		, "offs": 150982
		, "size": 4
	}, {
		"instruction": "load.m32"
		, "name": "load.m32"
		, "code": "0x22"
		, "offs": 150986
		, "size": 1
	}, {
		"instruction": "dup.x1 sp(2)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 150987
		, "size": 2
	}, {
		"instruction": "inc.i32(+24)"
		, "name": "inc.i32"
		, "code": "0x0b"
		, "offs": 150989
		, "size": 4
	}, {
		"instruction": "load.m32"
		, "name": "load.m32"
		, "code": "0x22"
		, "offs": 150993
		, "size": 1
	}, {
		"instruction": "dup.x1 sp(3)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 150994
		, "size": 2
	}, {
		"instruction": "nfc(2)"
		, "name": "nfc"
		, "code": "0x01"
		, "offs": 150996
		, "size": 4
	}, {
		"instruction": "dup.x1 sp(4)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 151000
		, "size": 2
	}, {
		"instruction": "nfc(3)"
		, "name": "nfc"
		, "code": "0x01"
		, "offs": 151002
		, "size": 4
	}, {
		"instruction": "dup.x1 sp(5)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 151006
		, "size": 2
	}, {
		"instruction": "nfc(1)"
		, "name": "nfc"
		, "code": "0x01"
		, "offs": 151008
		, "size": 4
	}, {
		"instruction": "dup.x1 sp(0)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 151012
		, "size": 2
	}, {
		"instruction": "nfc(4)"
		, "name": "nfc"
		, "code": "0x01"
		, "offs": 151014
		, "size": 4
	}, {
		"instruction": "dup.x1 sp(1)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 151018
		, "size": 2
	}, {
		"instruction": "inc.i32(+32)"
		, "name": "inc.i32"
		, "code": "0x0b"
		, "offs": 151020
		, "size": 4
	}, {
		"instruction": "load.m32"
		, "name": "load.m32"
		, "code": "0x22"
		, "offs": 151024
		, "size": 1
	}, {
		"instruction": "dup.x1 sp(2)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 151025
		, "size": 2
	}, {
		"instruction": "inc.i32(+24)"
		, "name": "inc.i32"
		, "code": "0x0b"
		, "offs": 151027
		, "size": 4
	}, {
		"instruction": "load.m32"
		, "name": "load.m32"
		, "code": "0x22"
		, "offs": 151031
		, "size": 1
	}, {
		"instruction": "dup.x1 sp(3)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 151032
		, "size": 2
	}, {
		"instruction": "nfc(2)"
		, "name": "nfc"
		, "code": "0x01"
		, "offs": 151034
		, "size": 4
	}, {
		"instruction": "dup.x1 sp(4)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 151038
		, "size": 2
	}, {
		"instruction": "nfc(3)"
		, "name": "nfc"
		, "code": "0x01"
		, "offs": 151040
		, "size": 4
	}, {
		"instruction": "dup.x1 sp(5)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 151044
		, "size": 2
	}, {
		"instruction": "nfc(1)"
		, "name": "nfc"
		, "code": "0x01"
		, "offs": 151046
		, "size": 4
	}, {
		"instruction": "dup.x1 sp(0)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 151050
		, "size": 2
	}, {
		"instruction": "inc.i32(+32)"
		, "name": "inc.i32"
		, "code": "0x0b"
		, "offs": 151052
		, "size": 4
	}, {
		"instruction": "load.m32"
		, "name": "load.m32"
		, "code": "0x22"
		, "offs": 151056
		, "size": 1
	}, {
		"instruction": "dup.x1 sp(1)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 151057
		, "size": 2
	}, {
		"instruction": "inc.i32(+24)"
		, "name": "inc.i32"
		, "code": "0x0b"
		, "offs": 151059
		, "size": 4
	}, {
		"instruction": "load.m32"
		, "name": "load.m32"
		, "code": "0x22"
		, "offs": 151063
		, "size": 1
	}, {
		"instruction": "dup.x1 sp(2)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 151064
		, "size": 2
	}, {
		"instruction": "nfc(1)"
		, "name": "nfc"
		, "code": "0x01"
		, "offs": 151066
		, "size": 4
	}, {
		"instruction": "dup.x1 sp(0)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 151070
		, "size": 2
	}, {
		"instruction": "inc.i32(+32)"
		, "name": "inc.i32"
		, "code": "0x0b"
		, "offs": 151072
		, "size": 4
	}, {
		"instruction": "load.m32"
		, "name": "load.m32"
		, "code": "0x22"
		, "offs": 151076
		, "size": 1
	}, {
		"instruction": "dup.x1 sp(1)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 151077
		, "size": 2
	}, {
		"instruction": "inc.i32(+24)"
		, "name": "inc.i32"
		, "code": "0x0b"
		, "offs": 151079
		, "size": 4
	}, {
		"instruction": "load.m32"
		, "name": "load.m32"
		, "code": "0x22"
		, "offs": 151083
		, "size": 1
	}, {
		"instruction": "load.c32 0"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 151084
		, "size": 5
	}, {
		"instruction": "load.c32 2"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 151089
		, "size": 5
	}, {
		"instruction": "load.c32 7"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 151094
		, "size": 5
	}, {
		"instruction": "load.ref .024821"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 151099
		, "size": 5
	}, {
		"instruction": "call"
		, "name": "call"
		, "code": "0x02"
		, "offs": 151104
		, "size": 1
	}, {
		"instruction": "inc.sp(-8)"
		, "name": "inc.sp"
		, "code": "0x10"
		, "offs": 151105
		, "size": 4
	}, {
		"instruction": "load.ref .024821"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 151109
		, "size": 5
	}, {
		"instruction": "load.c32 0"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 151114
		, "size": 5
	}, {
		"instruction": "load.c32 2"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 151119
		, "size": 5
	}, {
		"instruction": "load.c32 8"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 151124
		, "size": 5
	}, {
		"instruction": "dup.x1 sp(3)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 151129
		, "size": 2
	}, {
		"instruction": "call"
		, "name": "call"
		, "code": "0x02"
		, "offs": 151131
		, "size": 1
	}, {
		"instruction": "inc.sp(-8)"
		, "name": "inc.sp"
		, "code": "0x10"
		, "offs": 151132
		, "size": 4
	}, {
		"instruction": "load.ref .024829"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 151136
		, "size": 5
	}, {
		"instruction": "load.c32 0"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 151141
		, "size": 5
	}, {
		"instruction": "load.c32 2"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 151146
		, "size": 5
	}, {
		"instruction": "load.c32 6"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 151151
		, "size": 5
	}, {
		"instruction": "dup.x1 sp(3)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 151156
		, "size": 2
	}, {
		"instruction": "call"
		, "name": "call"
		, "code": "0x02"
		, "offs": 151158
		, "size": 1
	}, {
		"instruction": "inc.sp(-8)"
		, "name": "inc.sp"
		, "code": "0x10"
		, "offs": 151159
		, "size": 4
	}, {
		"instruction": "dup.x1 sp(1)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 151163
		, "size": 2
	}, {
		"instruction": "load.c32 0"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 151165
		, "size": 5
	}, {
		"instruction": "load.c32 2"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 151170
		, "size": 5
	}, {
		"instruction": "load.c32 7"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 151175
		, "size": 5
	}, {
		"instruction": "dup.x1 sp(3)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 151180
		, "size": 2
	}, {
		"instruction": "call"
		, "name": "call"
		, "code": "0x02"
		, "offs": 151182
		, "size": 1
	}, {
		"instruction": "inc.sp(-8)"
		, "name": "inc.sp"
		, "code": "0x10"
		, "offs": 151183
		, "size": 4
	}, {
		"instruction": "load.c32 0"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 151187
		, "size": 5
	}, {
		"instruction": "load.c32 13"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 151192
		, "size": 5
	}, {
		"instruction": "load.ref .024831"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 151197
		, "size": 5
	}, {
		"instruction": "call"
		, "name": "call"
		, "code": "0x02"
		, "offs": 151202
		, "size": 1
	}, {
		"instruction": "inc.sp(-4)"
		, "name": "inc.sp"
		, "code": "0x10"
		, "offs": 151203
		, "size": 4
	}, {
		"instruction": "load.c32 2"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 151207
		, "size": 5
	}, {
		"instruction": "load.c32 1"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 151212
		, "size": 5
	}, {
		"instruction": "load.c32 0"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 151217
		, "size": 5
	}, {
		"instruction": "not.b32"
		, "name": "not.b32"
		, "code": "0x0a"
		, "offs": 151222
		, "size": 1
	}, {
		"instruction": "load.sp(+4)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151223
		, "size": 4
	}, {
		"instruction": "load.m8"
		, "name": "load.m8"
		, "code": "0x20"
		, "offs": 151227
		, "size": 1
	}, {
		"instruction": "load.sp(+4)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151228
		, "size": 4
	}, {
		"instruction": "load.m8"
		, "name": "load.m8"
		, "code": "0x20"
		, "offs": 151232
		, "size": 1
	}, {
		"instruction": "and.b32"
		, "name": "and.b32"
		, "code": "0x31"
		, "offs": 151233
		, "size": 1
	}, {
		"instruction": "load.sp(+8)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151234
		, "size": 4
	}, {
		"instruction": "load.m8"
		, "name": "load.m8"
		, "code": "0x20"
		, "offs": 151238
		, "size": 1
	}, {
		"instruction": "load.sp(+8)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151239
		, "size": 4
	}, {
		"instruction": "load.m8"
		, "name": "load.m8"
		, "code": "0x20"
		, "offs": 151243
		, "size": 1
	}, {
		"instruction": "or.b32"
		, "name": "or.b32"
		, "code": "0x32"
		, "offs": 151244
		, "size": 1
	}, {
		"instruction": "load.sp(+12)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151245
		, "size": 4
	}, {
		"instruction": "load.m8"
		, "name": "load.m8"
		, "code": "0x20"
		, "offs": 151249
		, "size": 1
	}, {
		"instruction": "load.sp(+12)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151250
		, "size": 4
	}, {
		"instruction": "load.m8"
		, "name": "load.m8"
		, "code": "0x20"
		, "offs": 151254
		, "size": 1
	}, {
		"instruction": "xor.b32"
		, "name": "xor.b32"
		, "code": "0x36"
		, "offs": 151255
		, "size": 1
	}, {
		"instruction": "load.sp(+12)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151256
		, "size": 4
	}, {
		"instruction": "load.m8"
		, "name": "load.m8"
		, "code": "0x20"
		, "offs": 151260
		, "size": 1
	}, {
		"instruction": "not.b32"
		, "name": "not.b32"
		, "code": "0x0a"
		, "offs": 151261
		, "size": 1
	}, {
		"instruction": "load.sp(+20)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151262
		, "size": 4
	}, {
		"instruction": "load.m8"
		, "name": "load.m8"
		, "code": "0x20"
		, "offs": 151266
		, "size": 1
	}, {
		"instruction": "load.sp(+20)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151267
		, "size": 4
	}, {
		"instruction": "load.m8"
		, "name": "load.m8"
		, "code": "0x20"
		, "offs": 151271
		, "size": 1
	}, {
		"instruction": "ceq.i32"
		, "name": "ceq.i32"
		, "code": "0x57"
		, "offs": 151272
		, "size": 1
	}, {
		"instruction": "load.sp(+24)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151273
		, "size": 4
	}, {
		"instruction": "load.m8"
		, "name": "load.m8"
		, "code": "0x20"
		, "offs": 151277
		, "size": 1
	}, {
		"instruction": "load.sp(+24)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151278
		, "size": 4
	}, {
		"instruction": "load.m8"
		, "name": "load.m8"
		, "code": "0x20"
		, "offs": 151282
		, "size": 1
	}, {
		"instruction": "ceq.i32"
		, "name": "ceq.i32"
		, "code": "0x57"
		, "offs": 151283
		, "size": 1
	}, {
		"instruction": "not.b32"
		, "name": "not.b32"
		, "code": "0x0a"
		, "offs": 151284
		, "size": 1
	}, {
		"instruction": "load.sp(+28)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151285
		, "size": 4
	}, {
		"instruction": "load.m8"
		, "name": "load.m8"
		, "code": "0x20"
		, "offs": 151289
		, "size": 1
	}, {
		"instruction": "load.sp(+28)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151290
		, "size": 4
	}, {
		"instruction": "load.m8"
		, "name": "load.m8"
		, "code": "0x20"
		, "offs": 151294
		, "size": 1
	}, {
		"instruction": "clt.i32"
		, "name": "clt.i32"
		, "code": "0x58"
		, "offs": 151295
		, "size": 1
	}, {
		"instruction": "load.sp(+32)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151296
		, "size": 4
	}, {
		"instruction": "load.m8"
		, "name": "load.m8"
		, "code": "0x20"
		, "offs": 151300
		, "size": 1
	}, {
		"instruction": "load.sp(+32)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151301
		, "size": 4
	}, {
		"instruction": "load.m8"
		, "name": "load.m8"
		, "code": "0x20"
		, "offs": 151305
		, "size": 1
	}, {
		"instruction": "cgt.i32"
		, "name": "cgt.i32"
		, "code": "0x59"
		, "offs": 151306
		, "size": 1
	}, {
		"instruction": "not.b32"
		, "name": "not.b32"
		, "code": "0x0a"
		, "offs": 151307
		, "size": 1
	}, {
		"instruction": "load.sp(+36)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151308
		, "size": 4
	}, {
		"instruction": "load.m8"
		, "name": "load.m8"
		, "code": "0x20"
		, "offs": 151312
		, "size": 1
	}, {
		"instruction": "load.sp(+36)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151313
		, "size": 4
	}, {
		"instruction": "load.m8"
		, "name": "load.m8"
		, "code": "0x20"
		, "offs": 151317
		, "size": 1
	}, {
		"instruction": "cgt.i32"
		, "name": "cgt.i32"
		, "code": "0x59"
		, "offs": 151318
		, "size": 1
	}, {
		"instruction": "load.sp(+40)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151319
		, "size": 4
	}, {
		"instruction": "load.m8"
		, "name": "load.m8"
		, "code": "0x20"
		, "offs": 151323
		, "size": 1
	}, {
		"instruction": "load.sp(+40)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151324
		, "size": 4
	}, {
		"instruction": "load.m8"
		, "name": "load.m8"
		, "code": "0x20"
		, "offs": 151328
		, "size": 1
	}, {
		"instruction": "clt.i32"
		, "name": "clt.i32"
		, "code": "0x58"
		, "offs": 151329
		, "size": 1
	}, {
		"instruction": "not.b32"
		, "name": "not.b32"
		, "code": "0x0a"
		, "offs": 151330
		, "size": 1
	}, {
		"instruction": "load.c32 97"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 151331
		, "size": 5
	}, {
		"instruction": "load.c32 98"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 151336
		, "size": 5
	}, {
		"instruction": "load.sp(+0)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151341
		, "size": 4
	}, {
		"instruction": "load.m8"
		, "name": "load.m8"
		, "code": "0x20"
		, "offs": 151345
		, "size": 1
	}, {
		"instruction": "nop"
		, "name": "nop"
		, "code": "0x00"
		, "offs": 151346
		, "size": 1
	}, {
		"instruction": "load.sp(+4)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151347
		, "size": 4
	}, {
		"instruction": "load.m8"
		, "name": "load.m8"
		, "code": "0x20"
		, "offs": 151351
		, "size": 1
	}, {
		"instruction": "neg.i32"
		, "name": "neg.i32"
		, "code": "0x50"
		, "offs": 151352
		, "size": 1
	}, {
		"instruction": "load.sp(+8)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151353
		, "size": 4
	}, {
		"instruction": "load.m8"
		, "name": "load.m8"
		, "code": "0x20"
		, "offs": 151357
		, "size": 1
	}, {
		"instruction": "cmt.b32"
		, "name": "cmt.b32"
		, "code": "0x30"
		, "offs": 151358
		, "size": 1
	}, {
		"instruction": "load.sp(+16)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151359
		, "size": 4
	}, {
		"instruction": "load.m8"
		, "name": "load.m8"
		, "code": "0x20"
		, "offs": 151363
		, "size": 1
	}, {
		"instruction": "load.sp(+16)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151364
		, "size": 4
	}, {
		"instruction": "load.m8"
		, "name": "load.m8"
		, "code": "0x20"
		, "offs": 151368
		, "size": 1
	}, {
		"instruction": "add.i32"
		, "name": "add.i32"
		, "code": "0x51"
		, "offs": 151369
		, "size": 1
	}, {
		"instruction": "load.sp(+20)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151370
		, "size": 4
	}, {
		"instruction": "load.m8"
		, "name": "load.m8"
		, "code": "0x20"
		, "offs": 151374
		, "size": 1
	}, {
		"instruction": "load.sp(+20)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151375
		, "size": 4
	}, {
		"instruction": "load.m8"
		, "name": "load.m8"
		, "code": "0x20"
		, "offs": 151379
		, "size": 1
	}, {
		"instruction": "sub.i32"
		, "name": "sub.i32"
		, "code": "0x52"
		, "offs": 151380
		, "size": 1
	}, {
		"instruction": "load.sp(+24)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151381
		, "size": 4
	}, {
		"instruction": "load.m8"
		, "name": "load.m8"
		, "code": "0x20"
		, "offs": 151385
		, "size": 1
	}, {
		"instruction": "load.sp(+24)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151386
		, "size": 4
	}, {
		"instruction": "load.m8"
		, "name": "load.m8"
		, "code": "0x20"
		, "offs": 151390
		, "size": 1
	}, {
		"instruction": "mul.u32"
		, "name": "mul.u32"
		, "code": "0x33"
		, "offs": 151391
		, "size": 1
	}, {
		"instruction": "load.sp(+28)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151392
		, "size": 4
	}, {
		"instruction": "load.m8"
		, "name": "load.m8"
		, "code": "0x20"
		, "offs": 151396
		, "size": 1
	}, {
		"instruction": "load.sp(+28)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151397
		, "size": 4
	}, {
		"instruction": "load.m8"
		, "name": "load.m8"
		, "code": "0x20"
		, "offs": 151401
		, "size": 1
	}, {
		"instruction": "div.u32"
		, "name": "div.u32"
		, "code": "0x34"
		, "offs": 151402
		, "size": 1
	}, {
		"instruction": "load.sp(+32)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151403
		, "size": 4
	}, {
		"instruction": "load.m8"
		, "name": "load.m8"
		, "code": "0x20"
		, "offs": 151407
		, "size": 1
	}, {
		"instruction": "load.sp(+32)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151408
		, "size": 4
	}, {
		"instruction": "load.m8"
		, "name": "load.m8"
		, "code": "0x20"
		, "offs": 151412
		, "size": 1
	}, {
		"instruction": "mod.u32"
		, "name": "mod.u32"
		, "code": "0x35"
		, "offs": 151413
		, "size": 1
	}, {
		"instruction": "load.sp(+36)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151414
		, "size": 4
	}, {
		"instruction": "load.m8"
		, "name": "load.m8"
		, "code": "0x20"
		, "offs": 151418
		, "size": 1
	}, {
		"instruction": "load.sp(+36)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151419
		, "size": 4
	}, {
		"instruction": "load.m8"
		, "name": "load.m8"
		, "code": "0x20"
		, "offs": 151423
		, "size": 1
	}, {
		"instruction": "and.b32"
		, "name": "and.b32"
		, "code": "0x31"
		, "offs": 151424
		, "size": 1
	}, {
		"instruction": "load.sp(+40)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151425
		, "size": 4
	}, {
		"instruction": "load.m8"
		, "name": "load.m8"
		, "code": "0x20"
		, "offs": 151429
		, "size": 1
	}, {
		"instruction": "load.sp(+40)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151430
		, "size": 4
	}, {
		"instruction": "load.m8"
		, "name": "load.m8"
		, "code": "0x20"
		, "offs": 151434
		, "size": 1
	}, {
		"instruction": "or.b32"
		, "name": "or.b32"
		, "code": "0x32"
		, "offs": 151435
		, "size": 1
	}, {
		"instruction": "load.sp(+44)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151436
		, "size": 4
	}, {
		"instruction": "load.m8"
		, "name": "load.m8"
		, "code": "0x20"
		, "offs": 151440
		, "size": 1
	}, {
		"instruction": "load.sp(+44)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151441
		, "size": 4
	}, {
		"instruction": "load.m8"
		, "name": "load.m8"
		, "code": "0x20"
		, "offs": 151445
		, "size": 1
	}, {
		"instruction": "xor.b32"
		, "name": "xor.b32"
		, "code": "0x36"
		, "offs": 151446
		, "size": 1
	}, {
		"instruction": "load.sp(+48)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151447
		, "size": 4
	}, {
		"instruction": "load.m8"
		, "name": "load.m8"
		, "code": "0x20"
		, "offs": 151451
		, "size": 1
	}, {
		"instruction": "dup.x1 sp(26)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 151452
		, "size": 2
	}, {
		"instruction": "shl.b32"
		, "name": "shl.b32"
		, "code": "0x3a"
		, "offs": 151454
		, "size": 1
	}, {
		"instruction": "load.sp(+52)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151455
		, "size": 4
	}, {
		"instruction": "load.m8"
		, "name": "load.m8"
		, "code": "0x20"
		, "offs": 151459
		, "size": 1
	}, {
		"instruction": "dup.x1 sp(27)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 151460
		, "size": 2
	}, {
		"instruction": "sar.b32"
		, "name": "sar.b32"
		, "code": "0x3c"
		, "offs": 151462
		, "size": 1
	}, {
		"instruction": "load.sp(+52)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151463
		, "size": 4
	}, {
		"instruction": "load.m8"
		, "name": "load.m8"
		, "code": "0x20"
		, "offs": 151467
		, "size": 1
	}, {
		"instruction": "i32.2bool"
		, "name": "i32.2bool"
		, "code": "0x5a"
		, "offs": 151468
		, "size": 1
	}, {
		"instruction": "not.b32"
		, "name": "not.b32"
		, "code": "0x0a"
		, "offs": 151469
		, "size": 1
	}, {
		"instruction": "load.sp(+60)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151470
		, "size": 4
	}, {
		"instruction": "load.m8"
		, "name": "load.m8"
		, "code": "0x20"
		, "offs": 151474
		, "size": 1
	}, {
		"instruction": "load.sp(+60)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151475
		, "size": 4
	}, {
		"instruction": "load.m8"
		, "name": "load.m8"
		, "code": "0x20"
		, "offs": 151479
		, "size": 1
	}, {
		"instruction": "ceq.i32"
		, "name": "ceq.i32"
		, "code": "0x57"
		, "offs": 151480
		, "size": 1
	}, {
		"instruction": "load.sp(+64)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151481
		, "size": 4
	}, {
		"instruction": "load.m8"
		, "name": "load.m8"
		, "code": "0x20"
		, "offs": 151485
		, "size": 1
	}, {
		"instruction": "load.sp(+64)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151486
		, "size": 4
	}, {
		"instruction": "load.m8"
		, "name": "load.m8"
		, "code": "0x20"
		, "offs": 151490
		, "size": 1
	}, {
		"instruction": "ceq.i32"
		, "name": "ceq.i32"
		, "code": "0x57"
		, "offs": 151491
		, "size": 1
	}, {
		"instruction": "not.b32"
		, "name": "not.b32"
		, "code": "0x0a"
		, "offs": 151492
		, "size": 1
	}, {
		"instruction": "load.sp(+68)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151493
		, "size": 4
	}, {
		"instruction": "load.m8"
		, "name": "load.m8"
		, "code": "0x20"
		, "offs": 151497
		, "size": 1
	}, {
		"instruction": "load.sp(+68)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151498
		, "size": 4
	}, {
		"instruction": "load.m8"
		, "name": "load.m8"
		, "code": "0x20"
		, "offs": 151502
		, "size": 1
	}, {
		"instruction": "clt.u32"
		, "name": "clt.u32"
		, "code": "0x38"
		, "offs": 151503
		, "size": 1
	}, {
		"instruction": "load.sp(+72)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151504
		, "size": 4
	}, {
		"instruction": "load.m8"
		, "name": "load.m8"
		, "code": "0x20"
		, "offs": 151508
		, "size": 1
	}, {
		"instruction": "load.sp(+72)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151509
		, "size": 4
	}, {
		"instruction": "load.m8"
		, "name": "load.m8"
		, "code": "0x20"
		, "offs": 151513
		, "size": 1
	}, {
		"instruction": "cgt.u32"
		, "name": "cgt.u32"
		, "code": "0x39"
		, "offs": 151514
		, "size": 1
	}, {
		"instruction": "not.b32"
		, "name": "not.b32"
		, "code": "0x0a"
		, "offs": 151515
		, "size": 1
	}, {
		"instruction": "load.sp(+76)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151516
		, "size": 4
	}, {
		"instruction": "load.m8"
		, "name": "load.m8"
		, "code": "0x20"
		, "offs": 151520
		, "size": 1
	}, {
		"instruction": "load.sp(+76)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151521
		, "size": 4
	}, {
		"instruction": "load.m8"
		, "name": "load.m8"
		, "code": "0x20"
		, "offs": 151525
		, "size": 1
	}, {
		"instruction": "cgt.u32"
		, "name": "cgt.u32"
		, "code": "0x39"
		, "offs": 151526
		, "size": 1
	}, {
		"instruction": "load.sp(+80)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151527
		, "size": 4
	}, {
		"instruction": "load.m8"
		, "name": "load.m8"
		, "code": "0x20"
		, "offs": 151531
		, "size": 1
	}, {
		"instruction": "load.sp(+80)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151532
		, "size": 4
	}, {
		"instruction": "load.m8"
		, "name": "load.m8"
		, "code": "0x20"
		, "offs": 151536
		, "size": 1
	}, {
		"instruction": "clt.u32"
		, "name": "clt.u32"
		, "code": "0x38"
		, "offs": 151537
		, "size": 1
	}, {
		"instruction": "not.b32"
		, "name": "not.b32"
		, "code": "0x0a"
		, "offs": 151538
		, "size": 1
	}, {
		"instruction": "load.c32 96"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 151539
		, "size": 5
	}, {
		"instruction": "load.c32 42"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 151544
		, "size": 5
	}, {
		"instruction": "load.sp(+0)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151549
		, "size": 4
	}, {
		"instruction": "load.m8"
		, "name": "load.m8"
		, "code": "0x20"
		, "offs": 151553
		, "size": 1
	}, {
		"instruction": "nop"
		, "name": "nop"
		, "code": "0x00"
		, "offs": 151554
		, "size": 1
	}, {
		"instruction": "load.sp(+4)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151555
		, "size": 4
	}, {
		"instruction": "load.m8"
		, "name": "load.m8"
		, "code": "0x20"
		, "offs": 151559
		, "size": 1
	}, {
		"instruction": "neg.i32"
		, "name": "neg.i32"
		, "code": "0x50"
		, "offs": 151560
		, "size": 1
	}, {
		"instruction": "load.sp(+8)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151561
		, "size": 4
	}, {
		"instruction": "load.m8"
		, "name": "load.m8"
		, "code": "0x20"
		, "offs": 151565
		, "size": 1
	}, {
		"instruction": "cmt.b32"
		, "name": "cmt.b32"
		, "code": "0x30"
		, "offs": 151566
		, "size": 1
	}, {
		"instruction": "load.sp(+16)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151567
		, "size": 4
	}, {
		"instruction": "load.m8"
		, "name": "load.m8"
		, "code": "0x20"
		, "offs": 151571
		, "size": 1
	}, {
		"instruction": "load.sp(+16)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151572
		, "size": 4
	}, {
		"instruction": "load.m8"
		, "name": "load.m8"
		, "code": "0x20"
		, "offs": 151576
		, "size": 1
	}, {
		"instruction": "add.i32"
		, "name": "add.i32"
		, "code": "0x51"
		, "offs": 151577
		, "size": 1
	}, {
		"instruction": "load.sp(+20)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151578
		, "size": 4
	}, {
		"instruction": "load.m8"
		, "name": "load.m8"
		, "code": "0x20"
		, "offs": 151582
		, "size": 1
	}, {
		"instruction": "load.sp(+20)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151583
		, "size": 4
	}, {
		"instruction": "load.m8"
		, "name": "load.m8"
		, "code": "0x20"
		, "offs": 151587
		, "size": 1
	}, {
		"instruction": "sub.i32"
		, "name": "sub.i32"
		, "code": "0x52"
		, "offs": 151588
		, "size": 1
	}, {
		"instruction": "load.sp(+24)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151589
		, "size": 4
	}, {
		"instruction": "load.m8"
		, "name": "load.m8"
		, "code": "0x20"
		, "offs": 151593
		, "size": 1
	}, {
		"instruction": "load.sp(+24)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151594
		, "size": 4
	}, {
		"instruction": "load.m8"
		, "name": "load.m8"
		, "code": "0x20"
		, "offs": 151598
		, "size": 1
	}, {
		"instruction": "mul.i32"
		, "name": "mul.i32"
		, "code": "0x53"
		, "offs": 151599
		, "size": 1
	}, {
		"instruction": "load.sp(+28)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151600
		, "size": 4
	}, {
		"instruction": "load.m8"
		, "name": "load.m8"
		, "code": "0x20"
		, "offs": 151604
		, "size": 1
	}, {
		"instruction": "load.sp(+28)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151605
		, "size": 4
	}, {
		"instruction": "load.m8"
		, "name": "load.m8"
		, "code": "0x20"
		, "offs": 151609
		, "size": 1
	}, {
		"instruction": "div.i32"
		, "name": "div.i32"
		, "code": "0x54"
		, "offs": 151610
		, "size": 1
	}, {
		"instruction": "load.sp(+32)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151611
		, "size": 4
	}, {
		"instruction": "load.m8"
		, "name": "load.m8"
		, "code": "0x20"
		, "offs": 151615
		, "size": 1
	}, {
		"instruction": "load.sp(+32)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151616
		, "size": 4
	}, {
		"instruction": "load.m8"
		, "name": "load.m8"
		, "code": "0x20"
		, "offs": 151620
		, "size": 1
	}, {
		"instruction": "mod.i32"
		, "name": "mod.i32"
		, "code": "0x55"
		, "offs": 151621
		, "size": 1
	}, {
		"instruction": "load.sp(+36)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151622
		, "size": 4
	}, {
		"instruction": "load.m8"
		, "name": "load.m8"
		, "code": "0x20"
		, "offs": 151626
		, "size": 1
	}, {
		"instruction": "load.sp(+36)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151627
		, "size": 4
	}, {
		"instruction": "load.m8"
		, "name": "load.m8"
		, "code": "0x20"
		, "offs": 151631
		, "size": 1
	}, {
		"instruction": "and.b32"
		, "name": "and.b32"
		, "code": "0x31"
		, "offs": 151632
		, "size": 1
	}, {
		"instruction": "load.sp(+40)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151633
		, "size": 4
	}, {
		"instruction": "load.m8"
		, "name": "load.m8"
		, "code": "0x20"
		, "offs": 151637
		, "size": 1
	}, {
		"instruction": "load.sp(+40)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151638
		, "size": 4
	}, {
		"instruction": "load.m8"
		, "name": "load.m8"
		, "code": "0x20"
		, "offs": 151642
		, "size": 1
	}, {
		"instruction": "or.b32"
		, "name": "or.b32"
		, "code": "0x32"
		, "offs": 151643
		, "size": 1
	}, {
		"instruction": "load.sp(+44)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151644
		, "size": 4
	}, {
		"instruction": "load.m8"
		, "name": "load.m8"
		, "code": "0x20"
		, "offs": 151648
		, "size": 1
	}, {
		"instruction": "load.sp(+44)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151649
		, "size": 4
	}, {
		"instruction": "load.m8"
		, "name": "load.m8"
		, "code": "0x20"
		, "offs": 151653
		, "size": 1
	}, {
		"instruction": "xor.b32"
		, "name": "xor.b32"
		, "code": "0x36"
		, "offs": 151654
		, "size": 1
	}, {
		"instruction": "load.sp(+48)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151655
		, "size": 4
	}, {
		"instruction": "load.m8"
		, "name": "load.m8"
		, "code": "0x20"
		, "offs": 151659
		, "size": 1
	}, {
		"instruction": "dup.x1 sp(48)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 151660
		, "size": 2
	}, {
		"instruction": "shl.b32"
		, "name": "shl.b32"
		, "code": "0x3a"
		, "offs": 151662
		, "size": 1
	}, {
		"instruction": "load.sp(+52)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151663
		, "size": 4
	}, {
		"instruction": "load.m8"
		, "name": "load.m8"
		, "code": "0x20"
		, "offs": 151667
		, "size": 1
	}, {
		"instruction": "dup.x1 sp(49)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 151668
		, "size": 2
	}, {
		"instruction": "sar.b32"
		, "name": "sar.b32"
		, "code": "0x3c"
		, "offs": 151670
		, "size": 1
	}, {
		"instruction": "load.sp(+52)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151671
		, "size": 4
	}, {
		"instruction": "load.m8"
		, "name": "load.m8"
		, "code": "0x20"
		, "offs": 151675
		, "size": 1
	}, {
		"instruction": "i32.2bool"
		, "name": "i32.2bool"
		, "code": "0x5a"
		, "offs": 151676
		, "size": 1
	}, {
		"instruction": "not.b32"
		, "name": "not.b32"
		, "code": "0x0a"
		, "offs": 151677
		, "size": 1
	}, {
		"instruction": "load.sp(+60)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151678
		, "size": 4
	}, {
		"instruction": "load.m8"
		, "name": "load.m8"
		, "code": "0x20"
		, "offs": 151682
		, "size": 1
	}, {
		"instruction": "load.sp(+60)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151683
		, "size": 4
	}, {
		"instruction": "load.m8"
		, "name": "load.m8"
		, "code": "0x20"
		, "offs": 151687
		, "size": 1
	}, {
		"instruction": "ceq.i32"
		, "name": "ceq.i32"
		, "code": "0x57"
		, "offs": 151688
		, "size": 1
	}, {
		"instruction": "load.sp(+64)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151689
		, "size": 4
	}, {
		"instruction": "load.m8"
		, "name": "load.m8"
		, "code": "0x20"
		, "offs": 151693
		, "size": 1
	}, {
		"instruction": "load.sp(+64)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151694
		, "size": 4
	}, {
		"instruction": "load.m8"
		, "name": "load.m8"
		, "code": "0x20"
		, "offs": 151698
		, "size": 1
	}, {
		"instruction": "ceq.i32"
		, "name": "ceq.i32"
		, "code": "0x57"
		, "offs": 151699
		, "size": 1
	}, {
		"instruction": "not.b32"
		, "name": "not.b32"
		, "code": "0x0a"
		, "offs": 151700
		, "size": 1
	}, {
		"instruction": "load.sp(+68)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151701
		, "size": 4
	}, {
		"instruction": "load.m8"
		, "name": "load.m8"
		, "code": "0x20"
		, "offs": 151705
		, "size": 1
	}, {
		"instruction": "load.sp(+68)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151706
		, "size": 4
	}, {
		"instruction": "load.m8"
		, "name": "load.m8"
		, "code": "0x20"
		, "offs": 151710
		, "size": 1
	}, {
		"instruction": "clt.i32"
		, "name": "clt.i32"
		, "code": "0x58"
		, "offs": 151711
		, "size": 1
	}, {
		"instruction": "load.sp(+72)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151712
		, "size": 4
	}, {
		"instruction": "load.m8"
		, "name": "load.m8"
		, "code": "0x20"
		, "offs": 151716
		, "size": 1
	}, {
		"instruction": "load.sp(+72)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151717
		, "size": 4
	}, {
		"instruction": "load.m8"
		, "name": "load.m8"
		, "code": "0x20"
		, "offs": 151721
		, "size": 1
	}, {
		"instruction": "cgt.i32"
		, "name": "cgt.i32"
		, "code": "0x59"
		, "offs": 151722
		, "size": 1
	}, {
		"instruction": "not.b32"
		, "name": "not.b32"
		, "code": "0x0a"
		, "offs": 151723
		, "size": 1
	}, {
		"instruction": "load.sp(+76)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151724
		, "size": 4
	}, {
		"instruction": "load.m8"
		, "name": "load.m8"
		, "code": "0x20"
		, "offs": 151728
		, "size": 1
	}, {
		"instruction": "load.sp(+76)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151729
		, "size": 4
	}, {
		"instruction": "load.m8"
		, "name": "load.m8"
		, "code": "0x20"
		, "offs": 151733
		, "size": 1
	}, {
		"instruction": "cgt.i32"
		, "name": "cgt.i32"
		, "code": "0x59"
		, "offs": 151734
		, "size": 1
	}, {
		"instruction": "load.sp(+80)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151735
		, "size": 4
	}, {
		"instruction": "load.m8"
		, "name": "load.m8"
		, "code": "0x20"
		, "offs": 151739
		, "size": 1
	}, {
		"instruction": "load.sp(+80)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151740
		, "size": 4
	}, {
		"instruction": "load.m8"
		, "name": "load.m8"
		, "code": "0x20"
		, "offs": 151744
		, "size": 1
	}, {
		"instruction": "clt.i32"
		, "name": "clt.i32"
		, "code": "0x58"
		, "offs": 151745
		, "size": 1
	}, {
		"instruction": "not.b32"
		, "name": "not.b32"
		, "code": "0x0a"
		, "offs": 151746
		, "size": 1
	}, {
		"instruction": "load.c32 96"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 151747
		, "size": 5
	}, {
		"instruction": "load.c32 42"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 151752
		, "size": 5
	}, {
		"instruction": "load.sp(+0)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151757
		, "size": 4
	}, {
		"instruction": "load.m8"
		, "name": "load.m8"
		, "code": "0x20"
		, "offs": 151761
		, "size": 1
	}, {
		"instruction": "nop"
		, "name": "nop"
		, "code": "0x00"
		, "offs": 151762
		, "size": 1
	}, {
		"instruction": "load.sp(+4)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151763
		, "size": 4
	}, {
		"instruction": "load.m8"
		, "name": "load.m8"
		, "code": "0x20"
		, "offs": 151767
		, "size": 1
	}, {
		"instruction": "neg.i32"
		, "name": "neg.i32"
		, "code": "0x50"
		, "offs": 151768
		, "size": 1
	}, {
		"instruction": "load.sp(+8)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151769
		, "size": 4
	}, {
		"instruction": "load.m8"
		, "name": "load.m8"
		, "code": "0x20"
		, "offs": 151773
		, "size": 1
	}, {
		"instruction": "cmt.b32"
		, "name": "cmt.b32"
		, "code": "0x30"
		, "offs": 151774
		, "size": 1
	}, {
		"instruction": "load.sp(+16)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151775
		, "size": 4
	}, {
		"instruction": "load.m8"
		, "name": "load.m8"
		, "code": "0x20"
		, "offs": 151779
		, "size": 1
	}, {
		"instruction": "load.sp(+16)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151780
		, "size": 4
	}, {
		"instruction": "load.m8"
		, "name": "load.m8"
		, "code": "0x20"
		, "offs": 151784
		, "size": 1
	}, {
		"instruction": "add.i32"
		, "name": "add.i32"
		, "code": "0x51"
		, "offs": 151785
		, "size": 1
	}, {
		"instruction": "load.sp(+20)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151786
		, "size": 4
	}, {
		"instruction": "load.m8"
		, "name": "load.m8"
		, "code": "0x20"
		, "offs": 151790
		, "size": 1
	}, {
		"instruction": "load.sp(+20)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151791
		, "size": 4
	}, {
		"instruction": "load.m8"
		, "name": "load.m8"
		, "code": "0x20"
		, "offs": 151795
		, "size": 1
	}, {
		"instruction": "sub.i32"
		, "name": "sub.i32"
		, "code": "0x52"
		, "offs": 151796
		, "size": 1
	}, {
		"instruction": "load.sp(+24)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151797
		, "size": 4
	}, {
		"instruction": "load.m8"
		, "name": "load.m8"
		, "code": "0x20"
		, "offs": 151801
		, "size": 1
	}, {
		"instruction": "load.sp(+24)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151802
		, "size": 4
	}, {
		"instruction": "load.m8"
		, "name": "load.m8"
		, "code": "0x20"
		, "offs": 151806
		, "size": 1
	}, {
		"instruction": "mul.u32"
		, "name": "mul.u32"
		, "code": "0x33"
		, "offs": 151807
		, "size": 1
	}, {
		"instruction": "load.sp(+28)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151808
		, "size": 4
	}, {
		"instruction": "load.m8"
		, "name": "load.m8"
		, "code": "0x20"
		, "offs": 151812
		, "size": 1
	}, {
		"instruction": "load.sp(+28)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151813
		, "size": 4
	}, {
		"instruction": "load.m8"
		, "name": "load.m8"
		, "code": "0x20"
		, "offs": 151817
		, "size": 1
	}, {
		"instruction": "div.u32"
		, "name": "div.u32"
		, "code": "0x34"
		, "offs": 151818
		, "size": 1
	}, {
		"instruction": "load.sp(+32)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151819
		, "size": 4
	}, {
		"instruction": "load.m8"
		, "name": "load.m8"
		, "code": "0x20"
		, "offs": 151823
		, "size": 1
	}, {
		"instruction": "load.sp(+32)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151824
		, "size": 4
	}, {
		"instruction": "load.m8"
		, "name": "load.m8"
		, "code": "0x20"
		, "offs": 151828
		, "size": 1
	}, {
		"instruction": "mod.u32"
		, "name": "mod.u32"
		, "code": "0x35"
		, "offs": 151829
		, "size": 1
	}, {
		"instruction": "load.sp(+36)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151830
		, "size": 4
	}, {
		"instruction": "load.m8"
		, "name": "load.m8"
		, "code": "0x20"
		, "offs": 151834
		, "size": 1
	}, {
		"instruction": "load.sp(+36)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151835
		, "size": 4
	}, {
		"instruction": "load.m8"
		, "name": "load.m8"
		, "code": "0x20"
		, "offs": 151839
		, "size": 1
	}, {
		"instruction": "and.b32"
		, "name": "and.b32"
		, "code": "0x31"
		, "offs": 151840
		, "size": 1
	}, {
		"instruction": "load.sp(+40)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151841
		, "size": 4
	}, {
		"instruction": "load.m8"
		, "name": "load.m8"
		, "code": "0x20"
		, "offs": 151845
		, "size": 1
	}, {
		"instruction": "load.sp(+40)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151846
		, "size": 4
	}, {
		"instruction": "load.m8"
		, "name": "load.m8"
		, "code": "0x20"
		, "offs": 151850
		, "size": 1
	}, {
		"instruction": "or.b32"
		, "name": "or.b32"
		, "code": "0x32"
		, "offs": 151851
		, "size": 1
	}, {
		"instruction": "load.sp(+44)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151852
		, "size": 4
	}, {
		"instruction": "load.m8"
		, "name": "load.m8"
		, "code": "0x20"
		, "offs": 151856
		, "size": 1
	}, {
		"instruction": "load.sp(+44)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151857
		, "size": 4
	}, {
		"instruction": "load.m8"
		, "name": "load.m8"
		, "code": "0x20"
		, "offs": 151861
		, "size": 1
	}, {
		"instruction": "xor.b32"
		, "name": "xor.b32"
		, "code": "0x36"
		, "offs": 151862
		, "size": 1
	}, {
		"instruction": "load.sp(+48)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151863
		, "size": 4
	}, {
		"instruction": "load.m8"
		, "name": "load.m8"
		, "code": "0x20"
		, "offs": 151867
		, "size": 1
	}, {
		"instruction": "dup.x1 sp(70)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 151868
		, "size": 2
	}, {
		"instruction": "shl.b32"
		, "name": "shl.b32"
		, "code": "0x3a"
		, "offs": 151870
		, "size": 1
	}, {
		"instruction": "load.sp(+52)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151871
		, "size": 4
	}, {
		"instruction": "load.m8"
		, "name": "load.m8"
		, "code": "0x20"
		, "offs": 151875
		, "size": 1
	}, {
		"instruction": "dup.x1 sp(71)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 151876
		, "size": 2
	}, {
		"instruction": "sar.b32"
		, "name": "sar.b32"
		, "code": "0x3c"
		, "offs": 151878
		, "size": 1
	}, {
		"instruction": "load.sp(+52)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151879
		, "size": 4
	}, {
		"instruction": "load.m8"
		, "name": "load.m8"
		, "code": "0x20"
		, "offs": 151883
		, "size": 1
	}, {
		"instruction": "i32.2bool"
		, "name": "i32.2bool"
		, "code": "0x5a"
		, "offs": 151884
		, "size": 1
	}, {
		"instruction": "not.b32"
		, "name": "not.b32"
		, "code": "0x0a"
		, "offs": 151885
		, "size": 1
	}, {
		"instruction": "load.sp(+60)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151886
		, "size": 4
	}, {
		"instruction": "load.m8"
		, "name": "load.m8"
		, "code": "0x20"
		, "offs": 151890
		, "size": 1
	}, {
		"instruction": "load.sp(+60)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151891
		, "size": 4
	}, {
		"instruction": "load.m8"
		, "name": "load.m8"
		, "code": "0x20"
		, "offs": 151895
		, "size": 1
	}, {
		"instruction": "ceq.i32"
		, "name": "ceq.i32"
		, "code": "0x57"
		, "offs": 151896
		, "size": 1
	}, {
		"instruction": "load.sp(+64)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151897
		, "size": 4
	}, {
		"instruction": "load.m8"
		, "name": "load.m8"
		, "code": "0x20"
		, "offs": 151901
		, "size": 1
	}, {
		"instruction": "load.sp(+64)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151902
		, "size": 4
	}, {
		"instruction": "load.m8"
		, "name": "load.m8"
		, "code": "0x20"
		, "offs": 151906
		, "size": 1
	}, {
		"instruction": "ceq.i32"
		, "name": "ceq.i32"
		, "code": "0x57"
		, "offs": 151907
		, "size": 1
	}, {
		"instruction": "not.b32"
		, "name": "not.b32"
		, "code": "0x0a"
		, "offs": 151908
		, "size": 1
	}, {
		"instruction": "load.sp(+68)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151909
		, "size": 4
	}, {
		"instruction": "load.m8"
		, "name": "load.m8"
		, "code": "0x20"
		, "offs": 151913
		, "size": 1
	}, {
		"instruction": "load.sp(+68)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151914
		, "size": 4
	}, {
		"instruction": "load.m8"
		, "name": "load.m8"
		, "code": "0x20"
		, "offs": 151918
		, "size": 1
	}, {
		"instruction": "clt.u32"
		, "name": "clt.u32"
		, "code": "0x38"
		, "offs": 151919
		, "size": 1
	}, {
		"instruction": "load.sp(+72)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151920
		, "size": 4
	}, {
		"instruction": "load.m8"
		, "name": "load.m8"
		, "code": "0x20"
		, "offs": 151924
		, "size": 1
	}, {
		"instruction": "load.sp(+72)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151925
		, "size": 4
	}, {
		"instruction": "load.m8"
		, "name": "load.m8"
		, "code": "0x20"
		, "offs": 151929
		, "size": 1
	}, {
		"instruction": "cgt.u32"
		, "name": "cgt.u32"
		, "code": "0x39"
		, "offs": 151930
		, "size": 1
	}, {
		"instruction": "not.b32"
		, "name": "not.b32"
		, "code": "0x0a"
		, "offs": 151931
		, "size": 1
	}, {
		"instruction": "load.sp(+76)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151932
		, "size": 4
	}, {
		"instruction": "load.m8"
		, "name": "load.m8"
		, "code": "0x20"
		, "offs": 151936
		, "size": 1
	}, {
		"instruction": "load.sp(+76)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151937
		, "size": 4
	}, {
		"instruction": "load.m8"
		, "name": "load.m8"
		, "code": "0x20"
		, "offs": 151941
		, "size": 1
	}, {
		"instruction": "cgt.u32"
		, "name": "cgt.u32"
		, "code": "0x39"
		, "offs": 151942
		, "size": 1
	}, {
		"instruction": "load.sp(+80)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151943
		, "size": 4
	}, {
		"instruction": "load.m8"
		, "name": "load.m8"
		, "code": "0x20"
		, "offs": 151947
		, "size": 1
	}, {
		"instruction": "load.sp(+80)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151948
		, "size": 4
	}, {
		"instruction": "load.m8"
		, "name": "load.m8"
		, "code": "0x20"
		, "offs": 151952
		, "size": 1
	}, {
		"instruction": "clt.u32"
		, "name": "clt.u32"
		, "code": "0x38"
		, "offs": 151953
		, "size": 1
	}, {
		"instruction": "not.b32"
		, "name": "not.b32"
		, "code": "0x0a"
		, "offs": 151954
		, "size": 1
	}, {
		"instruction": "load.c32 96"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 151955
		, "size": 5
	}, {
		"instruction": "load.c32 42"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 151960
		, "size": 5
	}, {
		"instruction": "load.sp(+0)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151965
		, "size": 4
	}, {
		"instruction": "load.m16"
		, "name": "load.m16"
		, "code": "0x21"
		, "offs": 151969
		, "size": 1
	}, {
		"instruction": "nop"
		, "name": "nop"
		, "code": "0x00"
		, "offs": 151970
		, "size": 1
	}, {
		"instruction": "load.sp(+4)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151971
		, "size": 4
	}, {
		"instruction": "load.m16"
		, "name": "load.m16"
		, "code": "0x21"
		, "offs": 151975
		, "size": 1
	}, {
		"instruction": "neg.i32"
		, "name": "neg.i32"
		, "code": "0x50"
		, "offs": 151976
		, "size": 1
	}, {
		"instruction": "load.sp(+8)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151977
		, "size": 4
	}, {
		"instruction": "load.m16"
		, "name": "load.m16"
		, "code": "0x21"
		, "offs": 151981
		, "size": 1
	}, {
		"instruction": "cmt.b32"
		, "name": "cmt.b32"
		, "code": "0x30"
		, "offs": 151982
		, "size": 1
	}, {
		"instruction": "load.sp(+16)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151983
		, "size": 4
	}, {
		"instruction": "load.m16"
		, "name": "load.m16"
		, "code": "0x21"
		, "offs": 151987
		, "size": 1
	}, {
		"instruction": "load.sp(+16)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151988
		, "size": 4
	}, {
		"instruction": "load.m16"
		, "name": "load.m16"
		, "code": "0x21"
		, "offs": 151992
		, "size": 1
	}, {
		"instruction": "add.i32"
		, "name": "add.i32"
		, "code": "0x51"
		, "offs": 151993
		, "size": 1
	}, {
		"instruction": "load.sp(+20)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151994
		, "size": 4
	}, {
		"instruction": "load.m16"
		, "name": "load.m16"
		, "code": "0x21"
		, "offs": 151998
		, "size": 1
	}, {
		"instruction": "load.sp(+20)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 151999
		, "size": 4
	}, {
		"instruction": "load.m16"
		, "name": "load.m16"
		, "code": "0x21"
		, "offs": 152003
		, "size": 1
	}, {
		"instruction": "sub.i32"
		, "name": "sub.i32"
		, "code": "0x52"
		, "offs": 152004
		, "size": 1
	}, {
		"instruction": "load.sp(+24)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 152005
		, "size": 4
	}, {
		"instruction": "load.m16"
		, "name": "load.m16"
		, "code": "0x21"
		, "offs": 152009
		, "size": 1
	}, {
		"instruction": "load.sp(+24)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 152010
		, "size": 4
	}, {
		"instruction": "load.m16"
		, "name": "load.m16"
		, "code": "0x21"
		, "offs": 152014
		, "size": 1
	}, {
		"instruction": "mul.i32"
		, "name": "mul.i32"
		, "code": "0x53"
		, "offs": 152015
		, "size": 1
	}, {
		"instruction": "load.sp(+28)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 152016
		, "size": 4
	}, {
		"instruction": "load.m16"
		, "name": "load.m16"
		, "code": "0x21"
		, "offs": 152020
		, "size": 1
	}, {
		"instruction": "load.sp(+28)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 152021
		, "size": 4
	}, {
		"instruction": "load.m16"
		, "name": "load.m16"
		, "code": "0x21"
		, "offs": 152025
		, "size": 1
	}, {
		"instruction": "div.i32"
		, "name": "div.i32"
		, "code": "0x54"
		, "offs": 152026
		, "size": 1
	}, {
		"instruction": "load.sp(+32)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 152027
		, "size": 4
	}, {
		"instruction": "load.m16"
		, "name": "load.m16"
		, "code": "0x21"
		, "offs": 152031
		, "size": 1
	}, {
		"instruction": "load.sp(+32)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 152032
		, "size": 4
	}, {
		"instruction": "load.m16"
		, "name": "load.m16"
		, "code": "0x21"
		, "offs": 152036
		, "size": 1
	}, {
		"instruction": "mod.i32"
		, "name": "mod.i32"
		, "code": "0x55"
		, "offs": 152037
		, "size": 1
	}, {
		"instruction": "load.sp(+36)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 152038
		, "size": 4
	}, {
		"instruction": "load.m16"
		, "name": "load.m16"
		, "code": "0x21"
		, "offs": 152042
		, "size": 1
	}, {
		"instruction": "load.sp(+36)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 152043
		, "size": 4
	}, {
		"instruction": "load.m16"
		, "name": "load.m16"
		, "code": "0x21"
		, "offs": 152047
		, "size": 1
	}, {
		"instruction": "and.b32"
		, "name": "and.b32"
		, "code": "0x31"
		, "offs": 152048
		, "size": 1
	}, {
		"instruction": "load.sp(+40)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 152049
		, "size": 4
	}, {
		"instruction": "load.m16"
		, "name": "load.m16"
		, "code": "0x21"
		, "offs": 152053
		, "size": 1
	}, {
		"instruction": "load.sp(+40)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 152054
		, "size": 4
	}, {
		"instruction": "load.m16"
		, "name": "load.m16"
		, "code": "0x21"
		, "offs": 152058
		, "size": 1
	}, {
		"instruction": "or.b32"
		, "name": "or.b32"
		, "code": "0x32"
		, "offs": 152059
		, "size": 1
	}, {
		"instruction": "load.sp(+44)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 152060
		, "size": 4
	}, {
		"instruction": "load.m16"
		, "name": "load.m16"
		, "code": "0x21"
		, "offs": 152064
		, "size": 1
	}, {
		"instruction": "load.sp(+44)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 152065
		, "size": 4
	}, {
		"instruction": "load.m16"
		, "name": "load.m16"
		, "code": "0x21"
		, "offs": 152069
		, "size": 1
	}, {
		"instruction": "xor.b32"
		, "name": "xor.b32"
		, "code": "0x36"
		, "offs": 152070
		, "size": 1
	}, {
		"instruction": "load.sp(+48)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 152071
		, "size": 4
	}, {
		"instruction": "load.m16"
		, "name": "load.m16"
		, "code": "0x21"
		, "offs": 152075
		, "size": 1
	}, {
		"instruction": "dup.x1 sp(92)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 152076
		, "size": 2
	}, {
		"instruction": "shl.b32"
		, "name": "shl.b32"
		, "code": "0x3a"
		, "offs": 152078
		, "size": 1
	}, {
		"instruction": "load.sp(+52)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 152079
		, "size": 4
	}, {
		"instruction": "load.m16"
		, "name": "load.m16"
		, "code": "0x21"
		, "offs": 152083
		, "size": 1
	}, {
		"instruction": "dup.x1 sp(93)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 152084
		, "size": 2
	}, {
		"instruction": "sar.b32"
		, "name": "sar.b32"
		, "code": "0x3c"
		, "offs": 152086
		, "size": 1
	}, {
		"instruction": "load.sp(+52)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 152087
		, "size": 4
	}, {
		"instruction": "load.m16"
		, "name": "load.m16"
		, "code": "0x21"
		, "offs": 152091
		, "size": 1
	}, {
		"instruction": "i32.2bool"
		, "name": "i32.2bool"
		, "code": "0x5a"
		, "offs": 152092
		, "size": 1
	}, {
		"instruction": "not.b32"
		, "name": "not.b32"
		, "code": "0x0a"
		, "offs": 152093
		, "size": 1
	}, {
		"instruction": "load.sp(+60)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 152094
		, "size": 4
	}, {
		"instruction": "load.m16"
		, "name": "load.m16"
		, "code": "0x21"
		, "offs": 152098
		, "size": 1
	}, {
		"instruction": "load.sp(+60)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 152099
		, "size": 4
	}, {
		"instruction": "load.m16"
		, "name": "load.m16"
		, "code": "0x21"
		, "offs": 152103
		, "size": 1
	}, {
		"instruction": "ceq.i32"
		, "name": "ceq.i32"
		, "code": "0x57"
		, "offs": 152104
		, "size": 1
	}, {
		"instruction": "load.sp(+64)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 152105
		, "size": 4
	}, {
		"instruction": "load.m16"
		, "name": "load.m16"
		, "code": "0x21"
		, "offs": 152109
		, "size": 1
	}, {
		"instruction": "load.sp(+64)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 152110
		, "size": 4
	}, {
		"instruction": "load.m16"
		, "name": "load.m16"
		, "code": "0x21"
		, "offs": 152114
		, "size": 1
	}, {
		"instruction": "ceq.i32"
		, "name": "ceq.i32"
		, "code": "0x57"
		, "offs": 152115
		, "size": 1
	}, {
		"instruction": "not.b32"
		, "name": "not.b32"
		, "code": "0x0a"
		, "offs": 152116
		, "size": 1
	}, {
		"instruction": "load.sp(+68)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 152117
		, "size": 4
	}, {
		"instruction": "load.m16"
		, "name": "load.m16"
		, "code": "0x21"
		, "offs": 152121
		, "size": 1
	}, {
		"instruction": "load.sp(+68)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 152122
		, "size": 4
	}, {
		"instruction": "load.m16"
		, "name": "load.m16"
		, "code": "0x21"
		, "offs": 152126
		, "size": 1
	}, {
		"instruction": "clt.i32"
		, "name": "clt.i32"
		, "code": "0x58"
		, "offs": 152127
		, "size": 1
	}, {
		"instruction": "load.sp(+72)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 152128
		, "size": 4
	}, {
		"instruction": "load.m16"
		, "name": "load.m16"
		, "code": "0x21"
		, "offs": 152132
		, "size": 1
	}, {
		"instruction": "load.sp(+72)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 152133
		, "size": 4
	}, {
		"instruction": "load.m16"
		, "name": "load.m16"
		, "code": "0x21"
		, "offs": 152137
		, "size": 1
	}, {
		"instruction": "cgt.i32"
		, "name": "cgt.i32"
		, "code": "0x59"
		, "offs": 152138
		, "size": 1
	}, {
		"instruction": "not.b32"
		, "name": "not.b32"
		, "code": "0x0a"
		, "offs": 152139
		, "size": 1
	}, {
		"instruction": "load.sp(+76)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 152140
		, "size": 4
	}, {
		"instruction": "load.m16"
		, "name": "load.m16"
		, "code": "0x21"
		, "offs": 152144
		, "size": 1
	}, {
		"instruction": "load.sp(+76)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 152145
		, "size": 4
	}, {
		"instruction": "load.m16"
		, "name": "load.m16"
		, "code": "0x21"
		, "offs": 152149
		, "size": 1
	}, {
		"instruction": "cgt.i32"
		, "name": "cgt.i32"
		, "code": "0x59"
		, "offs": 152150
		, "size": 1
	}, {
		"instruction": "load.sp(+80)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 152151
		, "size": 4
	}, {
		"instruction": "load.m16"
		, "name": "load.m16"
		, "code": "0x21"
		, "offs": 152155
		, "size": 1
	}, {
		"instruction": "load.sp(+80)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 152156
		, "size": 4
	}, {
		"instruction": "load.m16"
		, "name": "load.m16"
		, "code": "0x21"
		, "offs": 152160
		, "size": 1
	}, {
		"instruction": "clt.i32"
		, "name": "clt.i32"
		, "code": "0x58"
		, "offs": 152161
		, "size": 1
	}, {
		"instruction": "not.b32"
		, "name": "not.b32"
		, "code": "0x0a"
		, "offs": 152162
		, "size": 1
	}, {
		"instruction": "load.c32 96"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 152163
		, "size": 5
	}, {
		"instruction": "load.c32 42"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 152168
		, "size": 5
	}, {
		"instruction": "load.sp(+0)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 152173
		, "size": 4
	}, {
		"instruction": "load.m16"
		, "name": "load.m16"
		, "code": "0x21"
		, "offs": 152177
		, "size": 1
	}, {
		"instruction": "nop"
		, "name": "nop"
		, "code": "0x00"
		, "offs": 152178
		, "size": 1
	}, {
		"instruction": "load.sp(+4)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 152179
		, "size": 4
	}, {
		"instruction": "load.m16"
		, "name": "load.m16"
		, "code": "0x21"
		, "offs": 152183
		, "size": 1
	}, {
		"instruction": "neg.i32"
		, "name": "neg.i32"
		, "code": "0x50"
		, "offs": 152184
		, "size": 1
	}, {
		"instruction": "load.sp(+8)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 152185
		, "size": 4
	}, {
		"instruction": "load.m16"
		, "name": "load.m16"
		, "code": "0x21"
		, "offs": 152189
		, "size": 1
	}, {
		"instruction": "cmt.b32"
		, "name": "cmt.b32"
		, "code": "0x30"
		, "offs": 152190
		, "size": 1
	}, {
		"instruction": "load.sp(+16)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 152191
		, "size": 4
	}, {
		"instruction": "load.m16"
		, "name": "load.m16"
		, "code": "0x21"
		, "offs": 152195
		, "size": 1
	}, {
		"instruction": "load.sp(+16)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 152196
		, "size": 4
	}, {
		"instruction": "load.m16"
		, "name": "load.m16"
		, "code": "0x21"
		, "offs": 152200
		, "size": 1
	}, {
		"instruction": "add.i32"
		, "name": "add.i32"
		, "code": "0x51"
		, "offs": 152201
		, "size": 1
	}, {
		"instruction": "load.sp(+20)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 152202
		, "size": 4
	}, {
		"instruction": "load.m16"
		, "name": "load.m16"
		, "code": "0x21"
		, "offs": 152206
		, "size": 1
	}, {
		"instruction": "load.sp(+20)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 152207
		, "size": 4
	}, {
		"instruction": "load.m16"
		, "name": "load.m16"
		, "code": "0x21"
		, "offs": 152211
		, "size": 1
	}, {
		"instruction": "sub.i32"
		, "name": "sub.i32"
		, "code": "0x52"
		, "offs": 152212
		, "size": 1
	}, {
		"instruction": "load.sp(+24)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 152213
		, "size": 4
	}, {
		"instruction": "load.m16"
		, "name": "load.m16"
		, "code": "0x21"
		, "offs": 152217
		, "size": 1
	}, {
		"instruction": "load.sp(+24)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 152218
		, "size": 4
	}, {
		"instruction": "load.m16"
		, "name": "load.m16"
		, "code": "0x21"
		, "offs": 152222
		, "size": 1
	}, {
		"instruction": "mul.u32"
		, "name": "mul.u32"
		, "code": "0x33"
		, "offs": 152223
		, "size": 1
	}, {
		"instruction": "load.sp(+28)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 152224
		, "size": 4
	}, {
		"instruction": "load.m16"
		, "name": "load.m16"
		, "code": "0x21"
		, "offs": 152228
		, "size": 1
	}, {
		"instruction": "load.sp(+28)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 152229
		, "size": 4
	}, {
		"instruction": "load.m16"
		, "name": "load.m16"
		, "code": "0x21"
		, "offs": 152233
		, "size": 1
	}, {
		"instruction": "div.u32"
		, "name": "div.u32"
		, "code": "0x34"
		, "offs": 152234
		, "size": 1
	}, {
		"instruction": "load.sp(+32)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 152235
		, "size": 4
	}, {
		"instruction": "load.m16"
		, "name": "load.m16"
		, "code": "0x21"
		, "offs": 152239
		, "size": 1
	}, {
		"instruction": "load.sp(+32)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 152240
		, "size": 4
	}, {
		"instruction": "load.m16"
		, "name": "load.m16"
		, "code": "0x21"
		, "offs": 152244
		, "size": 1
	}, {
		"instruction": "mod.u32"
		, "name": "mod.u32"
		, "code": "0x35"
		, "offs": 152245
		, "size": 1
	}, {
		"instruction": "load.sp(+36)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 152246
		, "size": 4
	}, {
		"instruction": "load.m16"
		, "name": "load.m16"
		, "code": "0x21"
		, "offs": 152250
		, "size": 1
	}, {
		"instruction": "load.sp(+36)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 152251
		, "size": 4
	}, {
		"instruction": "load.m16"
		, "name": "load.m16"
		, "code": "0x21"
		, "offs": 152255
		, "size": 1
	}, {
		"instruction": "and.b32"
		, "name": "and.b32"
		, "code": "0x31"
		, "offs": 152256
		, "size": 1
	}, {
		"instruction": "load.sp(+40)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 152257
		, "size": 4
	}, {
		"instruction": "load.m16"
		, "name": "load.m16"
		, "code": "0x21"
		, "offs": 152261
		, "size": 1
	}, {
		"instruction": "load.sp(+40)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 152262
		, "size": 4
	}, {
		"instruction": "load.m16"
		, "name": "load.m16"
		, "code": "0x21"
		, "offs": 152266
		, "size": 1
	}, {
		"instruction": "or.b32"
		, "name": "or.b32"
		, "code": "0x32"
		, "offs": 152267
		, "size": 1
	}, {
		"instruction": "load.sp(+44)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 152268
		, "size": 4
	}, {
		"instruction": "load.m16"
		, "name": "load.m16"
		, "code": "0x21"
		, "offs": 152272
		, "size": 1
	}, {
		"instruction": "load.sp(+44)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 152273
		, "size": 4
	}, {
		"instruction": "load.m16"
		, "name": "load.m16"
		, "code": "0x21"
		, "offs": 152277
		, "size": 1
	}, {
		"instruction": "xor.b32"
		, "name": "xor.b32"
		, "code": "0x36"
		, "offs": 152278
		, "size": 1
	}, {
		"instruction": "load.sp(+48)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 152279
		, "size": 4
	}, {
		"instruction": "load.m16"
		, "name": "load.m16"
		, "code": "0x21"
		, "offs": 152283
		, "size": 1
	}, {
		"instruction": "dup.x1 sp(114)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 152284
		, "size": 2
	}, {
		"instruction": "shl.b32"
		, "name": "shl.b32"
		, "code": "0x3a"
		, "offs": 152286
		, "size": 1
	}, {
		"instruction": "load.sp(+52)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 152287
		, "size": 4
	}, {
		"instruction": "load.m16"
		, "name": "load.m16"
		, "code": "0x21"
		, "offs": 152291
		, "size": 1
	}, {
		"instruction": "dup.x1 sp(115)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 152292
		, "size": 2
	}, {
		"instruction": "sar.b32"
		, "name": "sar.b32"
		, "code": "0x3c"
		, "offs": 152294
		, "size": 1
	}, {
		"instruction": "load.sp(+52)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 152295
		, "size": 4
	}, {
		"instruction": "load.m16"
		, "name": "load.m16"
		, "code": "0x21"
		, "offs": 152299
		, "size": 1
	}, {
		"instruction": "i32.2bool"
		, "name": "i32.2bool"
		, "code": "0x5a"
		, "offs": 152300
		, "size": 1
	}, {
		"instruction": "not.b32"
		, "name": "not.b32"
		, "code": "0x0a"
		, "offs": 152301
		, "size": 1
	}, {
		"instruction": "load.sp(+60)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 152302
		, "size": 4
	}, {
		"instruction": "load.m16"
		, "name": "load.m16"
		, "code": "0x21"
		, "offs": 152306
		, "size": 1
	}, {
		"instruction": "load.sp(+60)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 152307
		, "size": 4
	}, {
		"instruction": "load.m16"
		, "name": "load.m16"
		, "code": "0x21"
		, "offs": 152311
		, "size": 1
	}, {
		"instruction": "ceq.i32"
		, "name": "ceq.i32"
		, "code": "0x57"
		, "offs": 152312
		, "size": 1
	}, {
		"instruction": "load.sp(+64)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 152313
		, "size": 4
	}, {
		"instruction": "load.m16"
		, "name": "load.m16"
		, "code": "0x21"
		, "offs": 152317
		, "size": 1
	}, {
		"instruction": "load.sp(+64)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 152318
		, "size": 4
	}, {
		"instruction": "load.m16"
		, "name": "load.m16"
		, "code": "0x21"
		, "offs": 152322
		, "size": 1
	}, {
		"instruction": "ceq.i32"
		, "name": "ceq.i32"
		, "code": "0x57"
		, "offs": 152323
		, "size": 1
	}, {
		"instruction": "not.b32"
		, "name": "not.b32"
		, "code": "0x0a"
		, "offs": 152324
		, "size": 1
	}, {
		"instruction": "load.sp(+68)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 152325
		, "size": 4
	}, {
		"instruction": "load.m16"
		, "name": "load.m16"
		, "code": "0x21"
		, "offs": 152329
		, "size": 1
	}, {
		"instruction": "load.sp(+68)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 152330
		, "size": 4
	}, {
		"instruction": "load.m16"
		, "name": "load.m16"
		, "code": "0x21"
		, "offs": 152334
		, "size": 1
	}, {
		"instruction": "clt.u32"
		, "name": "clt.u32"
		, "code": "0x38"
		, "offs": 152335
		, "size": 1
	}, {
		"instruction": "load.sp(+72)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 152336
		, "size": 4
	}, {
		"instruction": "load.m16"
		, "name": "load.m16"
		, "code": "0x21"
		, "offs": 152340
		, "size": 1
	}, {
		"instruction": "load.sp(+72)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 152341
		, "size": 4
	}, {
		"instruction": "load.m16"
		, "name": "load.m16"
		, "code": "0x21"
		, "offs": 152345
		, "size": 1
	}, {
		"instruction": "cgt.u32"
		, "name": "cgt.u32"
		, "code": "0x39"
		, "offs": 152346
		, "size": 1
	}, {
		"instruction": "not.b32"
		, "name": "not.b32"
		, "code": "0x0a"
		, "offs": 152347
		, "size": 1
	}, {
		"instruction": "load.sp(+76)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 152348
		, "size": 4
	}, {
		"instruction": "load.m16"
		, "name": "load.m16"
		, "code": "0x21"
		, "offs": 152352
		, "size": 1
	}, {
		"instruction": "load.sp(+76)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 152353
		, "size": 4
	}, {
		"instruction": "load.m16"
		, "name": "load.m16"
		, "code": "0x21"
		, "offs": 152357
		, "size": 1
	}, {
		"instruction": "cgt.u32"
		, "name": "cgt.u32"
		, "code": "0x39"
		, "offs": 152358
		, "size": 1
	}, {
		"instruction": "load.sp(+80)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 152359
		, "size": 4
	}, {
		"instruction": "load.m16"
		, "name": "load.m16"
		, "code": "0x21"
		, "offs": 152363
		, "size": 1
	}, {
		"instruction": "load.sp(+80)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 152364
		, "size": 4
	}, {
		"instruction": "load.m16"
		, "name": "load.m16"
		, "code": "0x21"
		, "offs": 152368
		, "size": 1
	}, {
		"instruction": "clt.u32"
		, "name": "clt.u32"
		, "code": "0x38"
		, "offs": 152369
		, "size": 1
	}, {
		"instruction": "not.b32"
		, "name": "not.b32"
		, "code": "0x0a"
		, "offs": 152370
		, "size": 1
	}, {
		"instruction": "load.c32 96"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 152371
		, "size": 5
	}, {
		"instruction": "load.c32 42"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 152376
		, "size": 5
	}, {
		"instruction": "dup.x1 sp(0)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 152381
		, "size": 2
	}, {
		"instruction": "nop"
		, "name": "nop"
		, "code": "0x00"
		, "offs": 152383
		, "size": 1
	}, {
		"instruction": "dup.x1 sp(1)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 152384
		, "size": 2
	}, {
		"instruction": "neg.i32"
		, "name": "neg.i32"
		, "code": "0x50"
		, "offs": 152386
		, "size": 1
	}, {
		"instruction": "dup.x1 sp(2)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 152387
		, "size": 2
	}, {
		"instruction": "cmt.b32"
		, "name": "cmt.b32"
		, "code": "0x30"
		, "offs": 152389
		, "size": 1
	}, {
		"instruction": "dup.x1 sp(4)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 152390
		, "size": 2
	}, {
		"instruction": "dup.x1 sp(4)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 152392
		, "size": 2
	}, {
		"instruction": "add.i32"
		, "name": "add.i32"
		, "code": "0x51"
		, "offs": 152394
		, "size": 1
	}, {
		"instruction": "dup.x1 sp(5)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 152395
		, "size": 2
	}, {
		"instruction": "dup.x1 sp(5)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 152397
		, "size": 2
	}, {
		"instruction": "sub.i32"
		, "name": "sub.i32"
		, "code": "0x52"
		, "offs": 152399
		, "size": 1
	}, {
		"instruction": "dup.x1 sp(6)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 152400
		, "size": 2
	}, {
		"instruction": "dup.x1 sp(6)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 152402
		, "size": 2
	}, {
		"instruction": "mul.i32"
		, "name": "mul.i32"
		, "code": "0x53"
		, "offs": 152404
		, "size": 1
	}, {
		"instruction": "dup.x1 sp(7)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 152405
		, "size": 2
	}, {
		"instruction": "dup.x1 sp(7)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 152407
		, "size": 2
	}, {
		"instruction": "div.i32"
		, "name": "div.i32"
		, "code": "0x54"
		, "offs": 152409
		, "size": 1
	}, {
		"instruction": "dup.x1 sp(8)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 152410
		, "size": 2
	}, {
		"instruction": "dup.x1 sp(8)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 152412
		, "size": 2
	}, {
		"instruction": "mod.i32"
		, "name": "mod.i32"
		, "code": "0x55"
		, "offs": 152414
		, "size": 1
	}, {
		"instruction": "dup.x1 sp(9)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 152415
		, "size": 2
	}, {
		"instruction": "dup.x1 sp(9)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 152417
		, "size": 2
	}, {
		"instruction": "and.b32"
		, "name": "and.b32"
		, "code": "0x31"
		, "offs": 152419
		, "size": 1
	}, {
		"instruction": "dup.x1 sp(10)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 152420
		, "size": 2
	}, {
		"instruction": "dup.x1 sp(10)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 152422
		, "size": 2
	}, {
		"instruction": "or.b32"
		, "name": "or.b32"
		, "code": "0x32"
		, "offs": 152424
		, "size": 1
	}, {
		"instruction": "dup.x1 sp(11)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 152425
		, "size": 2
	}, {
		"instruction": "dup.x1 sp(11)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 152427
		, "size": 2
	}, {
		"instruction": "xor.b32"
		, "name": "xor.b32"
		, "code": "0x36"
		, "offs": 152429
		, "size": 1
	}, {
		"instruction": "dup.x1 sp(12)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 152430
		, "size": 2
	}, {
		"instruction": "dup.x1 sp(136)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 152432
		, "size": 2
	}, {
		"instruction": "shl.b32"
		, "name": "shl.b32"
		, "code": "0x3a"
		, "offs": 152434
		, "size": 1
	}, {
		"instruction": "dup.x1 sp(13)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 152435
		, "size": 2
	}, {
		"instruction": "dup.x1 sp(137)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 152437
		, "size": 2
	}, {
		"instruction": "sar.b32"
		, "name": "sar.b32"
		, "code": "0x3c"
		, "offs": 152439
		, "size": 1
	}, {
		"instruction": "dup.x1 sp(13)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 152440
		, "size": 2
	}, {
		"instruction": "i32.2bool"
		, "name": "i32.2bool"
		, "code": "0x5a"
		, "offs": 152442
		, "size": 1
	}, {
		"instruction": "not.b32"
		, "name": "not.b32"
		, "code": "0x0a"
		, "offs": 152443
		, "size": 1
	}, {
		"instruction": "dup.x1 sp(15)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 152444
		, "size": 2
	}, {
		"instruction": "dup.x1 sp(15)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 152446
		, "size": 2
	}, {
		"instruction": "ceq.i32"
		, "name": "ceq.i32"
		, "code": "0x57"
		, "offs": 152448
		, "size": 1
	}, {
		"instruction": "dup.x1 sp(16)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 152449
		, "size": 2
	}, {
		"instruction": "dup.x1 sp(16)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 152451
		, "size": 2
	}, {
		"instruction": "ceq.i32"
		, "name": "ceq.i32"
		, "code": "0x57"
		, "offs": 152453
		, "size": 1
	}, {
		"instruction": "not.b32"
		, "name": "not.b32"
		, "code": "0x0a"
		, "offs": 152454
		, "size": 1
	}, {
		"instruction": "dup.x1 sp(17)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 152455
		, "size": 2
	}, {
		"instruction": "dup.x1 sp(17)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 152457
		, "size": 2
	}, {
		"instruction": "clt.i32"
		, "name": "clt.i32"
		, "code": "0x58"
		, "offs": 152459
		, "size": 1
	}, {
		"instruction": "dup.x1 sp(18)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 152460
		, "size": 2
	}, {
		"instruction": "dup.x1 sp(18)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 152462
		, "size": 2
	}, {
		"instruction": "cgt.i32"
		, "name": "cgt.i32"
		, "code": "0x59"
		, "offs": 152464
		, "size": 1
	}, {
		"instruction": "not.b32"
		, "name": "not.b32"
		, "code": "0x0a"
		, "offs": 152465
		, "size": 1
	}, {
		"instruction": "dup.x1 sp(19)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 152466
		, "size": 2
	}, {
		"instruction": "dup.x1 sp(19)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 152468
		, "size": 2
	}, {
		"instruction": "cgt.i32"
		, "name": "cgt.i32"
		, "code": "0x59"
		, "offs": 152470
		, "size": 1
	}, {
		"instruction": "dup.x1 sp(20)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 152471
		, "size": 2
	}, {
		"instruction": "dup.x1 sp(20)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 152473
		, "size": 2
	}, {
		"instruction": "clt.i32"
		, "name": "clt.i32"
		, "code": "0x58"
		, "offs": 152475
		, "size": 1
	}, {
		"instruction": "not.b32"
		, "name": "not.b32"
		, "code": "0x0a"
		, "offs": 152476
		, "size": 1
	}, {
		"instruction": "load.c32 96"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 152477
		, "size": 5
	}, {
		"instruction": "load.c32 42"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 152482
		, "size": 5
	}, {
		"instruction": "dup.x1 sp(0)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 152487
		, "size": 2
	}, {
		"instruction": "nop"
		, "name": "nop"
		, "code": "0x00"
		, "offs": 152489
		, "size": 1
	}, {
		"instruction": "dup.x1 sp(1)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 152490
		, "size": 2
	}, {
		"instruction": "neg.i32"
		, "name": "neg.i32"
		, "code": "0x50"
		, "offs": 152492
		, "size": 1
	}, {
		"instruction": "dup.x1 sp(2)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 152493
		, "size": 2
	}, {
		"instruction": "cmt.b32"
		, "name": "cmt.b32"
		, "code": "0x30"
		, "offs": 152495
		, "size": 1
	}, {
		"instruction": "dup.x1 sp(4)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 152496
		, "size": 2
	}, {
		"instruction": "dup.x1 sp(4)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 152498
		, "size": 2
	}, {
		"instruction": "add.i32"
		, "name": "add.i32"
		, "code": "0x51"
		, "offs": 152500
		, "size": 1
	}, {
		"instruction": "dup.x1 sp(5)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 152501
		, "size": 2
	}, {
		"instruction": "dup.x1 sp(5)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 152503
		, "size": 2
	}, {
		"instruction": "sub.i32"
		, "name": "sub.i32"
		, "code": "0x52"
		, "offs": 152505
		, "size": 1
	}, {
		"instruction": "dup.x1 sp(6)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 152506
		, "size": 2
	}, {
		"instruction": "dup.x1 sp(6)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 152508
		, "size": 2
	}, {
		"instruction": "mul.u32"
		, "name": "mul.u32"
		, "code": "0x33"
		, "offs": 152510
		, "size": 1
	}, {
		"instruction": "dup.x1 sp(7)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 152511
		, "size": 2
	}, {
		"instruction": "dup.x1 sp(7)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 152513
		, "size": 2
	}, {
		"instruction": "div.u32"
		, "name": "div.u32"
		, "code": "0x34"
		, "offs": 152515
		, "size": 1
	}, {
		"instruction": "dup.x1 sp(8)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 152516
		, "size": 2
	}, {
		"instruction": "dup.x1 sp(8)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 152518
		, "size": 2
	}, {
		"instruction": "mod.u32"
		, "name": "mod.u32"
		, "code": "0x35"
		, "offs": 152520
		, "size": 1
	}, {
		"instruction": "dup.x1 sp(9)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 152521
		, "size": 2
	}, {
		"instruction": "dup.x1 sp(9)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 152523
		, "size": 2
	}, {
		"instruction": "and.b32"
		, "name": "and.b32"
		, "code": "0x31"
		, "offs": 152525
		, "size": 1
	}, {
		"instruction": "dup.x1 sp(10)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 152526
		, "size": 2
	}, {
		"instruction": "dup.x1 sp(10)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 152528
		, "size": 2
	}, {
		"instruction": "or.b32"
		, "name": "or.b32"
		, "code": "0x32"
		, "offs": 152530
		, "size": 1
	}, {
		"instruction": "dup.x1 sp(11)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 152531
		, "size": 2
	}, {
		"instruction": "dup.x1 sp(11)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 152533
		, "size": 2
	}, {
		"instruction": "xor.b32"
		, "name": "xor.b32"
		, "code": "0x36"
		, "offs": 152535
		, "size": 1
	}, {
		"instruction": "dup.x1 sp(12)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 152536
		, "size": 2
	}, {
		"instruction": "dup.x1 sp(158)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 152538
		, "size": 2
	}, {
		"instruction": "shl.b32"
		, "name": "shl.b32"
		, "code": "0x3a"
		, "offs": 152540
		, "size": 1
	}, {
		"instruction": "dup.x1 sp(13)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 152541
		, "size": 2
	}, {
		"instruction": "dup.x1 sp(159)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 152543
		, "size": 2
	}, {
		"instruction": "shr.b32"
		, "name": "shr.b32"
		, "code": "0x3b"
		, "offs": 152545
		, "size": 1
	}, {
		"instruction": "dup.x1 sp(13)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 152546
		, "size": 2
	}, {
		"instruction": "i32.2bool"
		, "name": "i32.2bool"
		, "code": "0x5a"
		, "offs": 152548
		, "size": 1
	}, {
		"instruction": "not.b32"
		, "name": "not.b32"
		, "code": "0x0a"
		, "offs": 152549
		, "size": 1
	}, {
		"instruction": "dup.x1 sp(15)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 152550
		, "size": 2
	}, {
		"instruction": "dup.x1 sp(15)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 152552
		, "size": 2
	}, {
		"instruction": "ceq.i32"
		, "name": "ceq.i32"
		, "code": "0x57"
		, "offs": 152554
		, "size": 1
	}, {
		"instruction": "dup.x1 sp(16)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 152555
		, "size": 2
	}, {
		"instruction": "dup.x1 sp(16)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 152557
		, "size": 2
	}, {
		"instruction": "ceq.i32"
		, "name": "ceq.i32"
		, "code": "0x57"
		, "offs": 152559
		, "size": 1
	}, {
		"instruction": "not.b32"
		, "name": "not.b32"
		, "code": "0x0a"
		, "offs": 152560
		, "size": 1
	}, {
		"instruction": "dup.x1 sp(17)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 152561
		, "size": 2
	}, {
		"instruction": "dup.x1 sp(17)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 152563
		, "size": 2
	}, {
		"instruction": "clt.u32"
		, "name": "clt.u32"
		, "code": "0x38"
		, "offs": 152565
		, "size": 1
	}, {
		"instruction": "dup.x1 sp(18)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 152566
		, "size": 2
	}, {
		"instruction": "dup.x1 sp(18)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 152568
		, "size": 2
	}, {
		"instruction": "cgt.u32"
		, "name": "cgt.u32"
		, "code": "0x39"
		, "offs": 152570
		, "size": 1
	}, {
		"instruction": "not.b32"
		, "name": "not.b32"
		, "code": "0x0a"
		, "offs": 152571
		, "size": 1
	}, {
		"instruction": "dup.x1 sp(19)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 152572
		, "size": 2
	}, {
		"instruction": "dup.x1 sp(19)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 152574
		, "size": 2
	}, {
		"instruction": "cgt.u32"
		, "name": "cgt.u32"
		, "code": "0x39"
		, "offs": 152576
		, "size": 1
	}, {
		"instruction": "dup.x1 sp(20)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 152577
		, "size": 2
	}, {
		"instruction": "dup.x1 sp(20)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 152579
		, "size": 2
	}, {
		"instruction": "clt.u32"
		, "name": "clt.u32"
		, "code": "0x38"
		, "offs": 152581
		, "size": 1
	}, {
		"instruction": "not.b32"
		, "name": "not.b32"
		, "code": "0x0a"
		, "offs": 152582
		, "size": 1
	}, {
		"instruction": "load.c64 96"
		, "name": "load.c64"
		, "code": "0x1c"
		, "offs": 152583
		, "size": 9
	}, {
		"instruction": "load.c64 42"
		, "name": "load.c64"
		, "code": "0x1c"
		, "offs": 152592
		, "size": 9
	}, {
		"instruction": "dup.x2 sp(0)"
		, "name": "dup.x2"
		, "code": "0x13"
		, "offs": 152601
		, "size": 2
	}, {
		"instruction": "nop"
		, "name": "nop"
		, "code": "0x00"
		, "offs": 152603
		, "size": 1
	}, {
		"instruction": "dup.x2 sp(2)"
		, "name": "dup.x2"
		, "code": "0x13"
		, "offs": 152604
		, "size": 2
	}, {
		"instruction": "neg.i64"
		, "name": "neg.i64"
		, "code": "0x60"
		, "offs": 152606
		, "size": 1
	}, {
		"instruction": "dup.x2 sp(4)"
		, "name": "dup.x2"
		, "code": "0x13"
		, "offs": 152607
		, "size": 2
	}, {
		"instruction": "cmt.b64"
		, "name": "cmt.b64"
		, "code": "0x40"
		, "offs": 152609
		, "size": 1
	}, {
		"instruction": "dup.x2 sp(8)"
		, "name": "dup.x2"
		, "code": "0x13"
		, "offs": 152610
		, "size": 2
	}, {
		"instruction": "dup.x2 sp(8)"
		, "name": "dup.x2"
		, "code": "0x13"
		, "offs": 152612
		, "size": 2
	}, {
		"instruction": "add.i64"
		, "name": "add.i64"
		, "code": "0x61"
		, "offs": 152614
		, "size": 1
	}, {
		"instruction": "dup.x2 sp(10)"
		, "name": "dup.x2"
		, "code": "0x13"
		, "offs": 152615
		, "size": 2
	}, {
		"instruction": "dup.x2 sp(10)"
		, "name": "dup.x2"
		, "code": "0x13"
		, "offs": 152617
		, "size": 2
	}, {
		"instruction": "sub.i64"
		, "name": "sub.i64"
		, "code": "0x62"
		, "offs": 152619
		, "size": 1
	}, {
		"instruction": "dup.x2 sp(12)"
		, "name": "dup.x2"
		, "code": "0x13"
		, "offs": 152620
		, "size": 2
	}, {
		"instruction": "dup.x2 sp(12)"
		, "name": "dup.x2"
		, "code": "0x13"
		, "offs": 152622
		, "size": 2
	}, {
		"instruction": "mul.i64"
		, "name": "mul.i64"
		, "code": "0x63"
		, "offs": 152624
		, "size": 1
	}, {
		"instruction": "dup.x2 sp(14)"
		, "name": "dup.x2"
		, "code": "0x13"
		, "offs": 152625
		, "size": 2
	}, {
		"instruction": "dup.x2 sp(14)"
		, "name": "dup.x2"
		, "code": "0x13"
		, "offs": 152627
		, "size": 2
	}, {
		"instruction": "div.i64"
		, "name": "div.i64"
		, "code": "0x64"
		, "offs": 152629
		, "size": 1
	}, {
		"instruction": "dup.x2 sp(16)"
		, "name": "dup.x2"
		, "code": "0x13"
		, "offs": 152630
		, "size": 2
	}, {
		"instruction": "dup.x2 sp(16)"
		, "name": "dup.x2"
		, "code": "0x13"
		, "offs": 152632
		, "size": 2
	}, {
		"instruction": "mod.i64"
		, "name": "mod.i64"
		, "code": "0x65"
		, "offs": 152634
		, "size": 1
	}, {
		"instruction": "dup.x2 sp(18)"
		, "name": "dup.x2"
		, "code": "0x13"
		, "offs": 152635
		, "size": 2
	}, {
		"instruction": "dup.x2 sp(18)"
		, "name": "dup.x2"
		, "code": "0x13"
		, "offs": 152637
		, "size": 2
	}, {
		"instruction": "and.b64"
		, "name": "and.b64"
		, "code": "0x41"
		, "offs": 152639
		, "size": 1
	}, {
		"instruction": "dup.x2 sp(20)"
		, "name": "dup.x2"
		, "code": "0x13"
		, "offs": 152640
		, "size": 2
	}, {
		"instruction": "dup.x2 sp(20)"
		, "name": "dup.x2"
		, "code": "0x13"
		, "offs": 152642
		, "size": 2
	}, {
		"instruction": "or.b64"
		, "name": "or.b64"
		, "code": "0x42"
		, "offs": 152644
		, "size": 1
	}, {
		"instruction": "dup.x2 sp(22)"
		, "name": "dup.x2"
		, "code": "0x13"
		, "offs": 152645
		, "size": 2
	}, {
		"instruction": "dup.x2 sp(22)"
		, "name": "dup.x2"
		, "code": "0x13"
		, "offs": 152647
		, "size": 2
	}, {
		"instruction": "xor.b64"
		, "name": "xor.b64"
		, "code": "0x46"
		, "offs": 152649
		, "size": 1
	}, {
		"instruction": "dup.x2 sp(24)"
		, "name": "dup.x2"
		, "code": "0x13"
		, "offs": 152650
		, "size": 2
	}, {
		"instruction": "dup.x1 sp(194)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 152652
		, "size": 2
	}, {
		"instruction": "shl.b64"
		, "name": "shl.b64"
		, "code": "0x4a"
		, "offs": 152654
		, "size": 1
	}, {
		"instruction": "dup.x2 sp(26)"
		, "name": "dup.x2"
		, "code": "0x13"
		, "offs": 152655
		, "size": 2
	}, {
		"instruction": "dup.x1 sp(196)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 152657
		, "size": 2
	}, {
		"instruction": "sar.b64"
		, "name": "sar.b64"
		, "code": "0x4c"
		, "offs": 152659
		, "size": 1
	}, {
		"instruction": "dup.x2 sp(26)"
		, "name": "dup.x2"
		, "code": "0x13"
		, "offs": 152660
		, "size": 2
	}, {
		"instruction": "i64.2bool"
		, "name": "i64.2bool"
		, "code": "0x6c"
		, "offs": 152662
		, "size": 1
	}, {
		"instruction": "not.b32"
		, "name": "not.b32"
		, "code": "0x0a"
		, "offs": 152663
		, "size": 1
	}, {
		"instruction": "dup.x2 sp(29)"
		, "name": "dup.x2"
		, "code": "0x13"
		, "offs": 152664
		, "size": 2
	}, {
		"instruction": "dup.x2 sp(29)"
		, "name": "dup.x2"
		, "code": "0x13"
		, "offs": 152666
		, "size": 2
	}, {
		"instruction": "ceq.i64"
		, "name": "ceq.i64"
		, "code": "0x67"
		, "offs": 152668
		, "size": 1
	}, {
		"instruction": "dup.x2 sp(30)"
		, "name": "dup.x2"
		, "code": "0x13"
		, "offs": 152669
		, "size": 2
	}, {
		"instruction": "dup.x2 sp(30)"
		, "name": "dup.x2"
		, "code": "0x13"
		, "offs": 152671
		, "size": 2
	}, {
		"instruction": "ceq.i64"
		, "name": "ceq.i64"
		, "code": "0x67"
		, "offs": 152673
		, "size": 1
	}, {
		"instruction": "not.b32"
		, "name": "not.b32"
		, "code": "0x0a"
		, "offs": 152674
		, "size": 1
	}, {
		"instruction": "dup.x2 sp(31)"
		, "name": "dup.x2"
		, "code": "0x13"
		, "offs": 152675
		, "size": 2
	}, {
		"instruction": "dup.x2 sp(31)"
		, "name": "dup.x2"
		, "code": "0x13"
		, "offs": 152677
		, "size": 2
	}, {
		"instruction": "clt.i64"
		, "name": "clt.i64"
		, "code": "0x68"
		, "offs": 152679
		, "size": 1
	}, {
		"instruction": "dup.x2 sp(32)"
		, "name": "dup.x2"
		, "code": "0x13"
		, "offs": 152680
		, "size": 2
	}, {
		"instruction": "dup.x2 sp(32)"
		, "name": "dup.x2"
		, "code": "0x13"
		, "offs": 152682
		, "size": 2
	}, {
		"instruction": "cgt.i64"
		, "name": "cgt.i64"
		, "code": "0x69"
		, "offs": 152684
		, "size": 1
	}, {
		"instruction": "not.b32"
		, "name": "not.b32"
		, "code": "0x0a"
		, "offs": 152685
		, "size": 1
	}, {
		"instruction": "dup.x2 sp(33)"
		, "name": "dup.x2"
		, "code": "0x13"
		, "offs": 152686
		, "size": 2
	}, {
		"instruction": "dup.x2 sp(33)"
		, "name": "dup.x2"
		, "code": "0x13"
		, "offs": 152688
		, "size": 2
	}, {
		"instruction": "cgt.i64"
		, "name": "cgt.i64"
		, "code": "0x69"
		, "offs": 152690
		, "size": 1
	}, {
		"instruction": "dup.x2 sp(34)"
		, "name": "dup.x2"
		, "code": "0x13"
		, "offs": 152691
		, "size": 2
	}, {
		"instruction": "dup.x2 sp(34)"
		, "name": "dup.x2"
		, "code": "0x13"
		, "offs": 152693
		, "size": 2
	}, {
		"instruction": "clt.i64"
		, "name": "clt.i64"
		, "code": "0x68"
		, "offs": 152695
		, "size": 1
	}, {
		"instruction": "not.b32"
		, "name": "not.b32"
		, "code": "0x0a"
		, "offs": 152696
		, "size": 1
	}, {
		"instruction": "load.c64 96"
		, "name": "load.c64"
		, "code": "0x1c"
		, "offs": 152697
		, "size": 9
	}, {
		"instruction": "load.c64 42"
		, "name": "load.c64"
		, "code": "0x1c"
		, "offs": 152706
		, "size": 9
	}, {
		"instruction": "dup.x2 sp(0)"
		, "name": "dup.x2"
		, "code": "0x13"
		, "offs": 152715
		, "size": 2
	}, {
		"instruction": "nop"
		, "name": "nop"
		, "code": "0x00"
		, "offs": 152717
		, "size": 1
	}, {
		"instruction": "dup.x2 sp(2)"
		, "name": "dup.x2"
		, "code": "0x13"
		, "offs": 152718
		, "size": 2
	}, {
		"instruction": "neg.i64"
		, "name": "neg.i64"
		, "code": "0x60"
		, "offs": 152720
		, "size": 1
	}, {
		"instruction": "dup.x2 sp(4)"
		, "name": "dup.x2"
		, "code": "0x13"
		, "offs": 152721
		, "size": 2
	}, {
		"instruction": "cmt.b64"
		, "name": "cmt.b64"
		, "code": "0x40"
		, "offs": 152723
		, "size": 1
	}, {
		"instruction": "dup.x2 sp(8)"
		, "name": "dup.x2"
		, "code": "0x13"
		, "offs": 152724
		, "size": 2
	}, {
		"instruction": "dup.x2 sp(8)"
		, "name": "dup.x2"
		, "code": "0x13"
		, "offs": 152726
		, "size": 2
	}, {
		"instruction": "add.i64"
		, "name": "add.i64"
		, "code": "0x61"
		, "offs": 152728
		, "size": 1
	}, {
		"instruction": "dup.x2 sp(10)"
		, "name": "dup.x2"
		, "code": "0x13"
		, "offs": 152729
		, "size": 2
	}, {
		"instruction": "dup.x2 sp(10)"
		, "name": "dup.x2"
		, "code": "0x13"
		, "offs": 152731
		, "size": 2
	}, {
		"instruction": "sub.i64"
		, "name": "sub.i64"
		, "code": "0x62"
		, "offs": 152733
		, "size": 1
	}, {
		"instruction": "dup.x2 sp(12)"
		, "name": "dup.x2"
		, "code": "0x13"
		, "offs": 152734
		, "size": 2
	}, {
		"instruction": "dup.x2 sp(12)"
		, "name": "dup.x2"
		, "code": "0x13"
		, "offs": 152736
		, "size": 2
	}, {
		"instruction": "mul.u64"
		, "name": "mul.u64"
		, "code": "0x43"
		, "offs": 152738
		, "size": 1
	}, {
		"instruction": "dup.x2 sp(14)"
		, "name": "dup.x2"
		, "code": "0x13"
		, "offs": 152739
		, "size": 2
	}, {
		"instruction": "dup.x2 sp(14)"
		, "name": "dup.x2"
		, "code": "0x13"
		, "offs": 152741
		, "size": 2
	}, {
		"instruction": "div.u64"
		, "name": "div.u64"
		, "code": "0x44"
		, "offs": 152743
		, "size": 1
	}, {
		"instruction": "dup.x2 sp(16)"
		, "name": "dup.x2"
		, "code": "0x13"
		, "offs": 152744
		, "size": 2
	}, {
		"instruction": "dup.x2 sp(16)"
		, "name": "dup.x2"
		, "code": "0x13"
		, "offs": 152746
		, "size": 2
	}, {
		"instruction": "mod.u64"
		, "name": "mod.u64"
		, "code": "0x45"
		, "offs": 152748
		, "size": 1
	}, {
		"instruction": "dup.x2 sp(18)"
		, "name": "dup.x2"
		, "code": "0x13"
		, "offs": 152749
		, "size": 2
	}, {
		"instruction": "dup.x2 sp(18)"
		, "name": "dup.x2"
		, "code": "0x13"
		, "offs": 152751
		, "size": 2
	}, {
		"instruction": "and.b64"
		, "name": "and.b64"
		, "code": "0x41"
		, "offs": 152753
		, "size": 1
	}, {
		"instruction": "dup.x2 sp(20)"
		, "name": "dup.x2"
		, "code": "0x13"
		, "offs": 152754
		, "size": 2
	}, {
		"instruction": "dup.x2 sp(20)"
		, "name": "dup.x2"
		, "code": "0x13"
		, "offs": 152756
		, "size": 2
	}, {
		"instruction": "or.b64"
		, "name": "or.b64"
		, "code": "0x42"
		, "offs": 152758
		, "size": 1
	}, {
		"instruction": "dup.x2 sp(22)"
		, "name": "dup.x2"
		, "code": "0x13"
		, "offs": 152759
		, "size": 2
	}, {
		"instruction": "dup.x2 sp(22)"
		, "name": "dup.x2"
		, "code": "0x13"
		, "offs": 152761
		, "size": 2
	}, {
		"instruction": "xor.b64"
		, "name": "xor.b64"
		, "code": "0x46"
		, "offs": 152763
		, "size": 1
	}, {
		"instruction": "dup.x2 sp(24)"
		, "name": "dup.x2"
		, "code": "0x13"
		, "offs": 152764
		, "size": 2
	}, {
		"instruction": "dup.x1 sp(231)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 152766
		, "size": 2
	}, {
		"instruction": "shl.b64"
		, "name": "shl.b64"
		, "code": "0x4a"
		, "offs": 152768
		, "size": 1
	}, {
		"instruction": "dup.x2 sp(26)"
		, "name": "dup.x2"
		, "code": "0x13"
		, "offs": 152769
		, "size": 2
	}, {
		"instruction": "dup.x1 sp(233)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 152771
		, "size": 2
	}, {
		"instruction": "shr.b64"
		, "name": "shr.b64"
		, "code": "0x4b"
		, "offs": 152773
		, "size": 1
	}, {
		"instruction": "dup.x2 sp(26)"
		, "name": "dup.x2"
		, "code": "0x13"
		, "offs": 152774
		, "size": 2
	}, {
		"instruction": "i64.2bool"
		, "name": "i64.2bool"
		, "code": "0x6c"
		, "offs": 152776
		, "size": 1
	}, {
		"instruction": "not.b32"
		, "name": "not.b32"
		, "code": "0x0a"
		, "offs": 152777
		, "size": 1
	}, {
		"instruction": "dup.x2 sp(29)"
		, "name": "dup.x2"
		, "code": "0x13"
		, "offs": 152778
		, "size": 2
	}, {
		"instruction": "dup.x2 sp(29)"
		, "name": "dup.x2"
		, "code": "0x13"
		, "offs": 152780
		, "size": 2
	}, {
		"instruction": "ceq.i64"
		, "name": "ceq.i64"
		, "code": "0x67"
		, "offs": 152782
		, "size": 1
	}, {
		"instruction": "dup.x2 sp(30)"
		, "name": "dup.x2"
		, "code": "0x13"
		, "offs": 152783
		, "size": 2
	}, {
		"instruction": "dup.x2 sp(30)"
		, "name": "dup.x2"
		, "code": "0x13"
		, "offs": 152785
		, "size": 2
	}, {
		"instruction": "ceq.i64"
		, "name": "ceq.i64"
		, "code": "0x67"
		, "offs": 152787
		, "size": 1
	}, {
		"instruction": "not.b32"
		, "name": "not.b32"
		, "code": "0x0a"
		, "offs": 152788
		, "size": 1
	}, {
		"instruction": "dup.x2 sp(31)"
		, "name": "dup.x2"
		, "code": "0x13"
		, "offs": 152789
		, "size": 2
	}, {
		"instruction": "dup.x2 sp(31)"
		, "name": "dup.x2"
		, "code": "0x13"
		, "offs": 152791
		, "size": 2
	}, {
		"instruction": "clt.u64"
		, "name": "clt.u64"
		, "code": "0x48"
		, "offs": 152793
		, "size": 1
	}, {
		"instruction": "dup.x2 sp(32)"
		, "name": "dup.x2"
		, "code": "0x13"
		, "offs": 152794
		, "size": 2
	}, {
		"instruction": "dup.x2 sp(32)"
		, "name": "dup.x2"
		, "code": "0x13"
		, "offs": 152796
		, "size": 2
	}, {
		"instruction": "cgt.u64"
		, "name": "cgt.u64"
		, "code": "0x49"
		, "offs": 152798
		, "size": 1
	}, {
		"instruction": "not.b32"
		, "name": "not.b32"
		, "code": "0x0a"
		, "offs": 152799
		, "size": 1
	}, {
		"instruction": "dup.x2 sp(33)"
		, "name": "dup.x2"
		, "code": "0x13"
		, "offs": 152800
		, "size": 2
	}, {
		"instruction": "dup.x2 sp(33)"
		, "name": "dup.x2"
		, "code": "0x13"
		, "offs": 152802
		, "size": 2
	}, {
		"instruction": "cgt.u64"
		, "name": "cgt.u64"
		, "code": "0x49"
		, "offs": 152804
		, "size": 1
	}, {
		"instruction": "dup.x2 sp(34)"
		, "name": "dup.x2"
		, "code": "0x13"
		, "offs": 152805
		, "size": 2
	}, {
		"instruction": "dup.x2 sp(34)"
		, "name": "dup.x2"
		, "code": "0x13"
		, "offs": 152807
		, "size": 2
	}, {
		"instruction": "clt.u64"
		, "name": "clt.u64"
		, "code": "0x48"
		, "offs": 152809
		, "size": 1
	}, {
		"instruction": "not.b32"
		, "name": "not.b32"
		, "code": "0x0a"
		, "offs": 152810
		, "size": 1
	}, {
		"instruction": "load.f32 96.300003"
		, "name": "load.f32"
		, "code": "0x1d"
		, "offs": 152811
		, "size": 5
	}, {
		"instruction": "load.f32 42.139999"
		, "name": "load.f32"
		, "code": "0x1d"
		, "offs": 152816
		, "size": 5
	}, {
		"instruction": "dup.x1 sp(0)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 152821
		, "size": 2
	}, {
		"instruction": "nop"
		, "name": "nop"
		, "code": "0x00"
		, "offs": 152823
		, "size": 1
	}, {
		"instruction": "dup.x1 sp(1)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 152824
		, "size": 2
	}, {
		"instruction": "neg.f32"
		, "name": "neg.f32"
		, "code": "0x70"
		, "offs": 152826
		, "size": 1
	}, {
		"instruction": "dup.x1 sp(3)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 152827
		, "size": 2
	}, {
		"instruction": "dup.x1 sp(3)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 152829
		, "size": 2
	}, {
		"instruction": "add.f32"
		, "name": "add.f32"
		, "code": "0x71"
		, "offs": 152831
		, "size": 1
	}, {
		"instruction": "dup.x1 sp(4)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 152832
		, "size": 2
	}, {
		"instruction": "dup.x1 sp(4)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 152834
		, "size": 2
	}, {
		"instruction": "sub.f32"
		, "name": "sub.f32"
		, "code": "0x72"
		, "offs": 152836
		, "size": 1
	}, {
		"instruction": "dup.x1 sp(5)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 152837
		, "size": 2
	}, {
		"instruction": "dup.x1 sp(5)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 152839
		, "size": 2
	}, {
		"instruction": "mul.f32"
		, "name": "mul.f32"
		, "code": "0x73"
		, "offs": 152841
		, "size": 1
	}, {
		"instruction": "dup.x1 sp(6)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 152842
		, "size": 2
	}, {
		"instruction": "dup.x1 sp(6)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 152844
		, "size": 2
	}, {
		"instruction": "div.f32"
		, "name": "div.f32"
		, "code": "0x74"
		, "offs": 152846
		, "size": 1
	}, {
		"instruction": "dup.x1 sp(7)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 152847
		, "size": 2
	}, {
		"instruction": "dup.x1 sp(7)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 152849
		, "size": 2
	}, {
		"instruction": "mod.f32"
		, "name": "mod.f32"
		, "code": "0x75"
		, "offs": 152851
		, "size": 1
	}, {
		"instruction": "dup.x1 sp(7)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 152852
		, "size": 2
	}, {
		"instruction": "f32.2bool"
		, "name": "f32.2bool"
		, "code": "0x7b"
		, "offs": 152854
		, "size": 1
	}, {
		"instruction": "not.b32"
		, "name": "not.b32"
		, "code": "0x0a"
		, "offs": 152855
		, "size": 1
	}, {
		"instruction": "dup.x1 sp(9)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 152856
		, "size": 2
	}, {
		"instruction": "dup.x1 sp(9)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 152858
		, "size": 2
	}, {
		"instruction": "ceq.f32"
		, "name": "ceq.f32"
		, "code": "0x77"
		, "offs": 152860
		, "size": 1
	}, {
		"instruction": "dup.x1 sp(10)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 152861
		, "size": 2
	}, {
		"instruction": "dup.x1 sp(10)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 152863
		, "size": 2
	}, {
		"instruction": "ceq.f32"
		, "name": "ceq.f32"
		, "code": "0x77"
		, "offs": 152865
		, "size": 1
	}, {
		"instruction": "not.b32"
		, "name": "not.b32"
		, "code": "0x0a"
		, "offs": 152866
		, "size": 1
	}, {
		"instruction": "dup.x1 sp(11)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 152867
		, "size": 2
	}, {
		"instruction": "dup.x1 sp(11)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 152869
		, "size": 2
	}, {
		"instruction": "clt.f32"
		, "name": "clt.f32"
		, "code": "0x78"
		, "offs": 152871
		, "size": 1
	}, {
		"instruction": "dup.x1 sp(12)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 152872
		, "size": 2
	}, {
		"instruction": "dup.x1 sp(12)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 152874
		, "size": 2
	}, {
		"instruction": "cgt.f32"
		, "name": "cgt.f32"
		, "code": "0x79"
		, "offs": 152876
		, "size": 1
	}, {
		"instruction": "not.b32"
		, "name": "not.b32"
		, "code": "0x0a"
		, "offs": 152877
		, "size": 1
	}, {
		"instruction": "dup.x1 sp(13)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 152878
		, "size": 2
	}, {
		"instruction": "dup.x1 sp(13)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 152880
		, "size": 2
	}, {
		"instruction": "cgt.f32"
		, "name": "cgt.f32"
		, "code": "0x79"
		, "offs": 152882
		, "size": 1
	}, {
		"instruction": "dup.x1 sp(14)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 152883
		, "size": 2
	}, {
		"instruction": "dup.x1 sp(14)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 152885
		, "size": 2
	}, {
		"instruction": "clt.f32"
		, "name": "clt.f32"
		, "code": "0x78"
		, "offs": 152887
		, "size": 1
	}, {
		"instruction": "not.b32"
		, "name": "not.b32"
		, "code": "0x0a"
		, "offs": 152888
		, "size": 1
	}, {
		"instruction": "load.f64 96.300000"
		, "name": "load.f64"
		, "code": "0x1e"
		, "offs": 152889
		, "size": 9
	}, {
		"instruction": "load.f64 42.140000"
		, "name": "load.f64"
		, "code": "0x1e"
		, "offs": 152898
		, "size": 9
	}, {
		"instruction": "dup.x2 sp(0)"
		, "name": "dup.x2"
		, "code": "0x13"
		, "offs": 152907
		, "size": 2
	}, {
		"instruction": "nop"
		, "name": "nop"
		, "code": "0x00"
		, "offs": 152909
		, "size": 1
	}, {
		"instruction": "dup.x2 sp(2)"
		, "name": "dup.x2"
		, "code": "0x13"
		, "offs": 152910
		, "size": 2
	}, {
		"instruction": "neg.f64"
		, "name": "neg.f64"
		, "code": "0x80"
		, "offs": 152912
		, "size": 1
	}, {
		"instruction": "dup.x2 sp(6)"
		, "name": "dup.x2"
		, "code": "0x13"
		, "offs": 152913
		, "size": 2
	}, {
		"instruction": "dup.x2 sp(6)"
		, "name": "dup.x2"
		, "code": "0x13"
		, "offs": 152915
		, "size": 2
	}, {
		"instruction": "add.f64"
		, "name": "add.f64"
		, "code": "0x81"
		, "offs": 152917
		, "size": 1
	}, {
		"instruction": "dup.x2 sp(8)"
		, "name": "dup.x2"
		, "code": "0x13"
		, "offs": 152918
		, "size": 2
	}, {
		"instruction": "dup.x2 sp(8)"
		, "name": "dup.x2"
		, "code": "0x13"
		, "offs": 152920
		, "size": 2
	}, {
		"instruction": "sub.f64"
		, "name": "sub.f64"
		, "code": "0x82"
		, "offs": 152922
		, "size": 1
	}, {
		"instruction": "dup.x2 sp(10)"
		, "name": "dup.x2"
		, "code": "0x13"
		, "offs": 152923
		, "size": 2
	}, {
		"instruction": "dup.x2 sp(10)"
		, "name": "dup.x2"
		, "code": "0x13"
		, "offs": 152925
		, "size": 2
	}, {
		"instruction": "mul.f64"
		, "name": "mul.f64"
		, "code": "0x83"
		, "offs": 152927
		, "size": 1
	}, {
		"instruction": "dup.x2 sp(12)"
		, "name": "dup.x2"
		, "code": "0x13"
		, "offs": 152928
		, "size": 2
	}, {
		"instruction": "dup.x2 sp(12)"
		, "name": "dup.x2"
		, "code": "0x13"
		, "offs": 152930
		, "size": 2
	}, {
		"instruction": "div.f64"
		, "name": "div.f64"
		, "code": "0x84"
		, "offs": 152932
		, "size": 1
	}, {
		"instruction": "dup.x2 sp(14)"
		, "name": "dup.x2"
		, "code": "0x13"
		, "offs": 152933
		, "size": 2
	}, {
		"instruction": "dup.x2 sp(14)"
		, "name": "dup.x2"
		, "code": "0x13"
		, "offs": 152935
		, "size": 2
	}, {
		"instruction": "mod.f64"
		, "name": "mod.f64"
		, "code": "0x85"
		, "offs": 152937
		, "size": 1
	}, {
		"instruction": "dup.x2 sp(14)"
		, "name": "dup.x2"
		, "code": "0x13"
		, "offs": 152938
		, "size": 2
	}, {
		"instruction": "f64.2bool"
		, "name": "f64.2bool"
		, "code": "0x8d"
		, "offs": 152940
		, "size": 1
	}, {
		"instruction": "not.b32"
		, "name": "not.b32"
		, "code": "0x0a"
		, "offs": 152941
		, "size": 1
	}, {
		"instruction": "dup.x2 sp(17)"
		, "name": "dup.x2"
		, "code": "0x13"
		, "offs": 152942
		, "size": 2
	}, {
		"instruction": "dup.x2 sp(17)"
		, "name": "dup.x2"
		, "code": "0x13"
		, "offs": 152944
		, "size": 2
	}, {
		"instruction": "ceq.f64"
		, "name": "ceq.f64"
		, "code": "0x87"
		, "offs": 152946
		, "size": 1
	}, {
		"instruction": "dup.x2 sp(18)"
		, "name": "dup.x2"
		, "code": "0x13"
		, "offs": 152947
		, "size": 2
	}, {
		"instruction": "dup.x2 sp(18)"
		, "name": "dup.x2"
		, "code": "0x13"
		, "offs": 152949
		, "size": 2
	}, {
		"instruction": "ceq.f64"
		, "name": "ceq.f64"
		, "code": "0x87"
		, "offs": 152951
		, "size": 1
	}, {
		"instruction": "not.b32"
		, "name": "not.b32"
		, "code": "0x0a"
		, "offs": 152952
		, "size": 1
	}, {
		"instruction": "dup.x2 sp(19)"
		, "name": "dup.x2"
		, "code": "0x13"
		, "offs": 152953
		, "size": 2
	}, {
		"instruction": "dup.x2 sp(19)"
		, "name": "dup.x2"
		, "code": "0x13"
		, "offs": 152955
		, "size": 2
	}, {
		"instruction": "clt.f64"
		, "name": "clt.f64"
		, "code": "0x88"
		, "offs": 152957
		, "size": 1
	}, {
		"instruction": "dup.x2 sp(20)"
		, "name": "dup.x2"
		, "code": "0x13"
		, "offs": 152958
		, "size": 2
	}, {
		"instruction": "dup.x2 sp(20)"
		, "name": "dup.x2"
		, "code": "0x13"
		, "offs": 152960
		, "size": 2
	}, {
		"instruction": "cgt.f64"
		, "name": "cgt.f64"
		, "code": "0x89"
		, "offs": 152962
		, "size": 1
	}, {
		"instruction": "not.b32"
		, "name": "not.b32"
		, "code": "0x0a"
		, "offs": 152963
		, "size": 1
	}, {
		"instruction": "dup.x2 sp(21)"
		, "name": "dup.x2"
		, "code": "0x13"
		, "offs": 152964
		, "size": 2
	}, {
		"instruction": "dup.x2 sp(21)"
		, "name": "dup.x2"
		, "code": "0x13"
		, "offs": 152966
		, "size": 2
	}, {
		"instruction": "cgt.f64"
		, "name": "cgt.f64"
		, "code": "0x89"
		, "offs": 152968
		, "size": 1
	}, {
		"instruction": "dup.x2 sp(22)"
		, "name": "dup.x2"
		, "code": "0x13"
		, "offs": 152969
		, "size": 2
	}, {
		"instruction": "dup.x2 sp(22)"
		, "name": "dup.x2"
		, "code": "0x13"
		, "offs": 152971
		, "size": 2
	}, {
		"instruction": "clt.f64"
		, "name": "clt.f64"
		, "code": "0x88"
		, "offs": 152973
		, "size": 1
	}, {
		"instruction": "not.b32"
		, "name": "not.b32"
		, "code": "0x0a"
		, "offs": 152974
		, "size": 1
	}, {
		"instruction": "load.ref .000000"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 152975
		, "size": 5
	}, {
		"instruction": "load.sp(+1128)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 152980
		, "size": 4
	}, {
		"instruction": "dup.x1 sp(1)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 152984
		, "size": 2
	}, {
		"instruction": "dup.x1 sp(1)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 152986
		, "size": 2
	}, {
		"instruction": "ceq.i32"
		, "name": "ceq.i32"
		, "code": "0x57"
		, "offs": 152988
		, "size": 1
	}, {
		"instruction": "dup.x1 sp(2)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 152989
		, "size": 2
	}, {
		"instruction": "dup.x1 sp(2)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 152991
		, "size": 2
	}, {
		"instruction": "ceq.i32"
		, "name": "ceq.i32"
		, "code": "0x57"
		, "offs": 152993
		, "size": 1
	}, {
		"instruction": "not.b32"
		, "name": "not.b32"
		, "code": "0x0a"
		, "offs": 152994
		, "size": 1
	}, {
		"instruction": "inc.sp(+56)"
		, "name": "inc.sp"
		, "code": "0x10"
		, "offs": 152995
		, "size": 4
	}, {
		"instruction": "inc.sp(+8)"
		, "name": "inc.sp"
		, "code": "0x10"
		, "offs": 152999
		, "size": 4
	}, {
		"instruction": "inc.sp(+4)"
		, "name": "inc.sp"
		, "code": "0x10"
		, "offs": 153003
		, "size": 4
	}, {
		"instruction": "load.c32 0"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 153007
		, "size": 5
	}, {
		"instruction": "load.ref .000000"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 153012
		, "size": 5
	}, {
		"instruction": "load.ref .000000"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 153017
		, "size": 5
	}, {
		"instruction": "load.c32 7"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 153022
		, "size": 5
	}, {
		"instruction": "load.sp(+28)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 153027
		, "size": 4
	}, {
		"instruction": "load.sp(+32)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 153031
		, "size": 4
	}, {
		"instruction": "dup.x2 sp(1)"
		, "name": "dup.x2"
		, "code": "0x13"
		, "offs": 153035
		, "size": 2
	}, {
		"instruction": "load.sp(+12)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 153037
		, "size": 4
	}, {
		"instruction": "dup.x1 sp(3)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 153041
		, "size": 2
	}, {
		"instruction": "load.c32 6"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 153043
		, "size": 5
	}, {
		"instruction": "load.ref .01d990"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 153048
		, "size": 5
	}, {
		"instruction": "load.ref .01d990"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 153053
		, "size": 5
	}, {
		"instruction": "load.c32 7"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 153058
		, "size": 5
	}, {
		"instruction": "load.c32 7"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 153063
		, "size": 5
	}, {
		"instruction": "ceq.i32"
		, "name": "ceq.i32"
		, "code": "0x57"
		, "offs": 153068
		, "size": 1
	}, {
		"instruction": "jz +8"
		, "name": "jz"
		, "code": "0x06"
		, "offs": 153069
		, "size": 4
	}, {
		"instruction": "jmp +43"
		, "name": "jmp"
		, "code": "0x04"
		, "offs": 153073
		, "size": 4
	}, {
		"instruction": "load.ref .00d532"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 153077
		, "size": 5
	}, {
		"instruction": "load.c32 47"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 153082
		, "size": 5
	}, {
		"instruction": "load.c32 -1"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 153087
		, "size": 5
	}, {
		"instruction": "load.ref .00a834"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 153092
		, "size": 5
	}, {
		"instruction": "load.ref .0007f0"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 153097
		, "size": 5
	}, {
		"instruction": "load.ref .000000"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 153102
		, "size": 5
	}, {
		"instruction": "load.c32 128"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 153107
		, "size": 5
	}, {
		"instruction": "nfc(5)"
		, "name": "nfc"
		, "code": "0x01"
		, "offs": 153112
		, "size": 4
	}, {
		"instruction": "dup.x1 sp(14)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 153116
		, "size": 2
	}, {
		"instruction": "load.c32 0"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 153118
		, "size": 5
	}, {
		"instruction": "ceq.i32"
		, "name": "ceq.i32"
		, "code": "0x57"
		, "offs": 153123
		, "size": 1
	}, {
		"instruction": "jz +8"
		, "name": "jz"
		, "code": "0x06"
		, "offs": 153124
		, "size": 4
	}, {
		"instruction": "jmp +43"
		, "name": "jmp"
		, "code": "0x04"
		, "offs": 153128
		, "size": 4
	}, {
		"instruction": "load.ref .00d532"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 153132
		, "size": 5
	}, {
		"instruction": "load.c32 48"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 153137
		, "size": 5
	}, {
		"instruction": "load.c32 -1"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 153142
		, "size": 5
	}, {
		"instruction": "load.ref .01d9af"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 153147
		, "size": 5
	}, {
		"instruction": "load.ref .0007f0"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 153152
		, "size": 5
	}, {
		"instruction": "load.ref .000000"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 153157
		, "size": 5
	}, {
		"instruction": "load.c32 128"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 153162
		, "size": 5
	}, {
		"instruction": "nfc(5)"
		, "name": "nfc"
		, "code": "0x01"
		, "offs": 153167
		, "size": 4
	}, {
		"instruction": "dup.x1 sp(11)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 153171
		, "size": 2
	}, {
		"instruction": "load.c32 0"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 153173
		, "size": 5
	}, {
		"instruction": "ceq.i32"
		, "name": "ceq.i32"
		, "code": "0x57"
		, "offs": 153178
		, "size": 1
	}, {
		"instruction": "jz +8"
		, "name": "jz"
		, "code": "0x06"
		, "offs": 153179
		, "size": 4
	}, {
		"instruction": "jmp +43"
		, "name": "jmp"
		, "code": "0x04"
		, "offs": 153183
		, "size": 4
	}, {
		"instruction": "load.ref .00d532"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 153187
		, "size": 5
	}, {
		"instruction": "load.c32 50"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 153192
		, "size": 5
	}, {
		"instruction": "load.c32 -1"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 153197
		, "size": 5
	}, {
		"instruction": "load.ref .00a834"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 153202
		, "size": 5
	}, {
		"instruction": "load.ref .0007f0"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 153207
		, "size": 5
	}, {
		"instruction": "load.ref .000000"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 153212
		, "size": 5
	}, {
		"instruction": "load.c32 128"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 153217
		, "size": 5
	}, {
		"instruction": "nfc(5)"
		, "name": "nfc"
		, "code": "0x01"
		, "offs": 153222
		, "size": 4
	}, {
		"instruction": "dup.x1 sp(5)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 153226
		, "size": 2
	}, {
		"instruction": "dup.x1 sp(9)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 153228
		, "size": 2
	}, {
		"instruction": "ceq.i32"
		, "name": "ceq.i32"
		, "code": "0x57"
		, "offs": 153230
		, "size": 1
	}, {
		"instruction": "jz +8"
		, "name": "jz"
		, "code": "0x06"
		, "offs": 153231
		, "size": 4
	}, {
		"instruction": "jmp +43"
		, "name": "jmp"
		, "code": "0x04"
		, "offs": 153235
		, "size": 4
	}, {
		"instruction": "load.ref .00d532"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 153239
		, "size": 5
	}, {
		"instruction": "load.c32 51"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 153244
		, "size": 5
	}, {
		"instruction": "load.c32 -1"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 153249
		, "size": 5
	}, {
		"instruction": "load.ref .00a834"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 153254
		, "size": 5
	}, {
		"instruction": "load.ref .0007f0"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 153259
		, "size": 5
	}, {
		"instruction": "load.ref .000000"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 153264
		, "size": 5
	}, {
		"instruction": "load.c32 128"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 153269
		, "size": 5
	}, {
		"instruction": "nfc(5)"
		, "name": "nfc"
		, "code": "0x01"
		, "offs": 153274
		, "size": 4
	}, {
		"instruction": "load.c64 42"
		, "name": "load.c64"
		, "code": "0x1c"
		, "offs": 153278
		, "size": 9
	}, {
		"instruction": "store.m64 .024888"
		, "name": "store.m64"
		, "code": "0x2e"
		, "offs": 153287
		, "size": 4
	}, {
		"instruction": "load.ref .024888"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 153291
		, "size": 5
	}, {
		"instruction": "load.ref .024888"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 153296
		, "size": 5
	}, {
		"instruction": "load.ref .000400"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 153301
		, "size": 5
	}, {
		"instruction": "load.ref .024888"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 153306
		, "size": 5
	}, {
		"instruction": "dup.x1 sp(3)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 153311
		, "size": 2
	}, {
		"instruction": "load.m64"
		, "name": "load.m64"
		, "code": "0x23"
		, "offs": 153313
		, "size": 1
	}, {
		"instruction": "dup.x1 sp(4)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 153314
		, "size": 2
	}, {
		"instruction": "dup.x1 sp(3)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 153316
		, "size": 2
	}, {
		"instruction": "load.ref .000000"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 153318
		, "size": 5
	}, {
		"instruction": "load.ref .000000"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 153323
		, "size": 5
	}, {
		"instruction": "load.ref .0007f0"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 153328
		, "size": 5
	}, {
		"instruction": "load.ref .000000"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 153333
		, "size": 5
	}, {
		"instruction": "load.ref .000000"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 153338
		, "size": 5
	}, {
		"instruction": "load.ref .000000"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 153343
		, "size": 5
	}, {
		"instruction": "load.ref .000000"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 153348
		, "size": 5
	}, {
		"instruction": "load.ref .000400"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 153353
		, "size": 5
	}, {
		"instruction": "load.ref .000008"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 153358
		, "size": 5
	}, {
		"instruction": "load.ref .000400"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 153363
		, "size": 5
	}, {
		"instruction": "load.ref .000400"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 153368
		, "size": 5
	}, {
		"instruction": "load.m64 .024888"
		, "name": "load.m64"
		, "code": "0x2b"
		, "offs": 153373
		, "size": 4
	}, {
		"instruction": "dup.x2 sp(0)"
		, "name": "dup.x2"
		, "code": "0x13"
		, "offs": 153377
		, "size": 2
	}, {
		"instruction": "dup.x1 sp(22)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 153379
		, "size": 2
	}, {
		"instruction": "dup.x1 sp(22)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 153381
		, "size": 2
	}, {
		"instruction": "dup.x2 sp(21)"
		, "name": "dup.x2"
		, "code": "0x13"
		, "offs": 153383
		, "size": 2
	}, {
		"instruction": "dup.x1 sp(8)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 153385
		, "size": 2
	}, {
		"instruction": "load.ref .0000a0"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 153387
		, "size": 5
	}, {
		"instruction": "load.ref .000130"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 153392
		, "size": 5
	}, {
		"instruction": "load.ref .0001c0"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 153397
		, "size": 5
	}, {
		"instruction": "load.ref .000250"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 153402
		, "size": 5
	}, {
		"instruction": "load.ref .0002e0"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 153407
		, "size": 5
	}, {
		"instruction": "load.ref .000370"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 153412
		, "size": 5
	}, {
		"instruction": "load.ref .000400"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 153417
		, "size": 5
	}, {
		"instruction": "load.ref .000490"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 153422
		, "size": 5
	}, {
		"instruction": "load.ref .000520"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 153427
		, "size": 5
	}, {
		"instruction": "load.ref .0005b0"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 153432
		, "size": 5
	}, {
		"instruction": "load.ref .000640"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 153437
		, "size": 5
	}, {
		"instruction": "load.ref .0006d0"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 153442
		, "size": 5
	}, {
		"instruction": "load.ref .000760"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 153447
		, "size": 5
	}, {
		"instruction": "load.ref .000008"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 153452
		, "size": 5
	}, {
		"instruction": "load.ref .000910"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 153457
		, "size": 5
	}, {
		"instruction": "load.ref .0007f0"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 153462
		, "size": 5
	}, {
		"instruction": "load.ref .000880"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 153467
		, "size": 5
	}, {
		"instruction": "load.ref .0009a8"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 153472
		, "size": 5
	}, {
		"instruction": "load.ref .000008"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 153477
		, "size": 5
	}, {
		"instruction": "load.ref .0000a0"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 153482
		, "size": 5
	}, {
		"instruction": "load.ref .000008"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 153487
		, "size": 5
	}, {
		"instruction": "load.ref .000130"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 153492
		, "size": 5
	}, {
		"instruction": "load.ref .000008"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 153497
		, "size": 5
	}, {
		"instruction": "load.ref .0001c0"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 153502
		, "size": 5
	}, {
		"instruction": "load.ref .000008"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 153507
		, "size": 5
	}, {
		"instruction": "load.ref .000250"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 153512
		, "size": 5
	}, {
		"instruction": "load.ref .000008"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 153517
		, "size": 5
	}, {
		"instruction": "load.ref .0002e0"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 153522
		, "size": 5
	}, {
		"instruction": "load.ref .000008"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 153527
		, "size": 5
	}, {
		"instruction": "load.ref .000370"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 153532
		, "size": 5
	}, {
		"instruction": "load.ref .000008"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 153537
		, "size": 5
	}, {
		"instruction": "load.ref .000400"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 153542
		, "size": 5
	}, {
		"instruction": "load.ref .000008"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 153547
		, "size": 5
	}, {
		"instruction": "load.ref .000490"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 153552
		, "size": 5
	}, {
		"instruction": "load.ref .000008"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 153557
		, "size": 5
	}, {
		"instruction": "load.ref .000520"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 153562
		, "size": 5
	}, {
		"instruction": "load.ref .000008"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 153567
		, "size": 5
	}, {
		"instruction": "load.ref .0005b0"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 153572
		, "size": 5
	}, {
		"instruction": "load.ref .000008"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 153577
		, "size": 5
	}, {
		"instruction": "load.ref .000640"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 153582
		, "size": 5
	}, {
		"instruction": "load.ref .000008"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 153587
		, "size": 5
	}, {
		"instruction": "load.ref .0006d0"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 153592
		, "size": 5
	}, {
		"instruction": "load.ref .000008"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 153597
		, "size": 5
	}, {
		"instruction": "load.ref .000760"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 153602
		, "size": 5
	}, {
		"instruction": "load.ref .000008"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 153607
		, "size": 5
	}, {
		"instruction": "load.ref .000008"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 153612
		, "size": 5
	}, {
		"instruction": "load.ref .000008"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 153617
		, "size": 5
	}, {
		"instruction": "load.ref .000910"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 153622
		, "size": 5
	}, {
		"instruction": "load.ref .000008"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 153627
		, "size": 5
	}, {
		"instruction": "load.ref .0007f0"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 153632
		, "size": 5
	}, {
		"instruction": "load.ref .000008"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 153637
		, "size": 5
	}, {
		"instruction": "load.ref .000880"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 153642
		, "size": 5
	}, {
		"instruction": "load.ref .000008"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 153647
		, "size": 5
	}, {
		"instruction": "load.ref .0009a8"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 153652
		, "size": 5
	}, {
		"instruction": "load.ref .0000a0"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 153657
		, "size": 5
	}, {
		"instruction": "load.ref .000130"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 153662
		, "size": 5
	}, {
		"instruction": "load.ref .0001c0"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 153667
		, "size": 5
	}, {
		"instruction": "load.ref .000250"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 153672
		, "size": 5
	}, {
		"instruction": "load.ref .0002e0"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 153677
		, "size": 5
	}, {
		"instruction": "load.ref .000370"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 153682
		, "size": 5
	}, {
		"instruction": "load.ref .000400"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 153687
		, "size": 5
	}, {
		"instruction": "load.ref .000490"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 153692
		, "size": 5
	}, {
		"instruction": "load.ref .000520"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 153697
		, "size": 5
	}, {
		"instruction": "load.ref .0005b0"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 153702
		, "size": 5
	}, {
		"instruction": "load.ref .000640"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 153707
		, "size": 5
	}, {
		"instruction": "load.ref .0006d0"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 153712
		, "size": 5
	}, {
		"instruction": "load.ref .000760"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 153717
		, "size": 5
	}, {
		"instruction": "load.ref .000008"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 153722
		, "size": 5
	}, {
		"instruction": "load.ref .000910"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 153727
		, "size": 5
	}, {
		"instruction": "load.ref .0007f0"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 153732
		, "size": 5
	}, {
		"instruction": "load.ref .000880"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 153737
		, "size": 5
	}, {
		"instruction": "load.ref .0009a8"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 153742
		, "size": 5
	}, {
		"instruction": "load.ref .024888"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 153747
		, "size": 5
	}, {
		"instruction": "load.ref .000400"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 153752
		, "size": 5
	}, {
		"instruction": "load.ref .024888"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 153757
		, "size": 5
	}, {
		"instruction": "load.ref .000400"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 153762
		, "size": 5
	}, {
		"instruction": "load.ref .000400"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 153767
		, "size": 5
	}, {
		"instruction": "load.ref .0007f0"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 153772
		, "size": 5
	}, {
		"instruction": "dup.x1 sp(65)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 153777
		, "size": 2
	}, {
		"instruction": "dup.x1 sp(35)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 153779
		, "size": 2
	}, {
		"instruction": "load.c64 0"
		, "name": "load.c64"
		, "code": "0x1c"
		, "offs": 153781
		, "size": 9
	}, {
		"instruction": "load.c64 0"
		, "name": "load.c64"
		, "code": "0x1c"
		, "offs": 153790
		, "size": 9
	}, {
		"instruction": "store.m64 .024890"
		, "name": "store.m64"
		, "code": "0x2e"
		, "offs": 153799
		, "size": 4
	}, {
		"instruction": "load.c64 42"
		, "name": "load.c64"
		, "code": "0x1c"
		, "offs": 153803
		, "size": 9
	}, {
		"instruction": "load.c64 1024"
		, "name": "load.c64"
		, "code": "0x1c"
		, "offs": 153812
		, "size": 9
	}, {
		"instruction": "store.m64 .024898"
		, "name": "store.m64"
		, "code": "0x2e"
		, "offs": 153821
		, "size": 4
	}, {
		"instruction": "dup.x2 sp(0)"
		, "name": "dup.x2"
		, "code": "0x13"
		, "offs": 153825
		, "size": 2
	}, {
		"instruction": "dup.x2 sp(2)"
		, "name": "dup.x2"
		, "code": "0x13"
		, "offs": 153827
		, "size": 2
	}, {
		"instruction": "store.m64 .0248a0"
		, "name": "store.m64"
		, "code": "0x2e"
		, "offs": 153829
		, "size": 4
	}, {
		"instruction": "load.m64 .024898"
		, "name": "load.m64"
		, "code": "0x2b"
		, "offs": 153833
		, "size": 4
	}, {
		"instruction": "load.m64 .024898"
		, "name": "load.m64"
		, "code": "0x2b"
		, "offs": 153837
		, "size": 4
	}, {
		"instruction": "store.m64 .0248a8"
		, "name": "store.m64"
		, "code": "0x2e"
		, "offs": 153841
		, "size": 4
	}, {
		"instruction": "load.f64 3.141593"
		, "name": "load.f64"
		, "code": "0x1e"
		, "offs": 153845
		, "size": 9
	}, {
		"instruction": "load.f64 2.718282"
		, "name": "load.f64"
		, "code": "0x1e"
		, "offs": 153854
		, "size": 9
	}, {
		"instruction": "dup.x2 sp(2)"
		, "name": "dup.x2"
		, "code": "0x13"
		, "offs": 153863
		, "size": 2
	}, {
		"instruction": "f64.2f32"
		, "name": "f64.2f32"
		, "code": "0x8b"
		, "offs": 153865
		, "size": 1
	}, {
		"instruction": "dup.x2 sp(1)"
		, "name": "dup.x2"
		, "code": "0x13"
		, "offs": 153866
		, "size": 2
	}, {
		"instruction": "f64.2f32"
		, "name": "f64.2f32"
		, "code": "0x8b"
		, "offs": 153868
		, "size": 1
	}, {
		"instruction": "load.c32 14"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 153869
		, "size": 5
	}, {
		"instruction": "b32.shl 0x003"
		, "name": "b32."
		, "code": "0x3f"
		, "offs": 153874
		, "size": 2
	}, {
		"instruction": "load.c32 63"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 153876
		, "size": 5
	}, {
		"instruction": "b32.shl 0x002"
		, "name": "b32."
		, "code": "0x3f"
		, "offs": 153881
		, "size": 2
	}, {
		"instruction": "load.c32 31"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 153883
		, "size": 5
	}, {
		"instruction": "b32.shl 0x003"
		, "name": "b32."
		, "code": "0x3f"
		, "offs": 153888
		, "size": 2
	}, {
		"instruction": "dup.x1 sp(2)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 153890
		, "size": 2
	}, {
		"instruction": "b32.shl 0x008"
		, "name": "b32."
		, "code": "0x3f"
		, "offs": 153892
		, "size": 2
	}, {
		"instruction": "load.c32 63488"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 153894
		, "size": 5
	}, {
		"instruction": "and.b32"
		, "name": "and.b32"
		, "code": "0x31"
		, "offs": 153899
		, "size": 1
	}, {
		"instruction": "dup.x1 sp(2)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 153900
		, "size": 2
	}, {
		"instruction": "b32.shl 0x003"
		, "name": "b32."
		, "code": "0x3f"
		, "offs": 153902
		, "size": 2
	}, {
		"instruction": "load.c32 2016"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 153904
		, "size": 5
	}, {
		"instruction": "and.b32"
		, "name": "and.b32"
		, "code": "0x31"
		, "offs": 153909
		, "size": 1
	}, {
		"instruction": "or.b32"
		, "name": "or.b32"
		, "code": "0x32"
		, "offs": 153910
		, "size": 1
	}, {
		"instruction": "dup.x1 sp(1)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 153911
		, "size": 2
	}, {
		"instruction": "b32.sar 0x003"
		, "name": "b32."
		, "code": "0x3f"
		, "offs": 153913
		, "size": 2
	}, {
		"instruction": "b32.and 0x01f"
		, "name": "b32."
		, "code": "0x3f"
		, "offs": 153915
		, "size": 2
	}, {
		"instruction": "or.b32"
		, "name": "or.b32"
		, "code": "0x32"
		, "offs": 153917
		, "size": 1
	}, {
		"instruction": "dup.x1 sp(3)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 153918
		, "size": 2
	}, {
		"instruction": "b32.shl 0x010"
		, "name": "b32."
		, "code": "0x3f"
		, "offs": 153920
		, "size": 2
	}, {
		"instruction": "load.c32 16711680"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 153922
		, "size": 5
	}, {
		"instruction": "and.b32"
		, "name": "and.b32"
		, "code": "0x31"
		, "offs": 153927
		, "size": 1
	}, {
		"instruction": "dup.x1 sp(3)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 153928
		, "size": 2
	}, {
		"instruction": "b32.shl 0x008"
		, "name": "b32."
		, "code": "0x3f"
		, "offs": 153930
		, "size": 2
	}, {
		"instruction": "load.c32 65280"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 153932
		, "size": 5
	}, {
		"instruction": "and.b32"
		, "name": "and.b32"
		, "code": "0x31"
		, "offs": 153937
		, "size": 1
	}, {
		"instruction": "or.b32"
		, "name": "or.b32"
		, "code": "0x32"
		, "offs": 153938
		, "size": 1
	}, {
		"instruction": "dup.x1 sp(2)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 153939
		, "size": 2
	}, {
		"instruction": "b32.and 0x0ff"
		, "name": "b32."
		, "code": "0x3f"
		, "offs": 153941
		, "size": 2
	}, {
		"instruction": "or.b32"
		, "name": "or.b32"
		, "code": "0x32"
		, "offs": 153943
		, "size": 1
	}, {
		"instruction": "dup.x1 sp(1)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 153944
		, "size": 2
	}, {
		"instruction": "load.c32 11"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 153946
		, "size": 5
	}, {
		"instruction": "load.c32 5"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 153951
		, "size": 5
	}, {
		"instruction": "nfc(17)"
		, "name": "nfc"
		, "code": "0x01"
		, "offs": 153956
		, "size": 4
	}, {
		"instruction": "dup.x1 sp(2)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 153960
		, "size": 2
	}, {
		"instruction": "load.c32 5"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 153962
		, "size": 5
	}, {
		"instruction": "load.c32 6"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 153967
		, "size": 5
	}, {
		"instruction": "nfc(17)"
		, "name": "nfc"
		, "code": "0x01"
		, "offs": 153972
		, "size": 4
	}, {
		"instruction": "dup.x1 sp(3)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 153976
		, "size": 2
	}, {
		"instruction": "load.c32 0"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 153978
		, "size": 5
	}, {
		"instruction": "load.c32 5"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 153983
		, "size": 5
	}, {
		"instruction": "nfc(17)"
		, "name": "nfc"
		, "code": "0x01"
		, "offs": 153988
		, "size": 4
	}, {
		"instruction": "dup.x1 sp(4)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 153992
		, "size": 2
	}, {
		"instruction": "load.c32 11"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 153994
		, "size": 5
	}, {
		"instruction": "load.c32 5"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 153999
		, "size": 5
	}, {
		"instruction": "nfc(18)"
		, "name": "nfc"
		, "code": "0x01"
		, "offs": 154004
		, "size": 4
	}, {
		"instruction": "dup.x1 sp(5)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 154008
		, "size": 2
	}, {
		"instruction": "load.c32 5"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 154010
		, "size": 5
	}, {
		"instruction": "load.c32 6"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 154015
		, "size": 5
	}, {
		"instruction": "nfc(18)"
		, "name": "nfc"
		, "code": "0x01"
		, "offs": 154020
		, "size": 4
	}, {
		"instruction": "dup.x1 sp(6)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 154024
		, "size": 2
	}, {
		"instruction": "load.c32 0"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 154026
		, "size": 5
	}, {
		"instruction": "load.c32 5"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 154031
		, "size": 5
	}, {
		"instruction": "nfc(18)"
		, "name": "nfc"
		, "code": "0x01"
		, "offs": 154036
		, "size": 4
	}, {
		"instruction": "dup.x1 sp(6)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 154040
		, "size": 2
	}, {
		"instruction": "load.c32 16"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 154042
		, "size": 5
	}, {
		"instruction": "load.c32 8"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 154047
		, "size": 5
	}, {
		"instruction": "nfc(17)"
		, "name": "nfc"
		, "code": "0x01"
		, "offs": 154052
		, "size": 4
	}, {
		"instruction": "dup.x1 sp(7)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 154056
		, "size": 2
	}, {
		"instruction": "load.c32 8"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 154058
		, "size": 5
	}, {
		"instruction": "load.c32 8"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 154063
		, "size": 5
	}, {
		"instruction": "nfc(17)"
		, "name": "nfc"
		, "code": "0x01"
		, "offs": 154068
		, "size": 4
	}, {
		"instruction": "dup.x1 sp(8)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 154072
		, "size": 2
	}, {
		"instruction": "load.c32 0"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 154074
		, "size": 5
	}, {
		"instruction": "load.c32 8"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 154079
		, "size": 5
	}, {
		"instruction": "nfc(17)"
		, "name": "nfc"
		, "code": "0x01"
		, "offs": 154084
		, "size": 4
	}, {
		"instruction": "dup.x1 sp(9)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 154088
		, "size": 2
	}, {
		"instruction": "load.c32 16"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 154090
		, "size": 5
	}, {
		"instruction": "load.c32 8"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 154095
		, "size": 5
	}, {
		"instruction": "nfc(18)"
		, "name": "nfc"
		, "code": "0x01"
		, "offs": 154100
		, "size": 4
	}, {
		"instruction": "dup.x1 sp(10)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 154104
		, "size": 2
	}, {
		"instruction": "load.c32 8"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 154106
		, "size": 5
	}, {
		"instruction": "load.c32 8"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 154111
		, "size": 5
	}, {
		"instruction": "nfc(18)"
		, "name": "nfc"
		, "code": "0x01"
		, "offs": 154116
		, "size": 4
	}, {
		"instruction": "dup.x1 sp(11)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 154120
		, "size": 2
	}, {
		"instruction": "load.c32 0"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 154122
		, "size": 5
	}, {
		"instruction": "load.c32 8"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 154127
		, "size": 5
	}, {
		"instruction": "nfc(18)"
		, "name": "nfc"
		, "code": "0x01"
		, "offs": 154132
		, "size": 4
	}, {
		"instruction": "dup.x2 sp(21)"
		, "name": "dup.x2"
		, "code": "0x13"
		, "offs": 154136
		, "size": 2
	}, {
		"instruction": "load.f64 2.000000"
		, "name": "load.f64"
		, "code": "0x1e"
		, "offs": 154138
		, "size": 9
	}, {
		"instruction": "div.f64"
		, "name": "div.f64"
		, "code": "0x84"
		, "offs": 154147
		, "size": 1
	}, {
		"instruction": "nfc(29)"
		, "name": "nfc"
		, "code": "0x01"
		, "offs": 154148
		, "size": 4
	}, {
		"instruction": "dup.x2 sp(23)"
		, "name": "dup.x2"
		, "code": "0x13"
		, "offs": 154152
		, "size": 2
	}, {
		"instruction": "load.f64 2.000000"
		, "name": "load.f64"
		, "code": "0x1e"
		, "offs": 154154
		, "size": 9
	}, {
		"instruction": "div.f64"
		, "name": "div.f64"
		, "code": "0x84"
		, "offs": 154163
		, "size": 1
	}, {
		"instruction": "nfc(30)"
		, "name": "nfc"
		, "code": "0x01"
		, "offs": 154164
		, "size": 4
	}, {
		"instruction": "dup.x2 sp(25)"
		, "name": "dup.x2"
		, "code": "0x13"
		, "offs": 154168
		, "size": 2
	}, {
		"instruction": "load.f64 4.000000"
		, "name": "load.f64"
		, "code": "0x1e"
		, "offs": 154170
		, "size": 9
	}, {
		"instruction": "div.f64"
		, "name": "div.f64"
		, "code": "0x84"
		, "offs": 154179
		, "size": 1
	}, {
		"instruction": "nfc(31)"
		, "name": "nfc"
		, "code": "0x01"
		, "offs": 154180
		, "size": 4
	}, {
		"instruction": "dup.x2 sp(25)"
		, "name": "dup.x2"
		, "code": "0x13"
		, "offs": 154184
		, "size": 2
	}, {
		"instruction": "dup.x2 sp(27)"
		, "name": "dup.x2"
		, "code": "0x13"
		, "offs": 154186
		, "size": 2
	}, {
		"instruction": "mul.f64"
		, "name": "mul.f64"
		, "code": "0x83"
		, "offs": 154188
		, "size": 1
	}, {
		"instruction": "dup.x2 sp(27)"
		, "name": "dup.x2"
		, "code": "0x13"
		, "offs": 154189
		, "size": 2
	}, {
		"instruction": "mul.f64"
		, "name": "mul.f64"
		, "code": "0x83"
		, "offs": 154191
		, "size": 1
	}, {
		"instruction": "nfc(32)"
		, "name": "nfc"
		, "code": "0x01"
		, "offs": 154192
		, "size": 4
	}, {
		"instruction": "load.f64 1.000000"
		, "name": "load.f64"
		, "code": "0x1e"
		, "offs": 154196
		, "size": 9
	}, {
		"instruction": "nfc(33)"
		, "name": "nfc"
		, "code": "0x01"
		, "offs": 154205
		, "size": 4
	}, {
		"instruction": "dup.x2 sp(31)"
		, "name": "dup.x2"
		, "code": "0x13"
		, "offs": 154209
		, "size": 2
	}, {
		"instruction": "dup.x2 sp(33)"
		, "name": "dup.x2"
		, "code": "0x13"
		, "offs": 154211
		, "size": 2
	}, {
		"instruction": "mul.f64"
		, "name": "mul.f64"
		, "code": "0x83"
		, "offs": 154213
		, "size": 1
	}, {
		"instruction": "load.f64 0.500000"
		, "name": "load.f64"
		, "code": "0x1e"
		, "offs": 154214
		, "size": 9
	}, {
		"instruction": "nfc(34)"
		, "name": "nfc"
		, "code": "0x01"
		, "offs": 154223
		, "size": 4
	}, {
		"instruction": "dup.x2 sp(33)"
		, "name": "dup.x2"
		, "code": "0x13"
		, "offs": 154227
		, "size": 2
	}, {
		"instruction": "dup.x2 sp(35)"
		, "name": "dup.x2"
		, "code": "0x13"
		, "offs": 154229
		, "size": 2
	}, {
		"instruction": "mul.f64"
		, "name": "mul.f64"
		, "code": "0x83"
		, "offs": 154231
		, "size": 1
	}, {
		"instruction": "nfc(35)"
		, "name": "nfc"
		, "code": "0x01"
		, "offs": 154232
		, "size": 4
	}, {
		"instruction": "dup.x2 sp(35)"
		, "name": "dup.x2"
		, "code": "0x13"
		, "offs": 154236
		, "size": 2
	}, {
		"instruction": "load.f64 1.000000"
		, "name": "load.f64"
		, "code": "0x1e"
		, "offs": 154238
		, "size": 9
	}, {
		"instruction": "nfc(36)"
		, "name": "nfc"
		, "code": "0x01"
		, "offs": 154247
		, "size": 4
	}, {
		"instruction": "dup.x1 sp(34)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 154251
		, "size": 2
	}, {
		"instruction": "load.f32 2.000000"
		, "name": "load.f32"
		, "code": "0x1d"
		, "offs": 154253
		, "size": 5
	}, {
		"instruction": "div.f32"
		, "name": "div.f32"
		, "code": "0x74"
		, "offs": 154258
		, "size": 1
	}, {
		"instruction": "nfc(21)"
		, "name": "nfc"
		, "code": "0x01"
		, "offs": 154259
		, "size": 4
	}, {
		"instruction": "dup.x1 sp(35)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 154263
		, "size": 2
	}, {
		"instruction": "load.f32 2.000000"
		, "name": "load.f32"
		, "code": "0x1d"
		, "offs": 154265
		, "size": 5
	}, {
		"instruction": "div.f32"
		, "name": "div.f32"
		, "code": "0x74"
		, "offs": 154270
		, "size": 1
	}, {
		"instruction": "nfc(22)"
		, "name": "nfc"
		, "code": "0x01"
		, "offs": 154271
		, "size": 4
	}, {
		"instruction": "dup.x1 sp(36)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 154275
		, "size": 2
	}, {
		"instruction": "load.f32 4.000000"
		, "name": "load.f32"
		, "code": "0x1d"
		, "offs": 154277
		, "size": 5
	}, {
		"instruction": "div.f32"
		, "name": "div.f32"
		, "code": "0x74"
		, "offs": 154282
		, "size": 1
	}, {
		"instruction": "nfc(23)"
		, "name": "nfc"
		, "code": "0x01"
		, "offs": 154283
		, "size": 4
	}, {
		"instruction": "dup.x1 sp(36)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 154287
		, "size": 2
	}, {
		"instruction": "dup.x1 sp(37)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 154289
		, "size": 2
	}, {
		"instruction": "mul.f32"
		, "name": "mul.f32"
		, "code": "0x73"
		, "offs": 154291
		, "size": 1
	}, {
		"instruction": "dup.x1 sp(37)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 154292
		, "size": 2
	}, {
		"instruction": "mul.f32"
		, "name": "mul.f32"
		, "code": "0x73"
		, "offs": 154294
		, "size": 1
	}, {
		"instruction": "nfc(24)"
		, "name": "nfc"
		, "code": "0x01"
		, "offs": 154295
		, "size": 4
	}, {
		"instruction": "load.f32 1.000000"
		, "name": "load.f32"
		, "code": "0x1d"
		, "offs": 154299
		, "size": 5
	}, {
		"instruction": "nfc(25)"
		, "name": "nfc"
		, "code": "0x01"
		, "offs": 154304
		, "size": 4
	}, {
		"instruction": "dup.x1 sp(39)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 154308
		, "size": 2
	}, {
		"instruction": "dup.x1 sp(40)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 154310
		, "size": 2
	}, {
		"instruction": "mul.f32"
		, "name": "mul.f32"
		, "code": "0x73"
		, "offs": 154312
		, "size": 1
	}, {
		"instruction": "load.f32 0.500000"
		, "name": "load.f32"
		, "code": "0x1d"
		, "offs": 154313
		, "size": 5
	}, {
		"instruction": "nfc(26)"
		, "name": "nfc"
		, "code": "0x01"
		, "offs": 154318
		, "size": 4
	}, {
		"instruction": "dup.x1 sp(40)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 154322
		, "size": 2
	}, {
		"instruction": "dup.x1 sp(41)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 154324
		, "size": 2
	}, {
		"instruction": "mul.f32"
		, "name": "mul.f32"
		, "code": "0x73"
		, "offs": 154326
		, "size": 1
	}, {
		"instruction": "nfc(27)"
		, "name": "nfc"
		, "code": "0x01"
		, "offs": 154327
		, "size": 4
	}, {
		"instruction": "dup.x1 sp(41)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 154331
		, "size": 2
	}, {
		"instruction": "load.f32 1.000000"
		, "name": "load.f32"
		, "code": "0x1d"
		, "offs": 154333
		, "size": 5
	}, {
		"instruction": "nfc(28)"
		, "name": "nfc"
		, "code": "0x01"
		, "offs": 154338
		, "size": 4
	}, {
		"instruction": "load.ref .000000"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 154342
		, "size": 5
	}, {
		"instruction": "load.c32 1024"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 154347
		, "size": 5
	}, {
		"instruction": "nfc(7)"
		, "name": "nfc"
		, "code": "0x01"
		, "offs": 154352
		, "size": 4
	}, {
		"instruction": "load.ref .000000"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 154356
		, "size": 5
	}, {
		"instruction": "load.c32 80"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 154361
		, "size": 5
	}, {
		"instruction": "nfc(7)"
		, "name": "nfc"
		, "code": "0x01"
		, "offs": 154366
		, "size": 4
	}, {
		"instruction": "load.ref .000000"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 154370
		, "size": 5
	}, {
		"instruction": "load.c32 160"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 154375
		, "size": 5
	}, {
		"instruction": "nfc(7)"
		, "name": "nfc"
		, "code": "0x01"
		, "offs": 154380
		, "size": 4
	}, {
		"instruction": "load.ref .000000"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 154384
		, "size": 5
	}, {
		"instruction": "load.c32 820"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 154389
		, "size": 5
	}, {
		"instruction": "nfc(7)"
		, "name": "nfc"
		, "code": "0x01"
		, "offs": 154394
		, "size": 4
	}, {
		"instruction": "dup.x1 sp(3)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 154398
		, "size": 2
	}, {
		"instruction": "load.c32 0"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 154400
		, "size": 5
	}, {
		"instruction": "load.c32 1024"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 154405
		, "size": 5
	}, {
		"instruction": "nfc(8)"
		, "name": "nfc"
		, "code": "0x01"
		, "offs": 154410
		, "size": 4
	}, {
		"instruction": "inc.sp(-4)"
		, "name": "inc.sp"
		, "code": "0x10"
		, "offs": 154414
		, "size": 4
	}, {
		"instruction": "dup.x1 sp(3)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 154418
		, "size": 2
	}, {
		"instruction": "dup.x1 sp(2)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 154420
		, "size": 2
	}, {
		"instruction": "load.c32 160"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 154422
		, "size": 5
	}, {
		"instruction": "nfc(9)"
		, "name": "nfc"
		, "code": "0x01"
		, "offs": 154427
		, "size": 4
	}, {
		"instruction": "inc.sp(-4)"
		, "name": "inc.sp"
		, "code": "0x10"
		, "offs": 154431
		, "size": 4
	}, {
		"instruction": "dup.x1 sp(3)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 154435
		, "size": 2
	}, {
		"instruction": "load.c32 0"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 154437
		, "size": 5
	}, {
		"instruction": "nfc(7)"
		, "name": "nfc"
		, "code": "0x01"
		, "offs": 154442
		, "size": 4
	}, {
		"instruction": "inc.sp(-4)"
		, "name": "inc.sp"
		, "code": "0x10"
		, "offs": 154446
		, "size": 4
	}, {
		"instruction": "dup.x1 sp(2)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 154450
		, "size": 2
	}, {
		"instruction": "load.c32 0"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 154452
		, "size": 5
	}, {
		"instruction": "nfc(7)"
		, "name": "nfc"
		, "code": "0x01"
		, "offs": 154457
		, "size": 4
	}, {
		"instruction": "inc.sp(-4)"
		, "name": "inc.sp"
		, "code": "0x10"
		, "offs": 154461
		, "size": 4
	}, {
		"instruction": "dup.x1 sp(1)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 154465
		, "size": 2
	}, {
		"instruction": "load.c32 0"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 154467
		, "size": 5
	}, {
		"instruction": "nfc(7)"
		, "name": "nfc"
		, "code": "0x01"
		, "offs": 154472
		, "size": 4
	}, {
		"instruction": "inc.sp(-4)"
		, "name": "inc.sp"
		, "code": "0x10"
		, "offs": 154476
		, "size": 4
	}, {
		"instruction": "dup.x1 sp(0)"
		, "name": "dup.x1"
		, "code": "0x12"
		, "offs": 154480
		, "size": 2
	}, {
		"instruction": "load.c32 0"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 154482
		, "size": 5
	}, {
		"instruction": "nfc(7)"
		, "name": "nfc"
		, "code": "0x01"
		, "offs": 154487
		, "size": 4
	}, {
		"instruction": "inc.sp(-4)"
		, "name": "inc.sp"
		, "code": "0x10"
		, "offs": 154491
		, "size": 4
	}, {
		"instruction": "load.c64 42"
		, "name": "load.c64"
		, "code": "0x1c"
		, "offs": 154495
		, "size": 9
	}, {
		"instruction": "load.c64 96"
		, "name": "load.c64"
		, "code": "0x1c"
		, "offs": 154504
		, "size": 9
	}, {
		"instruction": "load.ref .00d5b7"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 154513
		, "size": 5
	}, {
		"instruction": "load.c32 26"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 154518
		, "size": 5
	}, {
		"instruction": "load.c32 3"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 154523
		, "size": 5
	}, {
		"instruction": "load.ref .023cd5"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 154528
		, "size": 5
	}, {
		"instruction": "load.ref .000400"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 154533
		, "size": 5
	}, {
		"instruction": "load.sp(+28)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 154538
		, "size": 4
	}, {
		"instruction": "load.c32 0"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 154542
		, "size": 5
	}, {
		"instruction": "nfc(5)"
		, "name": "nfc"
		, "code": "0x01"
		, "offs": 154547
		, "size": 4
	}, {
		"instruction": "load.ref .00d5b7"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 154551
		, "size": 5
	}, {
		"instruction": "load.c32 27"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 154556
		, "size": 5
	}, {
		"instruction": "load.c32 3"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 154561
		, "size": 5
	}, {
		"instruction": "load.ref .023cda"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 154566
		, "size": 5
	}, {
		"instruction": "load.ref .000400"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 154571
		, "size": 5
	}, {
		"instruction": "load.sp(+20)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 154576
		, "size": 4
	}, {
		"instruction": "load.c32 0"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 154580
		, "size": 5
	}, {
		"instruction": "nfc(5)"
		, "name": "nfc"
		, "code": "0x01"
		, "offs": 154585
		, "size": 4
	}, {
		"instruction": "load.sp(+0)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 154589
		, "size": 4
	}, {
		"instruction": "load.sp(+12)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 154593
		, "size": 4
	}, {
		"instruction": "load.c32 8"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 154597
		, "size": 5
	}, {
		"instruction": "nfc(9)"
		, "name": "nfc"
		, "code": "0x01"
		, "offs": 154602
		, "size": 4
	}, {
		"instruction": "inc.sp(-4)"
		, "name": "inc.sp"
		, "code": "0x10"
		, "offs": 154606
		, "size": 4
	}, {
		"instruction": "load.sp(+8)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 154610
		, "size": 4
	}, {
		"instruction": "load.c32 0"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 154614
		, "size": 5
	}, {
		"instruction": "load.c32 8"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 154619
		, "size": 5
	}, {
		"instruction": "nfc(8)"
		, "name": "nfc"
		, "code": "0x01"
		, "offs": 154624
		, "size": 4
	}, {
		"instruction": "inc.sp(-4)"
		, "name": "inc.sp"
		, "code": "0x10"
		, "offs": 154628
		, "size": 4
	}, {
		"instruction": "load.ref .00d5b7"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 154632
		, "size": 5
	}, {
		"instruction": "load.c32 32"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 154637
		, "size": 5
	}, {
		"instruction": "load.c32 3"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 154642
		, "size": 5
	}, {
		"instruction": "load.ref .023cd5"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 154647
		, "size": 5
	}, {
		"instruction": "load.ref .000400"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 154652
		, "size": 5
	}, {
		"instruction": "load.sp(+28)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 154657
		, "size": 4
	}, {
		"instruction": "load.c32 0"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 154661
		, "size": 5
	}, {
		"instruction": "nfc(5)"
		, "name": "nfc"
		, "code": "0x01"
		, "offs": 154666
		, "size": 4
	}, {
		"instruction": "load.ref .00d5b7"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 154670
		, "size": 5
	}, {
		"instruction": "load.c32 33"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 154675
		, "size": 5
	}, {
		"instruction": "load.c32 3"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 154680
		, "size": 5
	}, {
		"instruction": "load.ref .023cda"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 154685
		, "size": 5
	}, {
		"instruction": "load.ref .000400"
		, "name": "load.ref"
		, "code": "0x1f"
		, "offs": 154690
		, "size": 5
	}, {
		"instruction": "load.sp(+20)"
		, "name": "load.sp"
		, "code": "0x11"
		, "offs": 154695
		, "size": 4
	}, {
		"instruction": "load.c32 0"
		, "name": "load.c32"
		, "code": "0x1b"
		, "offs": 154699
		, "size": 5
	}, {
		"instruction": "nfc(5)"
		, "name": "nfc"
		, "code": "0x01"
		, "offs": 154704
		, "size": 4
	}, {
		"instruction": "nfc(0)"
		, "name": "nfc"
		, "code": "0x01"
		, "offs": 154708
		, "size": 4
	}]
}]
, "profile": {
	"callTreeData": ["ctTickIndex", "ctHeapIndex", "ctFunIndex"]
	, "callTree": [
434785,0,149688,
 434799,0,25080,
 434848,0,-1,
 434869,0,25080,
 434987,0,-1,
 435007,0,25080,
 435131,0,-1,
 435151,0,25080,
 435275,0,-1,
 435294,0,25080,
 435419,0,-1,
 435438,0,25080,
 435567,0,-1,
 435587,0,25080,
 435615,0,-1,
 435634,0,25080,
 435668,0,-1,
 435688,0,25080,
 435722,0,-1,
 435742,0,25080,
 435774,0,-1,
 435795,0,25080,
 435845,0,-1,
 435869,0,35512,
 435892,0,-1,
 435913,0,23320,
 435937,0,-1,
 435959,0,22392,
 435978,0,-1,
 435996,0,22856,
 436016,0,-1,
 436034,0,21928,
 436057,0,-1,
 436079,0,23320,
 436098,0,-1,
 436117,0,22392,
 436139,0,-1,
 436158,0,22856,
 436177,0,-1,
 436196,0,21928,
 436218,0,-1,
 436240,0,21928,
 436259,0,-1,
 436278,0,149537,
 436301,0,-1,
 436325,0,149537,
 436349,0,-1,
 436372,0,149545,
 436397,0,-1,
 436421,0,149545,
 436445,0,-1,
 436469,0,149553,
  436493,0,149553,
   436518,0,149553,
    436543,0,149553,
     436567,0,149553,
      436591,0,149553,
       436615,0,149553,
        436639,0,149553,
         436664,0,149553,
          436688,0,149553,
           436712,0,149553,
            436745,0,149553,
             436770,0,149553,
             436794,0,-1,
             436818,0,149553,
             436843,0,-1,
            436867,0,-1,
            436891,0,149553,
            436915,0,-1,
           436940,0,-1,
           436964,0,149553,
            436989,0,149553,
            437013,0,-1,
            437037,0,149553,
            437061,0,-1,
           437085,0,-1,
          437109,0,-1,
          437133,0,149553,
           437157,0,149553,
            437181,0,149553,
            437206,0,-1,
            437230,0,149553,
            437254,0,-1,
           437278,0,-1,
           437316,0,149553,
           437340,0,-1,
          437364,0,-1,
         437387,0,-1,
         437411,0,149553,
          437435,0,149553,
           437459,0,149553,
            437483,0,149553,
            437507,0,-1,
            437531,0,149553,
            437556,0,-1,
           437579,0,-1,
           437603,0,149553,
           437627,0,-1,
          437651,0,-1,
          437675,0,149553,
           437699,0,149553,
           437723,0,-1,
           437747,0,149553,
           437771,0,-1,
          437795,0,-1,
         437819,0,-1,
        437843,0,-1,
        437866,0,149553,
         437890,0,149553,
          437915,0,149553,
           437939,0,149553,
            437963,0,149553,
            437987,0,-1,
            438010,0,149553,
            438035,0,-1,
           438059,0,-1,
           438083,0,149553,
           438107,0,-1,
          438130,0,-1,
          438154,0,149553,
           438178,0,149553,
           438202,0,-1,
           438226,0,149553,
           438250,0,-1,
          438274,0,-1,
         438298,0,-1,
         438322,0,149553,
          438346,0,149553,
           438370,0,149553,
           438394,0,-1,
           438418,0,149553,
           438442,0,-1,
          438465,0,-1,
          438489,0,149553,
          438513,0,-1,
         438537,0,-1,
        438561,0,-1,
       438585,0,-1,
       438608,0,149553,
        438632,0,149553,
         438656,0,149553,
          438680,0,149553,
           438704,0,149553,
            438728,0,149553,
            438752,0,-1,
            438776,0,149553,
            438800,0,-1,
           438824,0,-1,
           438848,0,149553,
           438872,0,-1,
          438895,0,-1,
          438919,0,149553,
           438943,0,149553,
           438967,0,-1,
           438991,0,149553,
           439015,0,-1,
          439039,0,-1,
         439063,0,-1,
         439086,0,149553,
          439110,0,149553,
           439133,0,149553,
           439157,0,-1,
           439181,0,149553,
           439205,0,-1,
          439229,0,-1,
          439253,0,149553,
          439276,0,-1,
         439300,0,-1,
        439324,0,-1,
        439347,0,149553,
         439371,0,149553,
          439395,0,149553,
           439419,0,149553,
           439442,0,-1,
           439466,0,149553,
           439490,0,-1,
          439513,0,-1,
          439537,0,149553,
          439561,0,-1,
         439585,0,-1,
         439609,0,149553,
          439633,0,149553,
          439657,0,-1,
          439680,0,149553,
          439705,0,-1,
         439728,0,-1,
        439752,0,-1,
       439776,0,-1,
      439799,0,-1,
      439823,0,149553,
       439847,0,149553,
        439871,0,149553,
         439895,0,149553,
          439919,0,149553,
           439943,0,149553,
            439986,0,149553,
            440010,0,-1,
            440034,0,149553,
            440059,0,-1,
           440084,0,-1,
           440108,0,149553,
           440133,0,-1,
          440157,0,-1,
          440181,0,149553,
           440205,0,149553,
           440230,0,-1,
           440254,0,149553,
           440279,0,-1,
          440303,0,-1,
         440327,0,-1,
         440351,0,149553,
          440375,0,149553,
           440399,0,149553,
           440423,0,-1,
           440447,0,149553,
           440471,0,-1,
          440495,0,-1,
          440519,0,149553,
          440543,0,-1,
         440567,0,-1,
        440591,0,-1,
        440614,0,149553,
         440638,0,149553,
          440662,0,149553,
           440687,0,149553,
           440711,0,-1,
           440744,0,149553,
           440781,0,-1,
          440804,0,-1,
          440828,0,149553,
          440852,0,-1,
         440876,0,-1,
         440899,0,149553,
          440923,0,149553,
          440948,0,-1,
          440972,0,149553,
          440995,0,-1,
         441018,0,-1,
        441042,0,-1,
       441065,0,-1,
       441088,0,149553,
        441113,0,149553,
         441138,0,149553,
          441161,0,149553,
           441185,0,149553,
           441209,0,-1,
           441232,0,149553,
           441257,0,-1,
          441280,0,-1,
          441303,0,149553,
          441327,0,-1,
         441350,0,-1,
         441374,0,149553,
          441397,0,149553,
          441420,0,-1,
          441443,0,149553,
          441467,0,-1,
         441490,0,-1,
        441513,0,-1,
        441536,0,149553,
         441559,0,149553,
          441583,0,149553,
          441606,0,-1,
          441629,0,149553,
          441653,0,-1,
         441676,0,-1,
         441699,0,149553,
         441722,0,-1,
        441745,0,-1,
       441768,0,-1,
      441792,0,-1,
     441815,0,-1,
     441838,0,149553,
      441861,0,149553,
       441884,0,149553,
        441907,0,149553,
         441930,0,149553,
          441954,0,149553,
           441977,0,149553,
            442000,0,149553,
            442024,0,-1,
            442047,0,149553,
            442070,0,-1,
           442093,0,-1,
           442116,0,149553,
           442139,0,-1,
          442162,0,-1,
          442186,0,149553,
           442209,0,149553,
           442232,0,-1,
           442255,0,149553,
           442279,0,-1,
          442302,0,-1,
         442325,0,-1,
         442348,0,149553,
          442371,0,149553,
           442394,0,149553,
           442418,0,-1,
           442441,0,149553,
           442465,0,-1,
          442487,0,-1,
          442510,0,149553,
          442534,0,-1,
         442557,0,-1,
        442580,0,-1,
        442602,0,149553,
         442625,0,149553,
          442649,0,149553,
           442673,0,149553,
           442696,0,-1,
           442719,0,149553,
           442742,0,-1,
          442767,0,-1,
          442790,0,149553,
          442813,0,-1,
         442836,0,-1,
         442859,0,149553,
          442882,0,149553,
          442906,0,-1,
          442929,0,149553,
          442952,0,-1,
         442975,0,-1,
        442998,0,-1,
       443022,0,-1,
       443045,0,149553,
        443068,0,149553,
         443092,0,149553,
          443115,0,149553,
           443138,0,149553,
           443161,0,-1,
           443185,0,149553,
           443208,0,-1,
          443231,0,-1,
          443254,0,149553,
          443277,0,-1,
         443300,0,-1,
         443323,0,149553,
          443346,0,149553,
          443369,0,-1,
          443392,0,149553,
          443428,0,-1,
         443451,0,-1,
        443473,0,-1,
        443495,0,149553,
         443518,0,149553,
          443540,0,149553,
          443563,0,-1,
          443585,0,149553,
          443607,0,-1,
         443630,0,-1,
         443652,0,149553,
         443674,0,-1,
        443696,0,-1,
       443718,0,-1,
      443740,0,-1,
      443762,0,149553,
       443803,0,149553,
        443846,0,149553,
         443886,0,149553,
          443923,0,149553,
           443965,0,149553,
           444023,0,-1,
           444048,0,149553,
           444087,0,-1,
          444138,0,-1,
          444176,0,149553,
          444200,0,-1,
         444223,0,-1,
         444246,0,149553,
          444270,0,149553,
          444294,0,-1,
          444317,0,149553,
          444340,0,-1,
         444364,0,-1,
        444387,0,-1,
        444411,0,149553,
         444436,0,149553,
          444461,0,149553,
          444485,0,-1,
          444508,0,149553,
          444533,0,-1,
         444556,0,-1,
         444579,0,149553,
         444603,0,-1,
        444626,0,-1,
       444650,0,-1,
       444673,0,149553,
        444697,0,149553,
         444743,0,149553,
          444770,0,149553,
          444807,0,-1,
          444831,0,149553,
          444854,0,-1,
         444877,0,-1,
         444901,0,149553,
         444925,0,-1,
        444948,0,-1,
        444971,0,149553,
         444994,0,149553,
         445017,0,-1,
         445040,0,149553,
         445064,0,-1,
        445087,0,-1,
       445123,0,-1,
      445145,0,-1,
     445168,0,-1,
    445190,0,-1,
    445212,0,149553,
     445235,0,149553,
      445258,0,149553,
       445281,0,149553,
        445303,0,149553,
         445326,0,149553,
          445348,0,149553,
           445370,0,149553,
            445393,0,149553,
            445416,0,-1,
            445439,0,149553,
            445462,0,-1,
           445485,0,-1,
           445508,0,149553,
           445531,0,-1,
          445554,0,-1,
          445576,0,149553,
           445599,0,149553,
           445621,0,-1,
           445644,0,149553,
           445667,0,-1,
          445690,0,-1,
         445712,0,-1,
         445734,0,149553,
          445757,0,149553,
           445780,0,149553,
           445803,0,-1,
           445825,0,149553,
           445848,0,-1,
          445870,0,-1,
          445893,0,149553,
          445916,0,-1,
         445939,0,-1,
        445961,0,-1,
        445983,0,149553,
         446007,0,149553,
          446029,0,149553,
           446052,0,149553,
           446077,0,-1,
           446100,0,149553,
           446123,0,-1,
          446145,0,-1,
          446168,0,149553,
          446191,0,-1,
         446213,0,-1,
         446236,0,149553,
          446259,0,149553,
          446282,0,-1,
          446304,0,149553,
          446327,0,-1,
         446350,0,-1,
        446373,0,-1,
       446395,0,-1,
       446418,0,149553,
        446440,0,149553,
         446463,0,149553,
          446485,0,149553,
           446508,0,149553,
           446530,0,-1,
           446553,0,149553,
           446576,0,-1,
          446598,0,-1,
          446621,0,149553,
          446643,0,-1,
         446666,0,-1,
         446688,0,149553,
          446710,0,149553,
          446733,0,-1,
          446755,0,149553,
          446778,0,-1,
         446800,0,-1,
        446822,0,-1,
        446844,0,149553,
         446867,0,149553,
          446889,0,149553,
          446912,0,-1,
          446934,0,149553,
          446957,0,-1,
         446979,0,-1,
         447002,0,149553,
         447024,0,-1,
        447047,0,-1,
       447069,0,-1,
      447091,0,-1,
      447113,0,149553,
       447135,0,149553,
        447158,0,149553,
         447181,0,149553,
          447203,0,149553,
           447226,0,149553,
           447248,0,-1,
           447271,0,149553,
           447293,0,-1,
          447334,0,-1,
          447358,0,149553,
          447382,0,-1,
         447440,0,-1,
         447476,0,149553,
          447500,0,149553,
          447523,0,-1,
          447558,0,149553,
          447580,0,-1,
         447603,0,-1,
        447625,0,-1,
        447647,0,149553,
         447670,0,149553,
          447692,0,149553,
          447715,0,-1,
          447737,0,149553,
          447760,0,-1,
         447782,0,-1,
         447804,0,149553,
         447827,0,-1,
        447849,0,-1,
       447871,0,-1,
       447893,0,149553,
        447916,0,149553,
         447938,0,149553,
          447960,0,149553,
          447983,0,-1,
          448005,0,149553,
          448028,0,-1,
         448066,0,-1,
         448089,0,149553,
         448112,0,-1,
        448134,0,-1,
        448156,0,149553,
         448179,0,149553,
         448202,0,-1,
         448224,0,149553,
         448247,0,-1,
        448270,0,-1,
       448292,0,-1,
      448315,0,-1,
     448337,0,-1,
     448360,0,149553,
      448383,0,149553,
       448406,0,149553,
        448428,0,149553,
         448451,0,149553,
          448474,0,149553,
           448497,0,149553,
           448520,0,-1,
           448542,0,149553,
           448565,0,-1,
          448587,0,-1,
          448609,0,149553,
          448632,0,-1,
         448655,0,-1,
         448677,0,149553,
          448700,0,149553,
          448778,0,-1,
          448803,0,149553,
          448839,0,-1,
         448861,0,-1,
        448883,0,-1,
        448906,0,149553,
         448928,0,149553,
          448950,0,149553,
          448973,0,-1,
          448995,0,149553,
          449032,0,-1,
         449074,0,-1,
         449143,0,149553,
         449182,0,-1,
        449206,0,-1,
       449230,0,-1,
       449266,0,149553,
        449290,0,149553,
         449312,0,149553,
          449335,0,149553,
          449357,0,-1,
          449379,0,149553,
          449402,0,-1,
         449425,0,-1,
         449447,0,149553,
         449470,0,-1,
        449510,0,-1,
        449533,0,149553,
         449570,0,149553,
         449612,0,-1,
         449649,0,149553,
         449672,0,-1,
        449695,0,-1,
       449730,0,-1,
      449752,0,-1,
      449775,0,149553,
       449797,0,149553,
        449820,0,149553,
         449842,0,149553,
          449864,0,149553,
          449887,0,-1,
          449909,0,149553,
          449932,0,-1,
         449954,0,-1,
         449976,0,149553,
         449999,0,-1,
        450021,0,-1,
        450044,0,149553,
         450066,0,149553,
         450089,0,-1,
         450111,0,149553,
         450133,0,-1,
        450156,0,-1,
       450178,0,-1,
       450200,0,149553,
        450223,0,149553,
         450245,0,149553,
         450268,0,-1,
         450290,0,149553,
         450313,0,-1,
        450335,0,-1,
        450357,0,149553,
        450380,0,-1,
       450402,0,-1,
      450424,0,-1,
     450447,0,-1,
    450469,0,-1,
   450491,0,-1,
   450513,0,149553,
    450535,0,149553,
     450557,0,149553,
      450580,0,149553,
       450602,0,149553,
        450625,0,149553,
         450647,0,149553,
          450669,0,149553,
           450692,0,149553,
            450714,0,149553,
            450737,0,-1,
            450759,0,149553,
            450781,0,-1,
           450804,0,-1,
           450825,0,149553,
           450847,0,-1,
          450870,0,-1,
          450892,0,149553,
           450915,0,149553,
           450937,0,-1,
           450960,0,149553,
           450982,0,-1,
          451004,0,-1,
         451027,0,-1,
         451049,0,149553,
          451071,0,149553,
           451094,0,149553,
           451117,0,-1,
           451139,0,149553,
           451162,0,-1,
          451184,0,-1,
          451206,0,149553,
          451228,0,-1,
         451250,0,-1,
        451273,0,-1,
        451295,0,149553,
         451317,0,149553,
          451339,0,149553,
           451362,0,149553,
           451384,0,-1,
           451406,0,149553,
           451429,0,-1,
          451451,0,-1,
          451473,0,149553,
          451495,0,-1,
         451517,0,-1,
         451539,0,149553,
          451562,0,149553,
          451584,0,-1,
          451606,0,149553,
          451628,0,-1,
         451651,0,-1,
        451673,0,-1,
       451714,0,-1,
       451736,0,149553,
        451772,0,149553,
         451813,0,149553,
          451836,0,149553,
           451891,0,149553,
           451915,0,-1,
           451970,0,149553,
           451994,0,-1,
          452030,0,-1,
          452053,0,149553,
          452076,0,-1,
         452099,0,-1,
         452122,0,149553,
          452145,0,149553,
          452168,0,-1,
          452191,0,149553,
          452214,0,-1,
         452237,0,-1,
        452260,0,-1,
        452283,0,149553,
         452322,0,149553,
          452345,0,149553,
          452369,0,-1,
          452392,0,149553,
          452415,0,-1,
         452439,0,-1,
         452461,0,149553,
         452485,0,-1,
        452508,0,-1,
       452531,0,-1,
      452554,0,-1,
      452578,0,149553,
       452601,0,149553,
        452627,0,149553,
         452678,0,149553,
          452715,0,149553,
           452738,0,149553,
           452761,0,-1,
           452784,0,149553,
           452808,0,-1,
          452831,0,-1,
          452854,0,149553,
          452878,0,-1,
         452901,0,-1,
         452924,0,149553,
          452947,0,149553,
          452983,0,-1,
          453005,0,149553,
          453028,0,-1,
         453051,0,-1,
        453086,0,-1,
        453124,0,149553,
         453146,0,149553,
          453168,0,149553,
          453190,0,-1,
          453212,0,149553,
          453234,0,-1,
         453255,0,-1,
         453277,0,149553,
         453299,0,-1,
        453320,0,-1,
       453342,0,-1,
       453364,0,149553,
        453386,0,149553,
         453407,0,149553,
          453429,0,149553,
          453451,0,-1,
          453473,0,149553,
          453495,0,-1,
         453516,0,-1,
         453538,0,149553,
         453560,0,-1,
        453582,0,-1,
        453603,0,149553,
         453625,0,149553,
         453647,0,-1,
         453668,0,149553,
         453690,0,-1,
        453712,0,-1,
       453734,0,-1,
      453756,0,-1,
     453777,0,-1,
     453798,0,149553,
      453820,0,149553,
       453842,0,149553,
        453864,0,149553,
         453885,0,149553,
          453907,0,149553,
           453929,0,149553,
           453951,0,-1,
           453972,0,149553,
           453994,0,-1,
          454015,0,-1,
          454036,0,149553,
          454059,0,-1,
         454080,0,-1,
         454102,0,149553,
          454123,0,149553,
          454145,0,-1,
          454167,0,149553,
          454189,0,-1,
         454210,0,-1,
        454231,0,-1,
        454253,0,149553,
         454275,0,149553,
          454297,0,149553,
          454318,0,-1,
          454340,0,149553,
          454362,0,-1,
         454383,0,-1,
         454404,0,149553,
         454426,0,-1,
        454448,0,-1,
       454470,0,-1,
       454491,0,149553,
        454513,0,149553,
         454534,0,149553,
          454556,0,149553,
          454578,0,-1,
          454600,0,149553,
          454622,0,-1,
         454662,0,-1,
         454702,0,149553,
         454756,0,-1,
        454778,0,-1,
        454799,0,149553,
         454821,0,149553,
         454842,0,-1,
         454864,0,149553,
         454886,0,-1,
        454907,0,-1,
       454929,0,-1,
      454950,0,-1,
      454972,0,149553,
       454993,0,149553,
        455015,0,149553,
         455037,0,149553,
          455058,0,149553,
          455080,0,-1,
          455101,0,149553,
          455123,0,-1,
         455145,0,-1,
         455166,0,149553,
         455188,0,-1,
        455209,0,-1,
        455231,0,149553,
         455253,0,149553,
         455275,0,-1,
         455296,0,149553,
         455318,0,-1,
        455339,0,-1,
       455361,0,-1,
       455382,0,149553,
        455404,0,149553,
         455426,0,149553,
         455448,0,-1,
         455469,0,149553,
         455491,0,-1,
        455513,0,-1,
        455534,0,149553,
        455556,0,-1,
       455577,0,-1,
      455599,0,-1,
     455620,0,-1,
    455641,0,-1,
    455663,0,149553,
     455684,0,149553,
      455706,0,149553,
       455728,0,149553,
        455749,0,149553,
         455771,0,149553,
          455793,0,149553,
           455827,0,149553,
           455848,0,-1,
           455869,0,149553,
           455890,0,-1,
          455911,0,-1,
          455931,0,149553,
          455952,0,-1,
         455973,0,-1,
         455994,0,149553,
          456015,0,149553,
          456036,0,-1,
          456056,0,149553,
          456078,0,-1,
         456098,0,-1,
        456119,0,-1,
        456140,0,149553,
         456161,0,149553,
          456182,0,149553,
          456203,0,-1,
          456224,0,149553,
          456256,0,-1,
         456277,0,-1,
         456297,0,149553,
         456319,0,-1,
        456340,0,-1,
       456361,0,-1,
       456382,0,149553,
        456403,0,149553,
         456424,0,149553,
          456445,0,149553,
          456466,0,-1,
          456487,0,149553,
          456509,0,-1,
         456530,0,-1,
         456551,0,149553,
         456572,0,-1,
        456593,0,-1,
        456614,0,149553,
         456640,0,149553,
         456715,0,-1,
         456751,0,149553,
         456774,0,-1,
        456796,0,-1,
       456818,0,-1,
      456853,0,-1,
      456874,0,149553,
       456895,0,149553,
        456916,0,149553,
         456956,0,149553,
          456978,0,149553,
          457019,0,-1,
          457093,0,149553,
          457146,0,-1,
         457169,0,-1,
         457193,0,149553,
         457217,0,-1,
        457251,0,-1,
        457272,0,149553,
         457293,0,149553,
         457315,0,-1,
         457335,0,149553,
         457357,0,-1,
        457377,0,-1,
       457397,0,-1,
       457418,0,149553,
        457439,0,149553,
         457461,0,149553,
         457482,0,-1,
         457503,0,149553,
         457524,0,-1,
        457545,0,-1,
        457566,0,149553,
        457587,0,-1,
       457608,0,-1,
      457629,0,-1,
     457650,0,-1,
     457671,0,149553,
      457711,0,149553,
       457733,0,149553,
        457789,0,149553,
         457811,0,149553,
          457867,0,149553,
          457890,0,-1,
          457946,0,149553,
          457968,0,-1,
         458024,0,-1,
         458060,0,149553,
         458082,0,-1,
        458104,0,-1,
        458127,0,149553,
         458149,0,149553,
         458172,0,-1,
         458213,0,149553,
         458249,0,-1,
        458271,0,-1,
       458294,0,-1,
       458317,0,149553,
        458352,0,149553,
         458374,0,149553,
         458397,0,-1,
         458419,0,149553,
         458441,0,-1,
        458463,0,-1,
        458485,0,149553,
        458508,0,-1,
       458530,0,-1,
      458552,0,-1,
      458574,0,149553,
       458597,0,149553,
        458618,0,149553,
         458641,0,149553,
         458663,0,-1,
         458685,0,149553,
         458708,0,-1,
        458730,0,-1,
        458753,0,149553,
        458775,0,-1,
       458797,0,-1,
       458819,0,149553,
        458841,0,149553,
        458864,0,-1,
        458886,0,149553,
        458920,0,-1,
       458941,0,-1,
      458962,0,-1,
     458983,0,-1,
    459003,0,-1,
   459024,0,-1,
  459045,0,-1,
  459066,0,149553,
   459087,0,149553,
    459108,0,149553,
     459129,0,149553,
      459150,0,149553,
       459171,0,149553,
        459192,0,149553,
         459213,0,149553,
          459234,0,149553,
           459255,0,149553,
            459276,0,149553,
            459329,0,-1,
            459351,0,149553,
            459374,0,-1,
           459396,0,-1,
           459418,0,149553,
           459440,0,-1,
          459463,0,-1,
          459485,0,149553,
           459507,0,149553,
           459529,0,-1,
           459551,0,149553,
           459586,0,-1,
          459607,0,-1,
         459628,0,-1,
         459649,0,149553,
          459670,0,149553,
           459691,0,149553,
           459712,0,-1,
           459733,0,149553,
           459754,0,-1,
          459775,0,-1,
          459795,0,149553,
          459816,0,-1,
         459837,0,-1,
        459858,0,-1,
        459878,0,149553,
         459899,0,149553,
          459920,0,149553,
           459941,0,149553,
           459963,0,-1,
           459984,0,149553,
           460005,0,-1,
          460026,0,-1,
          460046,0,149553,
          460067,0,-1,
         460088,0,-1,
         460109,0,149553,
          460130,0,149553,
          460151,0,-1,
          460172,0,149553,
          460193,0,-1,
         460214,0,-1,
        460235,0,-1,
       460256,0,-1,
       460277,0,149553,
        460298,0,149553,
         460318,0,149553,
          460340,0,149553,
           460361,0,149553,
           460382,0,-1,
           460402,0,149553,
           460424,0,-1,
          460445,0,-1,
          460476,0,149553,
          460498,0,-1,
         460519,0,-1,
         460540,0,149553,
          460561,0,149553,
          460582,0,-1,
          460604,0,149553,
          460629,0,-1,
         460692,0,-1,
        460747,0,-1,
        460781,0,149553,
         460802,0,149553,
          460824,0,149553,
          460845,0,-1,
          460866,0,149553,
          460887,0,-1,
         460908,0,-1,
         460929,0,149553,
         460950,0,-1,
        460972,0,-1,
       460994,0,-1,
      461015,0,-1,
      461036,0,149553,
       461058,0,149553,
        461079,0,149553,
         461100,0,149553,
          461121,0,149553,
           461143,0,149553,
           461164,0,-1,
           461185,0,149553,
           461206,0,-1,
          461227,0,-1,
          461248,0,149553,
          461270,0,-1,
         461290,0,-1,
         461311,0,149553,
          461333,0,149553,
          461354,0,-1,
          461375,0,149553,
          461396,0,-1,
         461418,0,-1,
        461439,0,-1,
        461459,0,149553,
         461480,0,149553,
          461501,0,149553,
          461523,0,-1,
          461544,0,149553,
          461565,0,-1,
         461586,0,-1,
         461607,0,149553,
         461628,0,-1,
        461649,0,-1,
       461670,0,-1,
       461691,0,149553,
        461712,0,149553,
         461733,0,149553,
          461754,0,149553,
          461776,0,-1,
          461796,0,149553,
          461818,0,-1,
         461839,0,-1,
         461860,0,149553,
         461881,0,-1,
        461902,0,-1,
        461923,0,149553,
         461944,0,149553,
         461965,0,-1,
         461986,0,149553,
         462007,0,-1,
        462028,0,-1,
       462049,0,-1,
      462070,0,-1,
     462091,0,-1,
     462131,0,149553,
      462187,0,149553,
       462223,0,149553,
        462243,0,149553,
         462265,0,149553,
          462286,0,149553,
           462307,0,149553,
           462328,0,-1,
           462349,0,149553,
           462370,0,-1,
          462391,0,-1,
          462412,0,149553,
          462433,0,-1,
         462454,0,-1,
         462475,0,149553,
          462496,0,149553,
          462517,0,-1,
          462538,0,149553,
          462559,0,-1,
         462580,0,-1,
        462601,0,-1,
        462622,0,149553,
         462644,0,149553,
          462665,0,149553,
          462686,0,-1,
          462706,0,149553,
          462727,0,-1,
         462748,0,-1,
         462769,0,149553,
         462790,0,-1,
        462811,0,-1,
       462832,0,-1,
       462853,0,149553,
        462874,0,149553,
         462895,0,149553,
          462916,0,149553,
          462937,0,-1,
          462958,0,149553,
          462979,0,-1,
         463000,0,-1,
         463039,0,149553,
         463061,0,-1,
        463096,0,-1,
        463117,0,149553,
         463138,0,149553,
         463159,0,-1,
         463180,0,149553,
         463201,0,-1,
        463222,0,-1,
       463243,0,-1,
      463264,0,-1,
      463284,0,149553,
       463305,0,149553,
        463326,0,149553,
         463347,0,149553,
          463368,0,149553,
          463389,0,-1,
          463410,0,149553,
          463431,0,-1,
         463452,0,-1,
         463473,0,149553,
         463494,0,-1,
        463515,0,-1,
        463536,0,149553,
         463557,0,149553,
         463578,0,-1,
         463598,0,149553,
         463620,0,-1,
        463641,0,-1,
       463661,0,-1,
       463682,0,149553,
        463703,0,149553,
         463724,0,149553,
         463745,0,-1,
         463766,0,149553,
         463787,0,-1,
        463807,0,-1,
        463828,0,149553,
        463849,0,-1,
       463870,0,-1,
      463890,0,-1,
     463911,0,-1,
    463932,0,-1,
    463952,0,149553,
     463973,0,149553,
      463994,0,149553,
       464015,0,149553,
        464036,0,149553,
         464057,0,149553,
          464078,0,149553,
           464099,0,149553,
           464120,0,-1,
           464140,0,149553,
           464162,0,-1,
          464182,0,-1,
          464203,0,149553,
          464224,0,-1,
         464245,0,-1,
         464266,0,149553,
          464299,0,149553,
          464320,0,-1,
          464341,0,149553,
          464363,0,-1,
         464384,0,-1,
        464404,0,-1,
        464425,0,149553,
         464447,0,149553,
          464468,0,149553,
          464490,0,-1,
          464511,0,149553,
          464532,0,-1,
         464553,0,-1,
         464574,0,149553,
         464596,0,-1,
        464617,0,-1,
       464661,0,-1,
       464737,0,149553,
        464772,0,149553,
         464793,0,149553,
          464814,0,149553,
          464835,0,-1,
          464856,0,149553,
          464877,0,-1,
         464898,0,-1,
         464919,0,149553,
         464941,0,-1,
        464962,0,-1,
        464983,0,149553,
         465004,0,149553,
         465026,0,-1,
         465047,0,149553,
         465068,0,-1,
        465089,0,-1,
       465110,0,-1,
      465131,0,-1,
      465152,0,149553,
       465173,0,149553,
        465194,0,149553,
         465215,0,149553,
          465237,0,149553,
          465258,0,-1,
          465279,0,149553,
          465300,0,-1,
         465322,0,-1,
         465343,0,149553,
         465364,0,-1,
        465385,0,-1,
        465406,0,149553,
         465427,0,149553,
         465449,0,-1,
         465470,0,149553,
         465490,0,-1,
        465511,0,-1,
       465532,0,-1,
       465553,0,149553,
        465575,0,149553,
         465596,0,149553,
         465617,0,-1,
         465638,0,149553,
         465659,0,-1,
        465680,0,-1,
        465720,0,149553,
        465776,0,-1,
       465799,0,-1,
      465854,0,-1,
     465877,0,-1,
     465932,0,149553,
      465954,0,149553,
       466008,0,149553,
        466044,0,149553,
         466067,0,149553,
          466089,0,149553,
          466112,0,-1,
          466134,0,149553,
          466157,0,-1,
         466198,0,-1,
         466221,0,149553,
         466258,0,-1,
        466280,0,-1,
        466303,0,149553,
         466339,0,149553,
         466362,0,-1,
         466384,0,149553,
         466406,0,-1,
        466428,0,-1,
       466450,0,-1,
       466473,0,149553,
        466495,0,149553,
         466517,0,149553,
         466540,0,-1,
         466562,0,149553,
         466585,0,-1,
        466626,0,-1,
        466662,0,149553,
        466685,0,-1,
       466708,0,-1,
      466731,0,-1,
      466754,0,149553,
       466789,0,149553,
        466811,0,149553,
         466833,0,149553,
         466856,0,-1,
         466878,0,149553,
         466901,0,-1,
        466923,0,-1,
        466945,0,149553,
        466968,0,-1,
       466990,0,-1,
       467012,0,149553,
        467034,0,149553,
        467057,0,-1,
        467079,0,149553,
        467101,0,-1,
       467123,0,-1,
      467145,0,-1,
     467167,0,-1,
    467189,0,-1,
   467211,0,-1,
   467233,0,149553,
    467256,0,149553,
     467278,0,149553,
      467301,0,149553,
       467323,0,149553,
        467345,0,149553,
         467367,0,149553,
          467389,0,149553,
           467411,0,149553,
           467434,0,-1,
           467456,0,149553,
           467479,0,-1,
          467501,0,-1,
          467523,0,149553,
          467545,0,-1,
         467568,0,-1,
         467590,0,149553,
          467613,0,149553,
          467635,0,-1,
          467657,0,149553,
          467680,0,-1,
         467702,0,-1,
        467724,0,-1,
        467746,0,149553,
         467768,0,149553,
          467790,0,149553,
          467813,0,-1,
          467835,0,149553,
          467857,0,-1,
         467879,0,-1,
         467901,0,149553,
         467923,0,-1,
        467945,0,-1,
       467967,0,-1,
       467989,0,149553,
        468012,0,149553,
         468034,0,149553,
          468056,0,149553,
          468078,0,-1,
          468101,0,149553,
          468123,0,-1,
         468145,0,-1,
         468167,0,149553,
         468190,0,-1,
        468211,0,-1,
        468233,0,149553,
         468255,0,149553,
         468278,0,-1,
         468300,0,149553,
         468322,0,-1,
        468344,0,-1,
       468366,0,-1,
      468388,0,-1,
      468410,0,149553,
       468433,0,149553,
        468455,0,149553,
         468488,0,149553,
          468510,0,149553,
          468533,0,-1,
          468556,0,149553,
          468578,0,-1,
         468600,0,-1,
         468623,0,149553,
         468671,0,-1,
        468743,0,-1,
        468766,0,149553,
         468790,0,149553,
         468813,0,-1,
         468849,0,149553,
         468872,0,-1,
        468894,0,-1,
       468917,0,-1,
       468939,0,149553,
        468962,0,149553,
         468984,0,149553,
         469007,0,-1,
         469028,0,149553,
         469051,0,-1,
        469074,0,-1,
        469096,0,149553,
        469119,0,-1,
       469142,0,-1,
      469164,0,-1,
     469186,0,-1,
     469209,0,149553,
      469231,0,149553,
       469254,0,149553,
        469276,0,149553,
         469299,0,149553,
          469321,0,149553,
          469344,0,-1,
          469366,0,149553,
          469388,0,-1,
         469411,0,-1,
         469433,0,149553,
         469456,0,-1,
        469478,0,-1,
        469500,0,149553,
         469523,0,149553,
         469545,0,-1,
         469568,0,149553,
         469590,0,-1,
        469613,0,-1,
       469635,0,-1,
       469657,0,149553,
        469679,0,149553,
         469702,0,149553,
         469724,0,-1,
         469746,0,149553,
         469769,0,-1,
        469791,0,-1,
        469814,0,149553,
        469837,0,-1,
       469859,0,-1,
      469882,0,-1,
      469904,0,149553,
       469926,0,149553,
        469949,0,149553,
         469971,0,149553,
         469994,0,-1,
         470016,0,149553,
         470039,0,-1,
        470061,0,-1,
        470083,0,149553,
        470105,0,-1,
       470127,0,-1,
       470149,0,149553,
        470172,0,149553,
        470194,0,-1,
        470217,0,149553,
        470239,0,-1,
       470262,0,-1,
      470284,0,-1,
     470306,0,-1,
    470328,0,-1,
    470350,0,149553,
     470373,0,149553,
      470395,0,149553,
       470418,0,149553,
        470440,0,149553,
         470462,0,149553,
          470485,0,149553,
          470508,0,-1,
          470530,0,149553,
          470553,0,-1,
         470575,0,-1,
         470597,0,149553,
         470620,0,-1,
        470642,0,-1,
        470664,0,149553,
         470687,0,149553,
         470709,0,-1,
         470731,0,149553,
         470754,0,-1,
        470776,0,-1,
       470798,0,-1,
       470820,0,149553,
        470843,0,149553,
         470865,0,149553,
         470888,0,-1,
         470910,0,149553,
         470932,0,-1,
        470955,0,-1,
        470977,0,149553,
        470999,0,-1,
       471022,0,-1,
      471044,0,-1,
      471066,0,149553,
       471107,0,149553,
        471145,0,149553,
         471167,0,149553,
         471190,0,-1,
         471212,0,149553,
         471234,0,-1,
        471256,0,-1,
        471278,0,149553,
        471301,0,-1,
       471323,0,-1,
       471345,0,149553,
        471368,0,149553,
        471390,0,-1,
        471412,0,149553,
        471435,0,-1,
       471457,0,-1,
      471479,0,-1,
     471501,0,-1,
     471523,0,149553,
      471545,0,149553,
       471567,0,149553,
        471590,0,149553,
         471612,0,149553,
         471635,0,-1,
         471657,0,149553,
         471680,0,-1,
        471702,0,-1,
        471724,0,149553,
        471746,0,-1,
       471768,0,-1,
       471790,0,149553,
        471813,0,149553,
        471835,0,-1,
        471857,0,149553,
        471880,0,-1,
       471902,0,-1,
      471924,0,-1,
      471946,0,149553,
       471968,0,149553,
        471991,0,149553,
        472013,0,-1,
        472035,0,149553,
        472058,0,-1,
       472080,0,-1,
       472102,0,149553,
       472124,0,-1,
      472146,0,-1,
     472169,0,-1,
    472191,0,-1,
   472213,0,-1,
  472235,0,-1,
 472257,0,-1,
 472317,0,32848,
 472341,0,-1,
 472363,0,32848,
 472385,0,-1,
 472407,0,32848,
 472429,0,-1,
 472450,0,33584,
 472472,0,-1,
 472494,0,33584,
 472516,0,-1,
 472538,0,33584,
 472560,0,-1,
 472582,0,32848,
 472604,0,-1,
 472628,0,32848,
 472652,0,-1,
 472741,0,32848,
 472765,0,-1,
 472783,0,33584,
 472802,0,-1,
 472820,0,33584,
 472851,0,-1,
 472868,0,33584,
 472886,0,-1,
 472915,0,39496,
 472939,0,-1,
 472956,0,39952,
 472980,0,-1,
 472998,0,40408,
 473020,0,-1,
 473038,0,40864,
 473061,0,-1,
 473078,0,41320,
 473096,0,-1,
 473114,0,41912,
 473132,0,-1,
 473150,0,42368,
 473167,0,-1,
 473185,0,42960,
 473204,0,-1,
 473222,0,35512,
 473240,0,-1,
 473257,0,35976,
 473275,0,-1,
 473292,0,36440,
 473310,0,-1,
 473327,0,36904,
 473345,0,-1,
 473363,0,37368,
 473381,0,-1,
 473398,0,37976,
 473416,0,-1,
 473433,0,38440,
 473451,0,-1,
 473469,0,39040,
 473487,0,-1,
 473504,0,27736,
 473523,1024,-1,
 473541,1024,27736,
 473558,1104,-1,
 473576,1104,27736,
 473593,1264,-1,
 473611,1264,27736,
 473628,2096,-1,
 473646,2096,28488,
 473664,2096,-1,
 473682,2096,29232,
 473722,2096,-1,
 473740,2096,27736,
 473777,1072,-1,
 473795,1072,27736,
 473817,992,-1,
 473854,992,27736,
 473874,832,-1,
 473905,832,27736,
 473942,0,-1,
 473961,0,25080,
 474031,0,-1,
 474077,0,25080,
 474140,0,-1,
 474160,0,29232,
 474179,0,-1,
 474211,0,28488,
 474230,0,-1,
 474248,0,25080,
 474313,0,-1,
 474332,0,25080,
 474398,0,-1,
 474431,0,21168,
 474450,0,-1,
474469,0,-1
	]
	, "functions": [{
		"": "halt(): void"
		, "kind": "inline"
		, "cast": "inline"
		, "name": "halt"
		, "type": "function"
		, "args": [{
			"": ".result"
			, "kind": "inline"
			, "cast": "inline"
			, "name": ".result"
			, "type": "void"
			, "size": 0
			, "offs": 0
			, "static": false
			, "const": false
		}]
		, "size": 0
		, "offs": 21168
		, "static": true
		, "const": true
		, "time": 19
		, "total": 19
		, "hits": 1
		, "fails": 0
	}, {
		"": "typename.base(type: typename): typename"
		, "kind": "inline"
		, "cast": "inline"
		, "name": "base"
		, "owner": "typename"
		, "type": "function"
		, "args": [{
			"": ".result"
			, "kind": "inline"
			, "cast": "inline"
			, "name": ".result"
			, "type": "typename"
			, "size": 4
			, "offs": 0
			, "static": false
			, "const": false
		}, {
			"": "type"
			, "kind": "variable"
			, "cast": "ref"
			, "name": "type"
			, "type": "typename"
			, "size": 4
			, "offs": 4
			, "static": false
			, "const": false
		}]
		, "size": 0
		, "offs": 21928
		, "static": true
		, "const": true
		, "time": 65
		, "total": 65
		, "hits": 3
		, "fails": 0
	}, {
		"": "typename.file(type: typename): .cstr"
		, "kind": "inline"
		, "cast": "inline"
		, "name": "file"
		, "owner": "typename"
		, "type": "function"
		, "args": [{
			"": ".result"
			, "kind": "inline"
			, "cast": "inline"
			, "name": ".result"
			, "type": ".cstr"
			, "size": 4
			, "offs": 0
			, "static": false
			, "const": false
		}, {
			"": "type"
			, "kind": "variable"
			, "cast": "ref"
			, "name": "type"
			, "type": "typename"
			, "size": 4
			, "offs": 4
			, "static": false
			, "const": false
		}]
		, "size": 0
		, "offs": 22392
		, "static": true
		, "const": true
		, "time": 41
		, "total": 41
		, "hits": 2
		, "fails": 0
	}, {
		"": "typename.line(type: typename): int32"
		, "kind": "inline"
		, "cast": "inline"
		, "name": "line"
		, "owner": "typename"
		, "type": "function"
		, "args": [{
			"": ".result"
			, "kind": "inline"
			, "cast": "inline"
			, "name": ".result"
			, "type": "int32"
			, "size": 4
			, "offs": 0
			, "static": false
			, "const": false
		}, {
			"": "type"
			, "kind": "variable"
			, "cast": "ref"
			, "name": "type"
			, "type": "typename"
			, "size": 4
			, "offs": 4
			, "static": false
			, "const": false
		}]
		, "size": 0
		, "offs": 22856
		, "static": true
		, "const": true
		, "time": 38
		, "total": 38
		, "hits": 2
		, "fails": 0
	}, {
		"": "typename.name(type: typename): .cstr"
		, "kind": "inline"
		, "cast": "inline"
		, "name": "name"
		, "owner": "typename"
		, "type": "function"
		, "args": [{
			"": ".result"
			, "kind": "inline"
			, "cast": "inline"
			, "name": ".result"
			, "type": ".cstr"
			, "size": 4
			, "offs": 0
			, "static": false
			, "const": false
		}, {
			"": "type"
			, "kind": "variable"
			, "cast": "ref"
			, "name": "type"
			, "type": "typename"
			, "size": 4
			, "offs": 4
			, "static": false
			, "const": false
		}]
		, "size": 0
		, "offs": 23320
		, "static": true
		, "const": true
		, "time": 44
		, "total": 44
		, "hits": 2
		, "fails": 0
	}, {
		"": "raise(file: char[*], line: int32, level: int32, message: char[*], inspect: variant, maxTrace: int32): void"
		, "kind": "inline"
		, "cast": "inline"
		, "name": "raise"
		, "type": "function"
		, "args": [{
			"": ".result"
			, "kind": "inline"
			, "cast": "inline"
			, "name": ".result"
			, "type": "void"
			, "size": 0
			, "offs": 0
			, "static": false
			, "const": false
		}, {
			"": "file"
			, "kind": "variable"
			, "cast": "ref"
			, "name": "file"
			, "type": "char[*]"
			, "size": 4
			, "offs": 4
			, "static": false
			, "const": false
		}, {
			"": "line"
			, "kind": "variable"
			, "cast": "i32"
			, "name": "line"
			, "type": "int32"
			, "size": 4
			, "offs": 8
			, "static": false
			, "const": false
		}, {
			"": "level"
			, "kind": "variable"
			, "cast": "i32"
			, "name": "level"
			, "type": "int32"
			, "size": 4
			, "offs": 12
			, "static": false
			, "const": false
		}, {
			"": "message"
			, "kind": "variable"
			, "cast": "ref"
			, "name": "message"
			, "type": "char[*]"
			, "size": 4
			, "offs": 16
			, "static": false
			, "const": false
		}, {
			"": "inspect"
			, "kind": "variable"
			, "cast": "var"
			, "name": "inspect"
			, "type": "variant"
			, "size": 8
			, "offs": 24
			, "static": false
			, "const": false
		}, {
			"": "maxTrace"
			, "kind": "variable"
			, "cast": "i32"
			, "name": "maxTrace"
			, "type": "int32"
			, "size": 4
			, "offs": 28
			, "static": false
			, "const": false
		}]
		, "size": 0
		, "offs": 25080
		, "static": true
		, "const": true
		, "time": 1106
		, "total": 1106
		, "hits": 15
		, "fails": 0
	}, {
		"": "pointer.alloc(ptr: pointer, size: int32): pointer"
		, "kind": "inline"
		, "cast": "inline"
		, "name": "alloc"
		, "owner": "pointer"
		, "type": "function"
		, "args": [{
			"": ".result"
			, "kind": "inline"
			, "cast": "inline"
			, "name": ".result"
			, "type": "pointer"
			, "size": 4
			, "offs": 0
			, "static": false
			, "const": false
		}, {
			"": "ptr"
			, "kind": "variable"
			, "cast": "ref"
			, "name": "ptr"
			, "type": "pointer"
			, "size": 4
			, "offs": 4
			, "static": false
			, "const": false
		}, {
			"": "size"
			, "kind": "variable"
			, "cast": "i32"
			, "name": "size"
			, "type": "int32"
			, "size": 4
			, "offs": 8
			, "static": false
			, "const": false
		}]
		, "size": 0
		, "offs": 27736
		, "static": true
		, "const": true
		, "time": 184
		, "total": 184
		, "hits": 8
		, "fails": 0
	}, {
		"": "pointer.fill(dst: pointer, value: int32, size: int32): pointer"
		, "kind": "inline"
		, "cast": "inline"
		, "name": "fill"
		, "owner": "pointer"
		, "type": "function"
		, "args": [{
			"": ".result"
			, "kind": "inline"
			, "cast": "inline"
			, "name": ".result"
			, "type": "pointer"
			, "size": 4
			, "offs": 0
			, "static": false
			, "const": false
		}, {
			"": "dst"
			, "kind": "variable"
			, "cast": "ref"
			, "name": "dst"
			, "type": "pointer"
			, "size": 4
			, "offs": 4
			, "static": false
			, "const": false
		}, {
			"": "value"
			, "kind": "variable"
			, "cast": "i32"
			, "name": "value"
			, "type": "int32"
			, "size": 4
			, "offs": 8
			, "static": false
			, "const": false
		}, {
			"": "size"
			, "kind": "variable"
			, "cast": "i32"
			, "name": "size"
			, "type": "int32"
			, "size": 4
			, "offs": 12
			, "static": false
			, "const": false
		}]
		, "size": 0
		, "offs": 28488
		, "static": true
		, "const": true
		, "time": 36
		, "total": 36
		, "hits": 2
		, "fails": 0
	}, {
		"": "pointer.copy(dst: pointer, src: pointer, size: int32): pointer"
		, "kind": "inline"
		, "cast": "inline"
		, "name": "copy"
		, "owner": "pointer"
		, "type": "function"
		, "args": [{
			"": ".result"
			, "kind": "inline"
			, "cast": "inline"
			, "name": ".result"
			, "type": "pointer"
			, "size": 4
			, "offs": 0
			, "static": false
			, "const": false
		}, {
			"": "dst"
			, "kind": "variable"
			, "cast": "ref"
			, "name": "dst"
			, "type": "pointer"
			, "size": 4
			, "offs": 4
			, "static": false
			, "const": false
		}, {
			"": "src"
			, "kind": "variable"
			, "cast": "ref"
			, "name": "src"
			, "type": "pointer"
			, "size": 4
			, "offs": 8
			, "static": false
			, "const": false
		}, {
			"": "size"
			, "kind": "variable"
			, "cast": "i32"
			, "name": "size"
			, "type": "int32"
			, "size": 4
			, "offs": 12
			, "static": false
			, "const": false
		}]
		, "size": 0
		, "offs": 29232
		, "static": true
		, "const": true
		, "time": 57
		, "total": 57
		, "hits": 2
		, "fails": 0
	}, {
		"": "uint32.zxt(value: int32, offs: int32, count: int32): int32"
		, "kind": "inline"
		, "cast": "inline"
		, "name": "zxt"
		, "owner": "uint32"
		, "type": "function"
		, "args": [{
			"": ".result"
			, "kind": "inline"
			, "cast": "inline"
			, "name": ".result"
			, "type": "int32"
			, "size": 4
			, "offs": 0
			, "static": false
			, "const": false
		}, {
			"": "value"
			, "kind": "variable"
			, "cast": "i32"
			, "name": "value"
			, "type": "int32"
			, "size": 4
			, "offs": 4
			, "static": false
			, "const": false
		}, {
			"": "offs"
			, "kind": "variable"
			, "cast": "i32"
			, "name": "offs"
			, "type": "int32"
			, "size": 4
			, "offs": 8
			, "static": false
			, "const": false
		}, {
			"": "count"
			, "kind": "variable"
			, "cast": "i32"
			, "name": "count"
			, "type": "int32"
			, "size": 4
			, "offs": 12
			, "static": false
			, "const": false
		}]
		, "size": 0
		, "offs": 32848
		, "static": true
		, "const": true
		, "time": 136
		, "total": 136
		, "hits": 6
		, "fails": 0
	}, {
		"": "uint32.sxt(value: int32, offs: int32, count: int32): int32"
		, "kind": "inline"
		, "cast": "inline"
		, "name": "sxt"
		, "owner": "uint32"
		, "type": "function"
		, "args": [{
			"": ".result"
			, "kind": "inline"
			, "cast": "inline"
			, "name": ".result"
			, "type": "int32"
			, "size": 4
			, "offs": 0
			, "static": false
			, "const": false
		}, {
			"": "value"
			, "kind": "variable"
			, "cast": "i32"
			, "name": "value"
			, "type": "int32"
			, "size": 4
			, "offs": 4
			, "static": false
			, "const": false
		}, {
			"": "offs"
			, "kind": "variable"
			, "cast": "i32"
			, "name": "offs"
			, "type": "int32"
			, "size": 4
			, "offs": 8
			, "static": false
			, "const": false
		}, {
			"": "count"
			, "kind": "variable"
			, "cast": "i32"
			, "name": "count"
			, "type": "int32"
			, "size": 4
			, "offs": 12
			, "static": false
			, "const": false
		}]
		, "size": 0
		, "offs": 33584
		, "static": true
		, "const": true
		, "time": 130
		, "total": 130
		, "hits": 6
		, "fails": 0
	}, {
		"": "float32.sin(x: float32): float32"
		, "kind": "inline"
		, "cast": "inline"
		, "name": "sin"
		, "owner": "float32"
		, "type": "function"
		, "args": [{
			"": ".result"
			, "kind": "inline"
			, "cast": "inline"
			, "name": ".result"
			, "type": "float32"
			, "size": 4
			, "offs": 0
			, "static": false
			, "const": false
		}, {
			"": "x"
			, "kind": "variable"
			, "cast": "f32"
			, "name": "x"
			, "type": "float32"
			, "size": 4
			, "offs": 4
			, "static": false
			, "const": false
		}]
		, "size": 0
		, "offs": 35512
		, "static": true
		, "const": true
		, "time": 40
		, "total": 40
		, "hits": 2
		, "fails": 0
	}, {
		"": "float32.cos(x: float32): float32"
		, "kind": "inline"
		, "cast": "inline"
		, "name": "cos"
		, "owner": "float32"
		, "type": "function"
		, "args": [{
			"": ".result"
			, "kind": "inline"
			, "cast": "inline"
			, "name": ".result"
			, "type": "float32"
			, "size": 4
			, "offs": 0
			, "static": false
			, "const": false
		}, {
			"": "x"
			, "kind": "variable"
			, "cast": "f32"
			, "name": "x"
			, "type": "float32"
			, "size": 4
			, "offs": 4
			, "static": false
			, "const": false
		}]
		, "size": 0
		, "offs": 35976
		, "static": true
		, "const": true
		, "time": 17
		, "total": 17
		, "hits": 1
		, "fails": 0
	}, {
		"": "float32.tan(x: float32): float32"
		, "kind": "inline"
		, "cast": "inline"
		, "name": "tan"
		, "owner": "float32"
		, "type": "function"
		, "args": [{
			"": ".result"
			, "kind": "inline"
			, "cast": "inline"
			, "name": ".result"
			, "type": "float32"
			, "size": 4
			, "offs": 0
			, "static": false
			, "const": false
		}, {
			"": "x"
			, "kind": "variable"
			, "cast": "f32"
			, "name": "x"
			, "type": "float32"
			, "size": 4
			, "offs": 4
			, "static": false
			, "const": false
		}]
		, "size": 0
		, "offs": 36440
		, "static": true
		, "const": true
		, "time": 18
		, "total": 18
		, "hits": 1
		, "fails": 0
	}, {
		"": "float32.log(x: float32): float32"
		, "kind": "inline"
		, "cast": "inline"
		, "name": "log"
		, "owner": "float32"
		, "type": "function"
		, "args": [{
			"": ".result"
			, "kind": "inline"
			, "cast": "inline"
			, "name": ".result"
			, "type": "float32"
			, "size": 4
			, "offs": 0
			, "static": false
			, "const": false
		}, {
			"": "x"
			, "kind": "variable"
			, "cast": "f32"
			, "name": "x"
			, "type": "float32"
			, "size": 4
			, "offs": 4
			, "static": false
			, "const": false
		}]
		, "size": 0
		, "offs": 36904
		, "static": true
		, "const": true
		, "time": 18
		, "total": 18
		, "hits": 1
		, "fails": 0
	}, {
		"": "float32.exp(x: float32): float32"
		, "kind": "inline"
		, "cast": "inline"
		, "name": "exp"
		, "owner": "float32"
		, "type": "function"
		, "args": [{
			"": ".result"
			, "kind": "inline"
			, "cast": "inline"
			, "name": ".result"
			, "type": "float32"
			, "size": 4
			, "offs": 0
			, "static": false
			, "const": false
		}, {
			"": "x"
			, "kind": "variable"
			, "cast": "f32"
			, "name": "x"
			, "type": "float32"
			, "size": 4
			, "offs": 4
			, "static": false
			, "const": false
		}]
		, "size": 0
		, "offs": 37368
		, "static": true
		, "const": true
		, "time": 18
		, "total": 18
		, "hits": 1
		, "fails": 0
	}, {
		"": "float32.pow(x: float32, y: float32): float32"
		, "kind": "inline"
		, "cast": "inline"
		, "name": "pow"
		, "owner": "float32"
		, "type": "function"
		, "args": [{
			"": ".result"
			, "kind": "inline"
			, "cast": "inline"
			, "name": ".result"
			, "type": "float32"
			, "size": 4
			, "offs": 0
			, "static": false
			, "const": false
		}, {
			"": "x"
			, "kind": "variable"
			, "cast": "f32"
			, "name": "x"
			, "type": "float32"
			, "size": 4
			, "offs": 4
			, "static": false
			, "const": false
		}, {
			"": "y"
			, "kind": "variable"
			, "cast": "f32"
			, "name": "y"
			, "type": "float32"
			, "size": 4
			, "offs": 8
			, "static": false
			, "const": false
		}]
		, "size": 0
		, "offs": 37976
		, "static": true
		, "const": true
		, "time": 18
		, "total": 18
		, "hits": 1
		, "fails": 0
	}, {
		"": "float32.sqrt(x: float32): float32"
		, "kind": "inline"
		, "cast": "inline"
		, "name": "sqrt"
		, "owner": "float32"
		, "type": "function"
		, "args": [{
			"": ".result"
			, "kind": "inline"
			, "cast": "inline"
			, "name": ".result"
			, "type": "float32"
			, "size": 4
			, "offs": 0
			, "static": false
			, "const": false
		}, {
			"": "x"
			, "kind": "variable"
			, "cast": "f32"
			, "name": "x"
			, "type": "float32"
			, "size": 4
			, "offs": 4
			, "static": false
			, "const": false
		}]
		, "size": 0
		, "offs": 38440
		, "static": true
		, "const": true
		, "time": 18
		, "total": 18
		, "hits": 1
		, "fails": 0
	}, {
		"": "float32.atan2(x: float32, y: float32): float32"
		, "kind": "inline"
		, "cast": "inline"
		, "name": "atan2"
		, "owner": "float32"
		, "type": "function"
		, "args": [{
			"": ".result"
			, "kind": "inline"
			, "cast": "inline"
			, "name": ".result"
			, "type": "float32"
			, "size": 4
			, "offs": 0
			, "static": false
			, "const": false
		}, {
			"": "x"
			, "kind": "variable"
			, "cast": "f32"
			, "name": "x"
			, "type": "float32"
			, "size": 4
			, "offs": 4
			, "static": false
			, "const": false
		}, {
			"": "y"
			, "kind": "variable"
			, "cast": "f32"
			, "name": "y"
			, "type": "float32"
			, "size": 4
			, "offs": 8
			, "static": false
			, "const": false
		}]
		, "size": 0
		, "offs": 39040
		, "static": true
		, "const": true
		, "time": 18
		, "total": 18
		, "hits": 1
		, "fails": 0
	}, {
		"": "float64.sin(x: float64): float64"
		, "kind": "inline"
		, "cast": "inline"
		, "name": "sin"
		, "owner": "float64"
		, "type": "function"
		, "args": [{
			"": ".result"
			, "kind": "inline"
			, "cast": "inline"
			, "name": ".result"
			, "type": "float64"
			, "size": 8
			, "offs": 0
			, "static": false
			, "const": false
		}, {
			"": "x"
			, "kind": "variable"
			, "cast": "f64"
			, "name": "x"
			, "type": "float64"
			, "size": 8
			, "offs": 8
			, "static": false
			, "const": false
		}]
		, "size": 0
		, "offs": 39496
		, "static": true
		, "const": true
		, "time": 23
		, "total": 23
		, "hits": 1
		, "fails": 0
	}, {
		"": "float64.cos(x: float64): float64"
		, "kind": "inline"
		, "cast": "inline"
		, "name": "cos"
		, "owner": "float64"
		, "type": "function"
		, "args": [{
			"": ".result"
			, "kind": "inline"
			, "cast": "inline"
			, "name": ".result"
			, "type": "float64"
			, "size": 8
			, "offs": 0
			, "static": false
			, "const": false
		}, {
			"": "x"
			, "kind": "variable"
			, "cast": "f64"
			, "name": "x"
			, "type": "float64"
			, "size": 8
			, "offs": 8
			, "static": false
			, "const": false
		}]
		, "size": 0
		, "offs": 39952
		, "static": true
		, "const": true
		, "time": 24
		, "total": 24
		, "hits": 1
		, "fails": 0
	}, {
		"": "float64.tan(x: float64): float64"
		, "kind": "inline"
		, "cast": "inline"
		, "name": "tan"
		, "owner": "float64"
		, "type": "function"
		, "args": [{
			"": ".result"
			, "kind": "inline"
			, "cast": "inline"
			, "name": ".result"
			, "type": "float64"
			, "size": 8
			, "offs": 0
			, "static": false
			, "const": false
		}, {
			"": "x"
			, "kind": "variable"
			, "cast": "f64"
			, "name": "x"
			, "type": "float64"
			, "size": 8
			, "offs": 8
			, "static": false
			, "const": false
		}]
		, "size": 0
		, "offs": 40408
		, "static": true
		, "const": true
		, "time": 21
		, "total": 21
		, "hits": 1
		, "fails": 0
	}, {
		"": "float64.log(x: float64): float64"
		, "kind": "inline"
		, "cast": "inline"
		, "name": "log"
		, "owner": "float64"
		, "type": "function"
		, "args": [{
			"": ".result"
			, "kind": "inline"
			, "cast": "inline"
			, "name": ".result"
			, "type": "float64"
			, "size": 8
			, "offs": 0
			, "static": false
			, "const": false
		}, {
			"": "x"
			, "kind": "variable"
			, "cast": "f64"
			, "name": "x"
			, "type": "float64"
			, "size": 8
			, "offs": 8
			, "static": false
			, "const": false
		}]
		, "size": 0
		, "offs": 40864
		, "static": true
		, "const": true
		, "time": 23
		, "total": 23
		, "hits": 1
		, "fails": 0
	}, {
		"": "float64.exp(x: float64): float64"
		, "kind": "inline"
		, "cast": "inline"
		, "name": "exp"
		, "owner": "float64"
		, "type": "function"
		, "args": [{
			"": ".result"
			, "kind": "inline"
			, "cast": "inline"
			, "name": ".result"
			, "type": "float64"
			, "size": 8
			, "offs": 0
			, "static": false
			, "const": false
		}, {
			"": "x"
			, "kind": "variable"
			, "cast": "f64"
			, "name": "x"
			, "type": "float64"
			, "size": 8
			, "offs": 8
			, "static": false
			, "const": false
		}]
		, "size": 0
		, "offs": 41320
		, "static": true
		, "const": true
		, "time": 18
		, "total": 18
		, "hits": 1
		, "fails": 0
	}, {
		"": "float64.pow(x: float64, y: float64): float64"
		, "kind": "inline"
		, "cast": "inline"
		, "name": "pow"
		, "owner": "float64"
		, "type": "function"
		, "args": [{
			"": ".result"
			, "kind": "inline"
			, "cast": "inline"
			, "name": ".result"
			, "type": "float64"
			, "size": 8
			, "offs": 0
			, "static": false
			, "const": false
		}, {
			"": "x"
			, "kind": "variable"
			, "cast": "f64"
			, "name": "x"
			, "type": "float64"
			, "size": 8
			, "offs": 8
			, "static": false
			, "const": false
		}, {
			"": "y"
			, "kind": "variable"
			, "cast": "f64"
			, "name": "y"
			, "type": "float64"
			, "size": 8
			, "offs": 16
			, "static": false
			, "const": false
		}]
		, "size": 0
		, "offs": 41912
		, "static": true
		, "const": true
		, "time": 18
		, "total": 18
		, "hits": 1
		, "fails": 0
	}, {
		"": "float64.sqrt(x: float64): float64"
		, "kind": "inline"
		, "cast": "inline"
		, "name": "sqrt"
		, "owner": "float64"
		, "type": "function"
		, "args": [{
			"": ".result"
			, "kind": "inline"
			, "cast": "inline"
			, "name": ".result"
			, "type": "float64"
			, "size": 8
			, "offs": 0
			, "static": false
			, "const": false
		}, {
			"": "x"
			, "kind": "variable"
			, "cast": "f64"
			, "name": "x"
			, "type": "float64"
			, "size": 8
			, "offs": 8
			, "static": false
			, "const": false
		}]
		, "size": 0
		, "offs": 42368
		, "static": true
		, "const": true
		, "time": 18
		, "total": 18
		, "hits": 1
		, "fails": 0
	}, {
		"": "float64.atan2(x: float64, y: float64): float64"
		, "kind": "inline"
		, "cast": "inline"
		, "name": "atan2"
		, "owner": "float64"
		, "type": "function"
		, "args": [{
			"": ".result"
			, "kind": "inline"
			, "cast": "inline"
			, "name": ".result"
			, "type": "float64"
			, "size": 8
			, "offs": 0
			, "static": false
			, "const": false
		}, {
			"": "x"
			, "kind": "variable"
			, "cast": "f64"
			, "name": "x"
			, "type": "float64"
			, "size": 8
			, "offs": 8
			, "static": false
			, "const": false
		}, {
			"": "y"
			, "kind": "variable"
			, "cast": "f64"
			, "name": "y"
			, "type": "float64"
			, "size": 8
			, "offs": 16
			, "static": false
			, "const": false
		}]
		, "size": 0
		, "offs": 42960
		, "static": true
		, "const": true
		, "time": 20
		, "total": 20
		, "hits": 1
		, "fails": 0
	}, {
		"": "funAdd(x: int32, y: int32): int32"
		, "kind": "function"
		, "cast": "inline"
		, "name": "funAdd"
		, "type": "function"
		, "file": "extras/Tests/lang.function.ci"
		, "line": 8
		, "args": [{
			"": ".result"
			, "kind": "variable"
			, "cast": "i32"
			, "name": ".result"
			, "type": "int32"
			, "file": "extras/Tests/lang.function.ci"
			, "line": 8
			, "size": 4
			, "offs": 4
			, "static": false
			, "const": false
		}, {
			"": "x"
			, "kind": "variable"
			, "cast": "i32"
			, "name": "x"
			, "type": "int32"
			, "file": "extras/Tests/lang.function.ci"
			, "line": 8
			, "size": 4
			, "offs": 8
			, "static": false
			, "const": false
		}, {
			"": "y"
			, "kind": "variable"
			, "cast": "i32"
			, "name": "y"
			, "type": "int32"
			, "file": "extras/Tests/lang.function.ci"
			, "line": 8
			, "size": 4
			, "offs": 12
			, "static": false
			, "const": false
		}]
		, "size": 8
		, "offs": 149537
		, "static": true
		, "const": true
		, "time": 46
		, "total": 46
		, "hits": 2
		, "fails": 0
	}, {
		"": "funMul(x: int32, y: int32): int32"
		, "kind": "function"
		, "cast": "inline"
		, "name": "funMul"
		, "type": "function"
		, "file": "extras/Tests/lang.function.ci"
		, "line": 34
		, "args": [{
			"": ".result"
			, "kind": "variable"
			, "cast": "i32"
			, "name": ".result"
			, "type": "int32"
			, "file": "extras/Tests/lang.function.ci"
			, "line": 34
			, "size": 4
			, "offs": 4
			, "static": false
			, "const": false
		}, {
			"": "x"
			, "kind": "variable"
			, "cast": "i32"
			, "name": "x"
			, "type": "int32"
			, "file": "extras/Tests/lang.function.ci"
			, "line": 34
			, "size": 4
			, "offs": 8
			, "static": false
			, "const": false
		}, {
			"": "y"
			, "kind": "variable"
			, "cast": "i32"
			, "name": "y"
			, "type": "int32"
			, "file": "extras/Tests/lang.function.ci"
			, "line": 34
			, "size": 4
			, "offs": 12
			, "static": false
			, "const": false
		}]
		, "size": 8
		, "offs": 149545
		, "static": true
		, "const": true
		, "time": 48
		, "total": 48
		, "hits": 2
		, "fails": 0
	}, {
		"": "fib(n: uint32): uint32"
		, "kind": "function"
		, "cast": "inline"
		, "name": "fib"
		, "type": "function"
		, "file": "extras/Tests/lang.function.ci"
		, "line": 39
		, "args": [{
			"": ".result"
			, "kind": "variable"
			, "cast": "u32"
			, "name": ".result"
			, "type": "uint32"
			, "file": "extras/Tests/lang.function.ci"
			, "line": 39
			, "size": 4
			, "offs": 4
			, "static": false
			, "const": false
		}, {
			"": "n"
			, "kind": "variable"
			, "cast": "u32"
			, "name": "n"
			, "type": "uint32"
			, "file": "extras/Tests/lang.function.ci"
			, "line": 39
			, "size": 4
			, "offs": 8
			, "static": false
			, "const": false
		}]
		, "size": 86
		, "offs": 149553
		, "static": true
		, "const": true
		, "time": 35788
		, "total": 35788
		, "hits": 753
		, "fails": 0
	}, {
		"": ".main(): void"
		, "kind": "function"
		, "cast": "inline"
		, "name": ".main"
		, "type": "function"
		, "args": [{
			"": ".result"
			, "kind": "variable"
			, "cast": "inline"
			, "name": ".result"
			, "type": "void"
			, "size": 0
			, "offs": 0
			, "static": false
			, "const": false
		}]
		, "size": 5024
		, "offs": 149688
		, "static": true
		, "const": false
		, "time": 1617
		, "total": 39685
		, "hits": 1
		, "fails": 0
	}]
	, "statements": [{
	}]
	, "ticksPerSec": 1000000
	, "functionCount": 42
	, "statementCount": 524
}
}
