{
"symbols": [{
}]
, "profile": {
	"": "callTree array is constructed from a tick(timestamp) followed by a function offset, if the offset is negative it represents a return from a function instead of a call."
	, "callTree": [
12810,294772,
 12819,293771,
  12827,293336,
  12830,-1,
  12833,289556,
   12835,265288,
   12837,-1,
   12844,265288,
   12845,-1,
   12848,265288,
   12849,-1,
   12852,265288,
   12853,-1,
   12856,265288,
   12857,-1,
   12860,265288,
   12861,-1,
   12864,265288,
   12865,-1,
   12867,265288,
   12869,-1,
   12871,265288,
   12873,-1,
   12875,265288,
   12877,-1,
  12879,-1,
  12884,293336,
  12888,-1,
  12891,289556,
   12894,265288,
   12895,-1,
   12901,265288,
   12903,-1,
   12905,265288,
   12907,-1,
   12909,265288,
   12911,-1,
   12913,265288,
   12915,-1,
   12917,265288,
   12918,-1,
   12921,265288,
   12922,-1,
   12925,265288,
   12926,-1,
   12929,265288,
   12930,-1,
  12932,-1,
  12938,293336,
  12942,-1,
  12945,289556,
   12947,265288,
   12949,-1,
   12963,265288,
   12964,-1,
   12967,265288,
   12968,-1,
   12971,265288,
   12972,-1,
   12975,265288,
   12976,-1,
   12978,265288,
   12980,-1,
   12982,265288,
   12984,-1,
   12986,265288,
   12988,-1,
   12990,265288,
   12992,-1,
   12994,265288,
   12996,-1,
   12998,265288,
   12999,-1,
   13002,265288,
   13003,-1,
   13006,265288,
   13007,-1,
   13009,265288,
   13011,-1,
   13013,265288,
   13015,-1,
   13017,265288,
   13019,-1,
   13021,265288,
   13023,-1,
   13025,265288,
   13026,-1,
   13029,265288,
   13030,-1,
   13033,265288,
   13034,-1,
   13037,265288,
   13038,-1,
   13041,265288,
   13042,-1,
   13045,265288,
   13046,-1,
   13049,265288,
   13050,-1,
   13053,265288,
   13054,-1,
   13056,265288,
   13058,-1,
   13060,265288,
   13062,-1,
   13064,265288,
   13066,-1,
   13068,265288,
   13069,-1,
   13072,265288,
   13073,-1,
   13076,265288,
   13077,-1,
   13080,265288,
   13081,-1,
   13084,265288,
   13085,-1,
  13087,-1,
  13092,293336,
  13096,-1,
  13099,265288,
  13101,-1,
  13103,289556,
   13105,265288,
   13107,-1,
   13115,265288,
   13116,-1,
   13118,265288,
   13120,-1,
   13122,265288,
   13124,-1,
   13126,265288,
   13128,-1,
   13130,265288,
   13132,-1,
   13134,265288,
   13136,-1,
   13138,265288,
   13139,-1,
   13142,265288,
   13143,-1,
   13146,265288,
   13147,-1,
   13150,265288,
   13151,-1,
   13154,265288,
   13155,-1,
   13157,265288,
   13159,-1,
   13161,265288,
   13163,-1,
  13165,-1,
 13169,-1,
 13171,289451,
 13208,-1,
 13210,265288,
 13211,-1,
 13213,265064,
 13215,-1,
13217,-1]
	, "functions": [{
		"proto": "Halt(Code: int32)"
		, "kind": ".def"
		, "name": "Halt"
		, "type": "void"
		, "args": [{
			"proto": "Halt.Code"
			, "kind": ".def"
			, "name": "Code"
			, "declaredIn": "Halt(Code: int32)"
			, "type": "int32"
			, "cast": ".i32"
			, "size": 4
			, "offs": 4
			, "const": false
			, "static": false
		}]
		, "size": 56
		, "offs": 265064
		, "const": false
		, "static": true
		, "time": 2
		, "total": 2
		, "hits": 1
		, "fails": 0
	}, {
		"proto": "raise(level: int32, message: string, inspect: variant, maxTrace: int32)"
		, "kind": ".def"
		, "name": "raise"
		, "type": "void"
		, "args": [{
			"proto": "raise.level"
			, "kind": ".def"
			, "name": "level"
			, "declaredIn": "raise(level: int32, message: string, inspect: variant, maxTrace: int32)"
			, "type": "int32"
			, "cast": ".i32"
			, "size": 4
			, "offs": 20
			, "const": false
			, "static": false
		}, {
			"proto": "raise.message"
			, "kind": ".ref"
			, "name": "message"
			, "declaredIn": "raise(level: int32, message: string, inspect: variant, maxTrace: int32)"
			, "type": "string"
			, "cast": ".ref"
			, "size": 4
			, "offs": 16
			, "const": false
			, "static": false
		}, {
			"proto": "raise.inspect"
			, "kind": ".def"
			, "name": "inspect"
			, "declaredIn": "raise(level: int32, message: string, inspect: variant, maxTrace: int32)"
			, "type": "variant"
			, "cast": ".rec"
			, "size": 8
			, "offs": 12
			, "const": false
			, "static": false
		}, {
			"proto": "raise.maxTrace"
			, "kind": ".def"
			, "name": "maxTrace"
			, "declaredIn": "raise(level: int32, message: string, inspect: variant, maxTrace: int32)"
			, "type": "int32"
			, "cast": ".i32"
			, "size": 4
			, "offs": 4
			, "const": false
			, "static": false
		}]
		, "size": 56
		, "offs": 265288
		, "const": false
		, "static": true
		, "time": 98
		, "total": 98
		, "hits": 68
		, "fails": 0
	}, {
		"proto": "compare(a: string, b: string)"
		, "kind": ".ref"
		, "name": "compare"
		, "type": "int32"
		, "file": "stdlib.cvx"
		, "line": 1451
		, "args": [{
			"proto": "compare.a"
			, "kind": ".ref"
			, "name": "a"
			, "declaredIn": "compare(a: string, b: string)"
			, "type": "string"
			, "file": "stdlib.cvx"
			, "line": 1451
			, "cast": ".ref"
			, "size": 4
			, "offs": 12
			, "const": false
			, "static": false
		}, {
			"proto": "compare.b"
			, "kind": ".ref"
			, "name": "b"
			, "declaredIn": "compare(a: string, b: string)"
			, "type": "string"
			, "file": "stdlib.cvx"
			, "line": 1451
			, "cast": ".ref"
			, "size": 4
			, "offs": 8
			, "const": false
			, "static": false
		}]
		, "cast": ".i32"
		, "size": 77
		, "offs": 289451
		, "const": false
		, "static": true
		, "time": 37
		, "total": 37
		, "hits": 1
		, "fails": 0
		, "file": "stdlib.cvx"
		, "line": 1451
	}, {
		"proto": "format(output: char[], pos: int32, format: FormatFlags, value: uint32)"
		, "kind": ".ref"
		, "name": "format"
		, "type": "int32"
		, "file": "stdlib.cvx"
		, "line": 1480
		, "args": [{
			"proto": "format.output"
			, "kind": ".ref"
			, "name": "output"
			, "declaredIn": "format(output: char[], pos: int32, format: FormatFlags, value: uint32)"
			, "type": "char[]"
			, "file": "stdlib.cvx"
			, "line": 1480
			, "cast": ".arr"
			, "size": 8
			, "offs": 24
			, "const": false
			, "static": false
		}, {
			"proto": "format.pos"
			, "kind": ".ref"
			, "name": "pos"
			, "declaredIn": "format(output: char[], pos: int32, format: FormatFlags, value: uint32)"
			, "type": "int32"
			, "file": "stdlib.cvx"
			, "line": 1480
			, "cast": ".i32"
			, "size": 4
			, "offs": 16
			, "const": false
			, "static": false
		}, {
			"proto": "format.format"
			, "kind": ".ref"
			, "name": "format"
			, "declaredIn": "format(output: char[], pos: int32, format: FormatFlags, value: uint32)"
			, "type": "FormatFlags"
			, "file": "stdlib.cvx"
			, "line": 1480
			, "cast": ".ref"
			, "size": 4
			, "offs": 12
			, "const": false
			, "static": false
		}, {
			"proto": "format.value"
			, "kind": ".ref"
			, "name": "value"
			, "declaredIn": "format(output: char[], pos: int32, format: FormatFlags, value: uint32)"
			, "type": "uint32"
			, "file": "stdlib.cvx"
			, "line": 1480
			, "cast": ".u32"
			, "size": 4
			, "offs": 8
			, "const": false
			, "static": false
		}]
		, "cast": ".i32"
		, "size": 720
		, "offs": 289556
		, "const": false
		, "static": true
		, "time": 196
		, "total": 291
		, "hits": 4
		, "fails": 0
		, "file": "stdlib.cvx"
		, "line": 1480
	}, {
		"proto": "readFlags(format: string, spos: int32)"
		, "kind": ".ref"
		, "name": "readFlags"
		, "type": "FormatFlags"
		, "file": "tests/test.string.format.cvx"
		, "line": 4
		, "args": [{
			"proto": "readFlags.format"
			, "kind": ".ref"
			, "name": "format"
			, "declaredIn": "readFlags(format: string, spos: int32)"
			, "type": "string"
			, "file": "tests/test.string.format.cvx"
			, "line": 4
			, "cast": ".ref"
			, "size": 4
			, "offs": 28
			, "const": false
			, "static": false
		}, {
			"proto": "readFlags.spos"
			, "kind": ".ref"
			, "name": "spos"
			, "declaredIn": "readFlags(format: string, spos: int32)"
			, "type": "int32"
			, "file": "tests/test.string.format.cvx"
			, "line": 4
			, "cast": ".ref"
			, "size": 4
			, "offs": 24
			, "const": false
			, "static": false
		}]
		, "cast": ".rec"
		, "size": 435
		, "offs": 293336
		, "const": false
		, "static": true
		, "time": 15
		, "total": 15
		, "hits": 4
		, "fails": 0
		, "file": "tests/test.string.format.cvx"
		, "line": 4
	}, {
		"proto": "format2(output: char[], format: string, value: int32)"
		, "kind": ".ref"
		, "name": "format2"
		, "type": "int32"
		, "file": "tests/test.string.format.cvx"
		, "line": 56
		, "args": [{
			"proto": "format2.output"
			, "kind": ".ref"
			, "name": "output"
			, "declaredIn": "format2(output: char[], format: string, value: int32)"
			, "type": "char[]"
			, "file": "tests/test.string.format.cvx"
			, "line": 56
			, "cast": ".arr"
			, "size": 8
			, "offs": 20
			, "const": false
			, "static": false
		}, {
			"proto": "format2.format"
			, "kind": ".ref"
			, "name": "format"
			, "declaredIn": "format2(output: char[], format: string, value: int32)"
			, "type": "string"
			, "file": "tests/test.string.format.cvx"
			, "line": 56
			, "cast": ".ref"
			, "size": 4
			, "offs": 12
			, "const": false
			, "static": false
		}, {
			"proto": "format2.value"
			, "kind": ".ref"
			, "name": "value"
			, "declaredIn": "format2(output: char[], format: string, value: int32)"
			, "type": "int32"
			, "file": "tests/test.string.format.cvx"
			, "line": 56
			, "cast": ".i32"
			, "size": 4
			, "offs": 8
			, "const": false
			, "static": false
		}]
		, "cast": ".i32"
		, "size": 480
		, "offs": 293771
		, "const": false
		, "static": true
		, "time": 42
		, "total": 350
		, "hits": 1
		, "fails": 0
		, "file": "tests/test.string.format.cvx"
		, "line": 56
	}, {
		"proto": ".main"
		, "kind": ".ref"
		, "name": ".main"
		, "type": "void"
		, "file": "main"
		, "line": 1
		, "cast": ".rec"
		, "size": 455
		, "offs": 294772
		, "const": true
		, "static": true
		, "time": 17
		, "total": 407
		, "hits": 1
		, "fails": 0
		, "file": "main"
		, "line": 1
	}]
	, "statements": [{
	}]
	, "ticksPerSec": 1000000
	, "functionCount": 104
	, "statementCount": 759
}
}
