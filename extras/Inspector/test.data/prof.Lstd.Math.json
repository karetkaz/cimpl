{
"symbols": [{
}]
, "profile": {
	"": "callTree array is constructed from a tick(timestamp) followed by a function offset, if the offset is negative it represents a return from a function instead of a call."
	, "callTree": [
13004,296704,
 13015,272018,
  13018,271128,
  13025,-1,
 13029,-1,
 13032,268328,
 13033,-1,
 13036,272018,
  13038,271128,
  13040,-1,
 13043,-1,
 13046,268328,
 13097,-1,
 13100,272018,
  13102,271128,
  13104,-1,
 13107,-1,
 13110,268328,
 13112,-1,
 13114,272018,
  13116,271128,
  13118,-1,
 13121,-1,
 13124,268328,
 13126,-1,
 13128,272018,
  13130,271128,
  13132,-1,
 13135,-1,
 13138,268328,
 13139,-1,
 13141,272018,
  13144,271128,
  13146,-1,
 13149,-1,
 13152,268328,
 13153,-1,
 13155,272018,
  13158,271128,
  13160,-1,
 13163,-1,
 13165,268328,
 13167,-1,
 13169,272018,
  13171,271128,
  13174,-1,
 13177,-1,
 13179,268328,
 13181,-1,
 13183,272018,
  13185,271128,
  13187,-1,
 13191,-1,
 13193,268328,
 13195,-1,
 13197,272018,
  13199,271128,
  13201,-1,
 13205,-1,
 13207,268328,
 13209,-1,
 13211,272735,
  13214,269728,
  13216,-1,
  13218,269784,
  13226,-1,
 13228,-1,
 13231,268328,
 13233,-1,
 13235,272735,
  13237,269728,
  13239,-1,
  13241,269784,
  13243,-1,
 13245,-1,
 13247,268328,
 13249,-1,
 13251,272735,
  13253,269728,
  13255,-1,
  13257,269784,
  13259,-1,
 13261,-1,
 13263,268328,
 13265,-1,
 13267,272735,
  13269,269728,
  13271,-1,
  13273,269784,
  13275,-1,
 13277,-1,
 13279,268328,
 13281,-1,
 13283,272735,
  13285,269728,
  13287,-1,
  13289,269784,
  13291,-1,
 13293,-1,
 13295,268328,
 13297,-1,
 13299,272735,
  13301,269728,
  13303,-1,
  13305,269784,
  13307,-1,
 13309,-1,
 13311,268328,
 13313,-1,
 13315,272735,
  13317,269728,
  13319,-1,
  13321,269784,
  13323,-1,
 13324,-1,
 13327,268328,
 13329,-1,
 13331,272735,
  13333,269728,
  13335,-1,
  13337,269784,
  13338,-1,
 13340,-1,
 13345,268328,
 13347,-1,
 13349,272735,
  13351,269728,
  13353,-1,
  13355,269784,
  13357,-1,
 13358,-1,
 13361,268328,
 13362,-1,
 13365,272735,
  13367,269728,
  13369,-1,
  13371,269784,
  13373,-1,
 13375,-1,
 13377,268328,
 13379,-1,
 13381,272735,
  13383,269728,
  13385,-1,
  13387,269784,
  13389,-1,
 13391,-1,
 13393,268328,
 13395,-1,
 13397,272735,
  13399,269728,
  13401,-1,
  13403,269784,
  13405,-1,
 13406,-1,
 13409,268328,
 13411,-1,
 13413,272735,
  13415,269728,
  13417,-1,
  13419,269784,
  13421,-1,
 13423,-1,
 13425,268328,
 13427,-1,
 13429,272735,
  13431,269728,
  13433,-1,
  13435,269784,
  13437,-1,
 13439,-1,
 13441,268328,
 13443,-1,
 13445,272735,
  13447,269728,
  13449,-1,
  13451,269784,
  13453,-1,
 13455,-1,
 13457,268328,
 13459,-1,
 13461,272735,
  13463,269728,
  13465,-1,
  13467,269784,
  13469,-1,
 13470,-1,
 13473,268328,
 13475,-1,
 13477,272735,
  13479,269728,
  13481,-1,
  13483,269784,
  13484,-1,
 13486,-1,
 13489,268328,
 13490,-1,
 13493,272735,
  13495,269728,
  13496,-1,
  13498,269784,
  13500,-1,
 13502,-1,
 13504,268328,
 13506,-1,
 13508,272735,
  13511,269728,
  13512,-1,
  13514,269784,
  13516,-1,
 13518,-1,
 13520,268328,
 13522,-1,
 13524,272735,
  13526,269728,
  13528,-1,
  13530,269784,
  13532,-1,
 13534,-1,
 13536,268328,
 13538,-1,
 13540,268104,
 13542,-1,
13543,-1]
	, "functions": [{
		"proto": "Halt(Code: int32)"
		, "kind": ".def"
		, "name": "Halt"
		, "type": "void"
		, "args": [{
			"proto": "Halt.Code"
			, "kind": ".def"
			, "name": "Code"
			, "declaredIn": "Halt(Code: int32)"
			, "type": "int32"
			, "cast": ".i32"
			, "size": 4
			, "offs": 4
			, "const": false
			, "static": false
		}]
		, "size": 56
		, "offs": 268104
		, "const": false
		, "static": true
		, "time": 2
		, "total": 2
		, "hits": 1
		, "fails": 0
	}, {
		"proto": "raise(level: int32, message: string, inspect: variant, maxTrace: int32)"
		, "kind": ".def"
		, "name": "raise"
		, "type": "void"
		, "args": [{
			"proto": "raise.level"
			, "kind": ".def"
			, "name": "level"
			, "declaredIn": "raise(level: int32, message: string, inspect: variant, maxTrace: int32)"
			, "type": "int32"
			, "cast": ".i32"
			, "size": 4
			, "offs": 20
			, "const": false
			, "static": false
		}, {
			"proto": "raise.message"
			, "kind": ".ref"
			, "name": "message"
			, "declaredIn": "raise(level: int32, message: string, inspect: variant, maxTrace: int32)"
			, "type": "string"
			, "cast": ".ref"
			, "size": 4
			, "offs": 16
			, "const": false
			, "static": false
		}, {
			"proto": "raise.inspect"
			, "kind": ".def"
			, "name": "inspect"
			, "declaredIn": "raise(level: int32, message: string, inspect: variant, maxTrace: int32)"
			, "type": "variant"
			, "cast": ".rec"
			, "size": 8
			, "offs": 12
			, "const": false
			, "static": false
		}, {
			"proto": "raise.maxTrace"
			, "kind": ".def"
			, "name": "maxTrace"
			, "declaredIn": "raise(level: int32, message: string, inspect: variant, maxTrace: int32)"
			, "type": "int32"
			, "cast": ".i32"
			, "size": 4
			, "offs": 4
			, "const": false
			, "static": false
		}]
		, "size": 56
		, "offs": 268328
		, "const": false
		, "static": true
		, "time": 104
		, "total": 104
		, "hits": 30
		, "fails": 0
	}, {
		"proto": "float64.sqrt(x: float64)"
		, "kind": ".def"
		, "name": "sqrt"
		, "declaredIn": "float64"
		, "type": "float64"
		, "args": [{
			"proto": "float64.sqrt.x"
			, "kind": ".def"
			, "name": "x"
			, "declaredIn": "float64.sqrt(x: float64)"
			, "type": "float64"
			, "cast": ".f64"
			, "size": 8
			, "offs": 8
			, "const": false
			, "static": false
		}]
		, "size": 56
		, "offs": 269728
		, "const": false
		, "static": true
		, "time": 38
		, "total": 38
		, "hits": 20
		, "fails": 0
	}, {
		"proto": "float64.atan2(x: float64, y: float64)"
		, "kind": ".def"
		, "name": "atan2"
		, "declaredIn": "float64"
		, "type": "float64"
		, "args": [{
			"proto": "float64.atan2.x"
			, "kind": ".def"
			, "name": "x"
			, "declaredIn": "float64.atan2(x: float64, y: float64)"
			, "type": "float64"
			, "cast": ".f64"
			, "size": 8
			, "offs": 16
			, "const": false
			, "static": false
		}, {
			"proto": "float64.atan2.y"
			, "kind": ".def"
			, "name": "y"
			, "declaredIn": "float64.atan2(x: float64, y: float64)"
			, "type": "float64"
			, "cast": ".f64"
			, "size": 8
			, "offs": 8
			, "const": false
			, "static": false
		}]
		, "size": 56
		, "offs": 269784
		, "const": false
		, "static": true
		, "time": 44
		, "total": 44
		, "hits": 20
		, "fails": 0
	}, {
		"proto": "Math.modf(x: float64, intPart: float64)"
		, "kind": ".ref"
		, "name": "modf"
		, "declaredIn": "Math"
		, "type": "float64"
		, "file": "stdlib.cvx"
		, "line": 30
		, "args": [{
			"proto": "Math.modf.x"
			, "kind": ".ref"
			, "name": "x"
			, "declaredIn": "Math.modf(x: float64, intPart: float64)"
			, "type": "float64"
			, "file": "stdlib.cvx"
			, "line": 30
			, "cast": ".f64"
			, "size": 8
			, "offs": 20
			, "const": false
			, "static": false
		}, {
			"proto": "Math.modf.intPart"
			, "kind": ".ref"
			, "name": "intPart"
			, "declaredIn": "Math.modf(x: float64, intPart: float64)"
			, "type": "float64"
			, "file": "stdlib.cvx"
			, "line": 30
			, "cast": ".ref"
			, "size": 4
			, "offs": 12
			, "const": false
			, "static": false
		}]
		, "cast": ".f64"
		, "size": 103
		, "offs": 271128
		, "const": false
		, "static": true
		, "time": 26
		, "total": 26
		, "hits": 10
		, "fails": 0
		, "file": "stdlib.cvx"
		, "line": 30
	}, {
		"proto": "Math.Tan(arg: float64)"
		, "kind": ".ref"
		, "name": "Tan"
		, "declaredIn": "Math"
		, "type": "float64"
		, "file": "stdlib.cvx"
		, "line": 309
		, "args": [{
			"proto": "Math.Tan.arg"
			, "kind": ".ref"
			, "name": "arg"
			, "declaredIn": "Math.Tan(arg: float64)"
			, "type": "float64"
			, "file": "stdlib.cvx"
			, "line": 309
			, "cast": ".f64"
			, "size": 8
			, "offs": 16
			, "const": false
			, "static": false
		}]
		, "cast": ".f64"
		, "size": 388
		, "offs": 272018
		, "const": false
		, "static": true
		, "time": 56
		, "total": 82
		, "hits": 10
		, "fails": 0
		, "file": "stdlib.cvx"
		, "line": 309
	}, {
		"proto": "Math.Asin(x: float64)"
		, "kind": ".ref"
		, "name": "Asin"
		, "declaredIn": "Math"
		, "type": "float64"
		, "file": "stdlib.cvx"
		, "line": 422
		, "args": [{
			"proto": "Math.Asin.x"
			, "kind": ".ref"
			, "name": "x"
			, "declaredIn": "Math.Asin(x: float64)"
			, "type": "float64"
			, "file": "stdlib.cvx"
			, "line": 422
			, "cast": ".f64"
			, "size": 8
			, "offs": 16
			, "const": false
			, "static": false
		}]
		, "cast": ".f64"
		, "size": 183
		, "offs": 272735
		, "const": false
		, "static": true
		, "time": 118
		, "total": 200
		, "hits": 20
		, "fails": 0
		, "file": "stdlib.cvx"
		, "line": 422
	}, {
		"proto": ".main"
		, "kind": ".ref"
		, "name": ".main"
		, "type": "void"
		, "file": "main"
		, "line": 1
		, "cast": ".rec"
		, "size": 1476
		, "offs": 296704
		, "const": true
		, "static": true
		, "time": 151
		, "total": 539
		, "hits": 1
		, "fails": 0
		, "file": "main"
		, "line": 1
	}]
	, "statements": [{
	}]
	, "ticksPerSec": 1000000
	, "functionCount": 102
	, "statementCount": 723
}
}
