{
"symbols": [{
}]
, "profile": {
	"": "callTree array is constructed from a tick(timestamp) followed by a function offset, if the offset is negative it represents a return from a function instead of a call."
	, "callTree": [
16034,326256,
 16071,325986,
 16074,-1,
 16076,295168,
 16078,-1,
 16080,298481,
 16083,-1,
 16085,325707,
  16087,325008,
   16090,296176,
   16092,-1,
   16094,323547,
    16096,296176,
    16098,-1,
    16100,296176,
    16101,-1,
    16103,296176,
    16105,-1,
   16107,-1,
   16109,323547,
    16111,296176,
    16113,-1,
    16115,296176,
    16117,-1,
    16119,296176,
    16120,-1,
   16122,-1,
   16124,296176,
   16126,-1,
  16128,-1,
 16130,-1,
 16132,325707,
  16134,325008,
   16137,296176,
   16138,-1,
   16140,323547,
    16142,296176,
    16144,-1,
    16146,296176,
    16147,-1,
    16150,296176,
    16151,-1,
   16153,-1,
   16155,323547,
    16157,296176,
    16159,-1,
    16161,296176,
    16163,-1,
    16165,296176,
    16166,-1,
   16168,-1,
   16170,296176,
   16172,-1,
  16174,-1,
 16176,-1,
 16178,298481,
 16182,-1,
 16184,325986,
 16186,-1,
 16188,295168,
 16190,-1,
 16192,298481,
 16195,-1,
 16197,325736,
  16199,325008,
   16202,296176,
   16203,-1,
   16205,323547,
    16207,296176,
    16209,-1,
    16211,296176,
    16213,-1,
    16215,296176,
    16216,-1,
   16218,-1,
   16221,323547,
    16223,296176,
    16224,-1,
    16226,296176,
    16228,-1,
    16230,296176,
    16232,-1,
   16233,-1,
   16236,296176,
   16237,-1,
  16239,-1,
 16241,-1,
 16244,325736,
  16246,325008,
   16248,296176,
   16249,-1,
   16251,323547,
    16254,296176,
    16255,-1,
    16257,296176,
    16259,-1,
    16261,296176,
    16262,-1,
   16264,-1,
   16267,323547,
    16269,296176,
    16270,-1,
    16272,296176,
    16274,-1,
    16276,296176,
    16278,-1,
   16280,-1,
   16282,296176,
   16283,-1,
  16285,-1,
 16287,-1,
 16290,298481,
 16293,-1,
 16295,325986,
 16298,-1,
 16300,295168,
 16301,-1,
 16303,296344,
 16316,-1,
 16318,325765,
  16321,325008,
   16325,296176,
   16327,-1,
   16330,323547,
    16332,296176,
    16333,-1,
    16336,296176,
    16339,-1,
    16342,296176,
    16344,-1,
   16346,-1,
   16350,323547,
    16353,296176,
    16355,-1,
    16358,296176,
    16360,-1,
    16363,296176,
    16366,-1,
   16368,-1,
   16372,296176,
   16374,-1,
  16377,-1,
  16380,296064,
  16383,-1,
 16385,-1,
 16387,325765,
  16389,325008,
   16392,296176,
   16393,-1,
   16395,323547,
    16397,296176,
    16399,-1,
    16402,296176,
    16405,-1,
    16408,296176,
    16410,-1,
   16414,-1,
   16417,323547,
    16421,296176,
    16423,-1,
    16426,296176,
    16429,-1,
    16432,296176,
    16435,-1,
   16438,-1,
   16441,296176,
   16444,-1,
  16447,-1,
  16450,296064,
  16453,-1,
 16456,-1,
 16459,298858,
  16461,297968,
  16464,-1,
 16468,-1,
 16470,325986,
 16473,-1,
 16475,295168,
 16476,-1,
 16478,296512,
 16481,-1,
 16483,325228,
 16499,-1,
 16502,325228,
 16515,-1,
 16518,296512,
 16520,-1,
 16523,325986,
 16527,-1,
 16530,295168,
 16532,-1,
 16534,296512,
 16536,-1,
 16539,324210,
  16542,323391,
  16546,-1,
 16550,-1,
 16553,324210,
  16557,323391,
  16560,-1,
 16564,-1,
 16568,296512,
 16570,-1,
 16574,325986,
 16578,-1,
 16581,295168,
 16584,-1,
 16587,294944,
 16589,-1,
16592,-1]
	, "functions": [{
		"proto": "Halt(Code: int32)"
		, "kind": ".def"
		, "name": "Halt"
		, "type": "void"
		, "args": [{
			"proto": "Halt.Code"
			, "kind": ".def"
			, "name": "Code"
			, "declaredIn": "Halt(Code: int32)"
			, "type": "int32"
			, "cast": ".i32"
			, "size": 4
			, "offs": 4
			, "const": false
			, "static": false
		}]
		, "size": 56
		, "offs": 294944
		, "const": false
		, "static": true
		, "time": 2
		, "total": 2
		, "hits": 1
		, "fails": 0
	}, {
		"proto": "raise(level: int32, message: string, inspect: variant, maxTrace: int32)"
		, "kind": ".def"
		, "name": "raise"
		, "type": "void"
		, "args": [{
			"proto": "raise.level"
			, "kind": ".def"
			, "name": "level"
			, "declaredIn": "raise(level: int32, message: string, inspect: variant, maxTrace: int32)"
			, "type": "int32"
			, "cast": ".i32"
			, "size": 4
			, "offs": 20
			, "const": false
			, "static": false
		}, {
			"proto": "raise.message"
			, "kind": ".ref"
			, "name": "message"
			, "declaredIn": "raise(level: int32, message: string, inspect: variant, maxTrace: int32)"
			, "type": "string"
			, "cast": ".ref"
			, "size": 4
			, "offs": 16
			, "const": false
			, "static": false
		}, {
			"proto": "raise.inspect"
			, "kind": ".def"
			, "name": "inspect"
			, "declaredIn": "raise(level: int32, message: string, inspect: variant, maxTrace: int32)"
			, "type": "variant"
			, "cast": ".rec"
			, "size": 8
			, "offs": 12
			, "const": false
			, "static": false
		}, {
			"proto": "raise.maxTrace"
			, "kind": ".def"
			, "name": "maxTrace"
			, "declaredIn": "raise(level: int32, message: string, inspect: variant, maxTrace: int32)"
			, "type": "int32"
			, "cast": ".i32"
			, "size": 4
			, "offs": 4
			, "const": false
			, "static": false
		}]
		, "size": 56
		, "offs": 295168
		, "const": false
		, "static": true
		, "time": 11
		, "total": 11
		, "hits": 6
		, "fails": 0
	}, {
		"proto": "int64.Shl(Value: int64, Count: int32)"
		, "kind": ".def"
		, "name": "Shl"
		, "declaredIn": "int64"
		, "type": "int64"
		, "args": [{
			"proto": "int64.Shl.Value"
			, "kind": ".def"
			, "name": "Value"
			, "declaredIn": "int64.Shl(Value: int64, Count: int32)"
			, "type": "int64"
			, "cast": ".i64"
			, "size": 8
			, "offs": 12
			, "const": false
			, "static": false
		}, {
			"proto": "int64.Shl.Count"
			, "kind": ".def"
			, "name": "Count"
			, "declaredIn": "int64.Shl(Value: int64, Count: int32)"
			, "type": "int32"
			, "cast": ".i32"
			, "size": 4
			, "offs": 4
			, "const": false
			, "static": false
		}]
		, "size": 56
		, "offs": 296064
		, "const": false
		, "static": true
		, "time": 6
		, "total": 6
		, "hits": 2
		, "fails": 0
	}, {
		"proto": "int64.Sar(Value: int64, Count: int32)"
		, "kind": ".def"
		, "name": "Sar"
		, "declaredIn": "int64"
		, "type": "int64"
		, "args": [{
			"proto": "int64.Sar.Value"
			, "kind": ".def"
			, "name": "Value"
			, "declaredIn": "int64.Sar(Value: int64, Count: int32)"
			, "type": "int64"
			, "cast": ".i64"
			, "size": 8
			, "offs": 12
			, "const": false
			, "static": false
		}, {
			"proto": "int64.Sar.Count"
			, "kind": ".def"
			, "name": "Count"
			, "declaredIn": "int64.Sar(Value: int64, Count: int32)"
			, "type": "int32"
			, "cast": ".i32"
			, "size": 4
			, "offs": 4
			, "const": false
			, "static": false
		}]
		, "size": 56
		, "offs": 296176
		, "const": false
		, "static": true
		, "time": 85
		, "total": 85
		, "hits": 48
		, "fails": 0
	}, {
		"proto": "float64.tan(x: float64)"
		, "kind": ".def"
		, "name": "tan"
		, "declaredIn": "float64"
		, "type": "float64"
		, "args": [{
			"proto": "float64.tan.x"
			, "kind": ".def"
			, "name": "x"
			, "declaredIn": "float64.tan(x: float64)"
			, "type": "float64"
			, "cast": ".f64"
			, "size": 8
			, "offs": 8
			, "const": false
			, "static": false
		}]
		, "size": 56
		, "offs": 296344
		, "const": false
		, "static": true
		, "time": 13
		, "total": 13
		, "hits": 1
		, "fails": 0
	}, {
		"proto": "float64.pow(x: float64, y: float64)"
		, "kind": ".def"
		, "name": "pow"
		, "declaredIn": "float64"
		, "type": "float64"
		, "args": [{
			"proto": "float64.pow.x"
			, "kind": ".def"
			, "name": "x"
			, "declaredIn": "float64.pow(x: float64, y: float64)"
			, "type": "float64"
			, "cast": ".f64"
			, "size": 8
			, "offs": 16
			, "const": false
			, "static": false
		}, {
			"proto": "float64.pow.y"
			, "kind": ".def"
			, "name": "y"
			, "declaredIn": "float64.pow(x: float64, y: float64)"
			, "type": "float64"
			, "cast": ".f64"
			, "size": 8
			, "offs": 8
			, "const": false
			, "static": false
		}]
		, "size": 56
		, "offs": 296512
		, "const": false
		, "static": true
		, "time": 9
		, "total": 9
		, "hits": 4
		, "fails": 0
	}, {
		"proto": "Math.modf(x: float64, intPart: float64)"
		, "kind": ".ref"
		, "name": "modf"
		, "declaredIn": "Math"
		, "type": "float64"
		, "file": "stdlib.cvx"
		, "line": 30
		, "args": [{
			"proto": "Math.modf.x"
			, "kind": ".ref"
			, "name": "x"
			, "declaredIn": "Math.modf(x: float64, intPart: float64)"
			, "type": "float64"
			, "file": "stdlib.cvx"
			, "line": 30
			, "cast": ".f64"
			, "size": 8
			, "offs": 20
			, "const": false
			, "static": false
		}, {
			"proto": "Math.modf.intPart"
			, "kind": ".ref"
			, "name": "intPart"
			, "declaredIn": "Math.modf(x: float64, intPart: float64)"
			, "type": "float64"
			, "file": "stdlib.cvx"
			, "line": 30
			, "cast": ".ref"
			, "size": 4
			, "offs": 12
			, "const": false
			, "static": false
		}]
		, "cast": ".f64"
		, "size": 103
		, "offs": 297968
		, "const": false
		, "static": true
		, "time": 3
		, "total": 3
		, "hits": 1
		, "fails": 0
		, "file": "stdlib.cvx"
		, "line": 30
	}, {
		"proto": "Math.sincos(arg: float64, quad: int32)"
		, "kind": ".ref"
		, "name": "sincos"
		, "declaredIn": "Math"
		, "type": "float64"
		, "file": "stdlib.cvx"
		, "line": 253
		, "args": [{
			"proto": "Math.sincos.arg"
			, "kind": ".ref"
			, "name": "arg"
			, "declaredIn": "Math.sincos(arg: float64, quad: int32)"
			, "type": "float64"
			, "file": "stdlib.cvx"
			, "line": 253
			, "cast": ".f64"
			, "size": 8
			, "offs": 20
			, "const": false
			, "static": false
		}, {
			"proto": "Math.sincos.quad"
			, "kind": ".ref"
			, "name": "quad"
			, "declaredIn": "Math.sincos(arg: float64, quad: int32)"
			, "type": "int32"
			, "file": "stdlib.cvx"
			, "line": 253
			, "cast": ".i32"
			, "size": 4
			, "offs": 12
			, "const": false
			, "static": false
		}]
		, "cast": ".f64"
		, "size": 377
		, "offs": 298481
		, "const": false
		, "static": true
		, "time": 13
		, "total": 13
		, "hits": 4
		, "fails": 0
		, "file": "stdlib.cvx"
		, "line": 253
	}, {
		"proto": "Math.Tan(arg: float64)"
		, "kind": ".ref"
		, "name": "Tan"
		, "declaredIn": "Math"
		, "type": "float64"
		, "file": "stdlib.cvx"
		, "line": 309
		, "args": [{
			"proto": "Math.Tan.arg"
			, "kind": ".ref"
			, "name": "arg"
			, "declaredIn": "Math.Tan(arg: float64)"
			, "type": "float64"
			, "file": "stdlib.cvx"
			, "line": 309
			, "cast": ".f64"
			, "size": 8
			, "offs": 16
			, "const": false
			, "static": false
		}]
		, "cast": ".f64"
		, "size": 388
		, "offs": 298858
		, "const": false
		, "static": true
		, "time": 6
		, "total": 9
		, "hits": 1
		, "fails": 0
		, "file": "stdlib.cvx"
		, "line": 309
	}, {
		"proto": "Fixed.gettbl(tbl: uint16[257], x: int32)"
		, "kind": ".ref"
		, "name": "gettbl"
		, "declaredIn": "Fixed"
		, "type": "uint32"
		, "file": "tests/test.fixed.cvx"
		, "line": 78
		, "args": [{
			"proto": "Fixed.gettbl.tbl"
			, "kind": ".ref"
			, "name": "tbl"
			, "declaredIn": "Fixed.gettbl(tbl: uint16[257], x: int32)"
			, "type": "uint16[257]"
			, "file": "tests/test.fixed.cvx"
			, "line": 78
			, "cast": ".ref"
			, "size": 4
			, "offs": 12
			, "const": true
			, "static": false
		}, {
			"proto": "Fixed.gettbl.x"
			, "kind": ".ref"
			, "name": "x"
			, "declaredIn": "Fixed.gettbl(tbl: uint16[257], x: int32)"
			, "type": "int32"
			, "file": "tests/test.fixed.cvx"
			, "line": 78
			, "cast": ".i32"
			, "size": 4
			, "offs": 8
			, "const": false
			, "static": false
		}]
		, "cast": ".u32"
		, "size": 74
		, "offs": 323391
		, "const": false
		, "static": true
		, "time": 7
		, "total": 7
		, "hits": 2
		, "fails": 0
		, "file": "tests/test.fixed.cvx"
		, "line": 78
	}, {
		"proto": "Fixed.eval4(x: fixed, p: fixed[4])"
		, "kind": ".ref"
		, "name": "eval4"
		, "declaredIn": "Fixed"
		, "type": "fixed"
		, "file": "tests/test.fixed.cvx"
		, "line": 93
		, "args": [{
			"proto": "Fixed.eval4.x"
			, "kind": ".ref"
			, "name": "x"
			, "declaredIn": "Fixed.eval4(x: fixed, p: fixed[4])"
			, "type": "fixed"
			, "file": "tests/test.fixed.cvx"
			, "line": 93
			, "cast": ".rec"
			, "size": 4
			, "offs": 12
			, "const": false
			, "static": false
		}, {
			"proto": "Fixed.eval4.p"
			, "kind": ".ref"
			, "name": "p"
			, "declaredIn": "Fixed.eval4(x: fixed, p: fixed[4])"
			, "type": "fixed[4]"
			, "file": "tests/test.fixed.cvx"
			, "line": 93
			, "cast": ".ref"
			, "size": 4
			, "offs": 8
			, "const": true
			, "static": false
		}]
		, "cast": ".rec"
		, "size": 147
		, "offs": 323547
		, "const": false
		, "static": true
		, "time": 111
		, "total": 177
		, "hits": 12
		, "fails": 0
		, "file": "tests/test.fixed.cvx"
		, "line": 93
	}, {
		"proto": "Fixed.fxp2xp(x: fixed)"
		, "kind": ".ref"
		, "name": "fxp2xp"
		, "declaredIn": "Fixed"
		, "type": "fixed"
		, "file": "tests/test.fixed.cvx"
		, "line": 100
		, "args": [{
			"proto": "Fixed.fxp2xp.x"
			, "kind": ".ref"
			, "name": "x"
			, "declaredIn": "Fixed.fxp2xp(x: fixed)"
			, "type": "fixed"
			, "file": "tests/test.fixed.cvx"
			, "line": 100
			, "cast": ".rec"
			, "size": 4
			, "offs": 8
			, "const": false
			, "static": false
		}]
		, "cast": ".rec"
		, "size": 109
		, "offs": 324210
		, "const": false
		, "static": true
		, "time": 15
		, "total": 22
		, "hits": 2
		, "fails": 0
		, "file": "tests/test.fixed.cvx"
		, "line": 100
	}, {
		"proto": "Fixed.sincos(x: fixed, s: fixed, c: fixed)"
		, "kind": ".ref"
		, "name": "sincos"
		, "declaredIn": "Fixed"
		, "type": "void"
		, "file": "tests/test.fixed.cvx"
		, "line": 214
		, "args": [{
			"proto": "Fixed.sincos.x"
			, "kind": ".ref"
			, "name": "x"
			, "declaredIn": "Fixed.sincos(x: fixed, s: fixed, c: fixed)"
			, "type": "fixed"
			, "file": "tests/test.fixed.cvx"
			, "line": 214
			, "cast": ".rec"
			, "size": 4
			, "offs": 12
			, "const": false
			, "static": false
		}, {
			"proto": "Fixed.sincos.s"
			, "kind": ".ref"
			, "name": "s"
			, "declaredIn": "Fixed.sincos(x: fixed, s: fixed, c: fixed)"
			, "type": "fixed"
			, "file": "tests/test.fixed.cvx"
			, "line": 214
			, "cast": ".ref"
			, "size": 4
			, "offs": 8
			, "const": false
			, "static": false
		}, {
			"proto": "Fixed.sincos.c"
			, "kind": ".ref"
			, "name": "c"
			, "declaredIn": "Fixed.sincos(x: fixed, s: fixed, c: fixed)"
			, "type": "fixed"
			, "file": "tests/test.fixed.cvx"
			, "line": 214
			, "cast": ".ref"
			, "size": 4
			, "offs": 4
			, "const": false
			, "static": false
		}]
		, "cast": ".vid"
		, "size": 220
		, "offs": 325008
		, "const": false
		, "static": true
		, "time": 78
		, "total": 274
		, "hits": 6
		, "fails": 0
		, "file": "tests/test.fixed.cvx"
		, "line": 214
	}, {
		"proto": "Fixed.Sqrt(x: fixed)"
		, "kind": ".ref"
		, "name": "Sqrt"
		, "declaredIn": "Fixed"
		, "type": "fixed"
		, "file": "tests/test.fixed.cvx"
		, "line": 269
		, "args": [{
			"proto": "Fixed.Sqrt.x"
			, "kind": ".ref"
			, "name": "x"
			, "declaredIn": "Fixed.Sqrt(x: fixed)"
			, "type": "fixed"
			, "file": "tests/test.fixed.cvx"
			, "line": 269
			, "cast": ".rec"
			, "size": 4
			, "offs": 8
			, "const": false
			, "static": false
		}]
		, "cast": ".rec"
		, "size": 135
		, "offs": 325228
		, "const": false
		, "static": true
		, "time": 29
		, "total": 29
		, "hits": 2
		, "fails": 0
		, "file": "tests/test.fixed.cvx"
		, "line": 269
	}, {
		"proto": "Fixed.Sin(x: fixed)"
		, "kind": ".ref"
		, "name": "Sin"
		, "declaredIn": "Fixed"
		, "type": "fixed"
		, "file": "tests/test.fixed.cvx"
		, "line": 325
		, "args": [{
			"proto": "Fixed.Sin.x"
			, "kind": ".ref"
			, "name": "x"
			, "declaredIn": "Fixed.Sin(x: fixed)"
			, "type": "fixed"
			, "file": "tests/test.fixed.cvx"
			, "line": 325
			, "cast": ".rec"
			, "size": 4
			, "offs": 8
			, "const": false
			, "static": false
		}]
		, "cast": ".rec"
		, "size": 29
		, "offs": 325707
		, "const": false
		, "static": true
		, "time": 8
		, "total": 89
		, "hits": 2
		, "fails": 0
		, "file": "tests/test.fixed.cvx"
		, "line": 325
	}, {
		"proto": "Fixed.Cos(x: fixed)"
		, "kind": ".ref"
		, "name": "Cos"
		, "declaredIn": "Fixed"
		, "type": "fixed"
		, "file": "tests/test.fixed.cvx"
		, "line": 329
		, "args": [{
			"proto": "Fixed.Cos.x"
			, "kind": ".ref"
			, "name": "x"
			, "declaredIn": "Fixed.Cos(x: fixed)"
			, "type": "fixed"
			, "file": "tests/test.fixed.cvx"
			, "line": 329
			, "cast": ".rec"
			, "size": 4
			, "offs": 8
			, "const": false
			, "static": false
		}]
		, "cast": ".rec"
		, "size": 29
		, "offs": 325736
		, "const": false
		, "static": true
		, "time": 8
		, "total": 87
		, "hits": 2
		, "fails": 0
		, "file": "tests/test.fixed.cvx"
		, "line": 329
	}, {
		"proto": "Fixed.Tan(x: fixed)"
		, "kind": ".ref"
		, "name": "Tan"
		, "declaredIn": "Fixed"
		, "type": "fixed"
		, "file": "tests/test.fixed.cvx"
		, "line": 333
		, "args": [{
			"proto": "Fixed.Tan.x"
			, "kind": ".ref"
			, "name": "x"
			, "declaredIn": "Fixed.Tan(x: fixed)"
			, "type": "fixed"
			, "file": "tests/test.fixed.cvx"
			, "line": 333
			, "cast": ".rec"
			, "size": 4
			, "offs": 8
			, "const": false
			, "static": false
		}]
		, "cast": ".rec"
		, "size": 62
		, "offs": 325765
		, "const": false
		, "static": true
		, "time": 16
		, "total": 136
		, "hits": 2
		, "fails": 0
		, "file": "tests/test.fixed.cvx"
		, "line": 333
	}, {
		"proto": "test(info: assertInfo, eps: float64)"
		, "kind": ".ref"
		, "name": "test"
		, "type": "int32"
		, "file": "tests/test.fixed.cvx"
		, "line": 444
		, "args": [{
			"proto": "test.info"
			, "kind": ".ref"
			, "name": "info"
			, "declaredIn": "test(info: assertInfo, eps: float64)"
			, "type": "assertInfo"
			, "file": "tests/test.fixed.cvx"
			, "line": 444
			, "cast": ".rec"
			, "size": 24
			, "offs": 36
			, "const": true
			, "static": false
		}, {
			"proto": "test.eps"
			, "kind": ".ref"
			, "name": "eps"
			, "declaredIn": "test(info: assertInfo, eps: float64)"
			, "type": "float64"
			, "file": "tests/test.fixed.cvx"
			, "line": 444
			, "cast": ".f64"
			, "size": 8
			, "offs": 12
			, "const": false
			, "static": false
		}]
		, "cast": ".i32"
		, "size": 169
		, "offs": 325986
		, "const": false
		, "static": true
		, "time": 19
		, "total": 19
		, "hits": 6
		, "fails": 0
		, "file": "tests/test.fixed.cvx"
		, "line": 444
	}, {
		"proto": ".main"
		, "kind": ".ref"
		, "name": ".main"
		, "type": "void"
		, "file": "main"
		, "line": 1
		, "cast": ".rec"
		, "size": 7766
		, "offs": 326256
		, "const": true
		, "static": true
		, "time": 119
		, "total": 558
		, "hits": 1
		, "fails": 0
		, "file": "main"
		, "line": 1
	}]
	, "statements": [{
	}]
	, "ticksPerSec": 1000000
	, "functionCount": 117
	, "statementCount": 838
}
}
