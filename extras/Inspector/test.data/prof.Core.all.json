{
"symbols": [{
}]
, "profile": {
	"": "callTree array is constructed from a tick(timestamp) followed by a function offset, if the offset is negative it represents a return from a function instead of a call."
	, "callTree": [
30078,361352,
 30096,330240,
 30102,-1,
 30106,330128,
 30113,-1,
 30122,329792,
 30201,-1,
 30208,329792,
 30212,-1,
 30216,329792,
 30219,-1,
 30223,329792,
 30226,-1,
 30230,329792,
 30233,-1,
 30241,358597,
  30245,330184,
  30250,-1,
  30254,330184,
  30258,-1,
  30262,330184,
  30265,-1,
  30269,330184,
  30271,-1,
  30275,330184,
  30278,-1,
  30282,330184,
  30285,-1,
  30289,330184,
  30292,-1,
  30296,330184,
  30299,-1,
  30303,330184,
  30306,-1,
  30309,330184,
  30312,-1,
  30316,330184,
  30319,-1,
  30323,330184,
  30326,-1,
  30330,330184,
  30333,-1,
  30338,330184,
  30340,-1,
  30344,330184,
  30347,-1,
 30351,-1,
 30356,358072,
 30365,-1,
 30370,329792,
 30478,-1,
 30484,358466,
  30488,358254,
   30498,358254,
   30507,-1,
   30511,358254,
    30524,358254,
     30532,358254,
      30539,358254,
      30546,-1,
     30550,-1,
     30554,358254,
      30562,358254,
      30569,-1,
      30573,358254,
      30580,-1,
     30584,-1,
    30588,-1,
    30592,358254,
     30599,358254,
      30606,358254,
      30613,-1,
     30617,-1,
    30621,-1,
   30625,-1,
  30629,-1,
 30633,-1,
 30637,329792,
 30743,-1,
 30748,358491,
 30756,-1,
 30761,358750,
  30764,358733,
   30768,358724,
   30772,-1,
  30776,-1,
 30780,-1,
 30785,329792,
 30788,-1,
 30792,358855,
  30796,358776,
  30800,-1,
 30804,-1,
 30809,329792,
 30812,-1,
 30816,358855,
  30820,358776,
  30824,-1,
 30828,-1,
 30832,329792,
 30835,-1,
 30839,358855,
  30843,358776,
  30847,-1,
 30851,-1,
 30855,329792,
 30858,-1,
 30862,352534,
 30866,-1,
 30870,352478,
 30874,-1,
 30879,352617,
 30884,-1,
 30888,352544,
 30892,-1,
 30897,352315,
 30901,-1,
 30906,352162,
 30910,-1,
 30914,358936,
  30918,330744,
  30921,-1,
  30925,330688,
  30929,-1,
  30933,330520,
  30936,-1,
 30940,-1,
 30944,358936,
  30948,330744,
  30951,-1,
  30954,330688,
  30957,-1,
  30961,330520,
  30964,-1,
 30968,-1,
 30998,359087,
  31004,330184,
  31007,-1,
  31011,330184,
  31014,-1,
  31017,330184,
  31020,-1,
  31024,330184,
  31027,-1,
 31031,-1,
 31036,359087,
  31040,330184,
  31043,-1,
  31046,330184,
  31049,-1,
  31053,330184,
  31056,-1,
  31059,330184,
  31062,-1,
 31066,-1,
 31071,359087,
  31075,330184,
  31078,-1,
  31081,330184,
  31084,-1,
  31088,330184,
  31090,-1,
  31094,330184,
  31097,-1,
 31101,-1,
 31106,359087,
  31109,330184,
  31112,-1,
  31116,330184,
  31119,-1,
  31123,330184,
  31126,-1,
  31129,330184,
  31132,-1,
 31137,-1,
 31141,359087,
  31145,330184,
  31148,-1,
  31152,330184,
  31155,-1,
  31159,330184,
  31162,-1,
  31166,330184,
  31169,-1,
 31173,-1,
 31177,359087,
  31181,330184,
  31184,-1,
  31187,330184,
  31190,-1,
  31194,330184,
  31197,-1,
  31200,330184,
  31203,-1,
 31207,-1,
 31212,359087,
  31216,330184,
  31219,-1,
  31222,330184,
  31225,-1,
  31229,330184,
  31232,-1,
  31235,330184,
  31238,-1,
 31242,-1,
 31247,359087,
  31250,330184,
  31253,-1,
  31257,330184,
  31260,-1,
  31263,330184,
  31266,-1,
  31270,330184,
  31273,-1,
 31277,-1,
 31282,359087,
  31285,330184,
  31288,-1,
  31292,330184,
  31295,-1,
  31298,330184,
  31301,-1,
  31305,330184,
  31308,-1,
 31312,-1,
 31316,359087,
  31320,330184,
  31323,-1,
  31326,330184,
  31330,-1,
  31333,330184,
  31336,-1,
  31340,330184,
  31343,-1,
 31347,-1,
 31352,359087,
  31356,330184,
  31359,-1,
  31362,330184,
  31365,-1,
  31369,330184,
  31372,-1,
  31375,330184,
  31378,-1,
 31382,-1,
 31387,359087,
  31391,330184,
  31394,-1,
  31397,330184,
  31400,-1,
  31404,330184,
  31407,-1,
  31410,330184,
  31413,-1,
 31417,-1,
 31422,359087,
  31426,330184,
  31429,-1,
  31432,330184,
  31435,-1,
  31439,330184,
  31442,-1,
  31445,330184,
  31448,-1,
 31452,-1,
 31457,359087,
  31460,330184,
  31463,-1,
  31467,330184,
  31470,-1,
  31473,330184,
  31476,-1,
  31480,330184,
  31483,-1,
 31487,-1,
 31492,359087,
  31495,330184,
  31498,-1,
  31501,330184,
  31510,-1,
  31515,330184,
  31518,-1,
  31521,330184,
  31525,-1,
 31529,-1,
 31533,359087,
  31537,330184,
  31540,-1,
  31544,330184,
  31547,-1,
  31550,330184,
  31553,-1,
  31557,330184,
  31560,-1,
 31564,-1,
 31569,359087,
  31572,330184,
  31575,-1,
  31579,330184,
  31582,-1,
  31585,330184,
  31588,-1,
  31592,330184,
  31595,-1,
 31599,-1,
 31604,359087,
  31607,330184,
  31610,-1,
  31614,330184,
  31617,-1,
  31620,330184,
  31623,-1,
  31627,330184,
  31630,-1,
 31634,-1,
 31638,359087,
  31642,330184,
  31645,-1,
  31649,330184,
  31652,-1,
  31655,330184,
  31658,-1,
  31662,330184,
  31665,-1,
 31669,-1,
 31674,359087,
  31677,330184,
  31680,-1,
  31684,330184,
  31687,-1,
  31691,330184,
  31694,-1,
  31697,330184,
  31700,-1,
 31704,-1,
 31709,359087,
  31712,330184,
  31715,-1,
  31719,330184,
  31722,-1,
  31726,330184,
  31729,-1,
  31732,330184,
  31735,-1,
 31739,-1,
 31744,359087,
  31747,330184,
  31750,-1,
  31754,330184,
  31757,-1,
  31760,330184,
  31763,-1,
  31767,330184,
  31770,-1,
 31774,-1,
 31779,359087,
  31782,330184,
  31785,-1,
  31789,330184,
  31792,-1,
  31795,330184,
  31798,-1,
  31802,330184,
  31805,-1,
 31809,-1,
 31814,359087,
  31817,330184,
  31820,-1,
  31824,330184,
  31827,-1,
  31830,330184,
  31834,-1,
  31837,330184,
  31840,-1,
 31844,-1,
 31849,359087,
  31852,330184,
  31855,-1,
  31859,330184,
  31862,-1,
  31866,330184,
  31869,-1,
  31872,330184,
  31875,-1,
 31879,-1,
 31884,359087,
  31887,330184,
  31890,-1,
  31894,330184,
  31897,-1,
  31901,330184,
  31903,-1,
  31907,330184,
  31910,-1,
 31914,-1,
 31918,359087,
  31922,330184,
  31925,-1,
  31928,330184,
  31932,-1,
  31935,330184,
  31938,-1,
  31942,330184,
  31945,-1,
 31949,-1,
 31953,359087,
  31957,330184,
  31960,-1,
  31963,330184,
  31966,-1,
  31970,330184,
  31973,-1,
  31976,330184,
  31980,-1,
 31983,-1,
 31988,359087,
  31992,330184,
  31995,-1,
  31998,330184,
  32001,-1,
  32005,330184,
  32008,-1,
  32011,330184,
  32014,-1,
 32018,-1,
 32023,359087,
  32026,330184,
  32029,-1,
  32033,330184,
  32036,-1,
  32039,330184,
  32042,-1,
  32046,330184,
  32049,-1,
 32053,-1,
 32057,329792,
 32081,-1,
 32086,330856,
 32106,-1,
 32111,330912,
 32123,-1,
 32127,330968,
 32266,-1,
 32274,331024,
 32283,-1,
 32287,331080,
 32292,-1,
 32296,331136,
 32301,-1,
 32305,359828,
 32738,-1,
 32749,361131,
  32753,360837,
  32763,-1,
 32768,-1,
 32772,329568,
 32776,-1,
32779,-1]
	, "functions": [{
		"proto": "Halt(Code: int32)"
		, "kind": ".def"
		, "name": "Halt"
		, "type": "void"
		, "args": [{
			"proto": "Halt.Code"
			, "kind": ".def"
			, "name": "Code"
			, "declaredIn": "Halt(Code: int32)"
			, "type": "int32"
			, "cast": ".i32"
			, "size": 4
			, "offs": 4
			, "const": false
			, "static": false
		}]
		, "size": 56
		, "offs": 329568
		, "const": false
		, "static": true
		, "time": 4
		, "total": 4
		, "hits": 1
		, "fails": 0
	}, {
		"proto": "raise(level: int32, message: string, inspect: variant, maxTrace: int32)"
		, "kind": ".def"
		, "name": "raise"
		, "type": "void"
		, "args": [{
			"proto": "raise.level"
			, "kind": ".def"
			, "name": "level"
			, "declaredIn": "raise(level: int32, message: string, inspect: variant, maxTrace: int32)"
			, "type": "int32"
			, "cast": ".i32"
			, "size": 4
			, "offs": 20
			, "const": false
			, "static": false
		}, {
			"proto": "raise.message"
			, "kind": ".ref"
			, "name": "message"
			, "declaredIn": "raise(level: int32, message: string, inspect: variant, maxTrace: int32)"
			, "type": "string"
			, "cast": ".ref"
			, "size": 4
			, "offs": 16
			, "const": false
			, "static": false
		}, {
			"proto": "raise.inspect"
			, "kind": ".def"
			, "name": "inspect"
			, "declaredIn": "raise(level: int32, message: string, inspect: variant, maxTrace: int32)"
			, "type": "variant"
			, "cast": ".rec"
			, "size": 8
			, "offs": 12
			, "const": false
			, "static": false
		}, {
			"proto": "raise.maxTrace"
			, "kind": ".def"
			, "name": "maxTrace"
			, "declaredIn": "raise(level: int32, message: string, inspect: variant, maxTrace: int32)"
			, "type": "int32"
			, "cast": ".i32"
			, "size": 4
			, "offs": 4
			, "const": false
			, "static": false
		}]
		, "size": 56
		, "offs": 329792
		, "const": false
		, "static": true
		, "time": 342
		, "total": 342
		, "hits": 12
		, "fails": 0
	}, {
		"proto": "System.srand(seed: int32)"
		, "kind": ".def"
		, "name": "srand"
		, "declaredIn": "System"
		, "type": "void"
		, "args": [{
			"proto": "System.srand.seed"
			, "kind": ".def"
			, "name": "seed"
			, "declaredIn": "System.srand(seed: int32)"
			, "type": "int32"
			, "cast": ".i32"
			, "size": 4
			, "offs": 4
			, "const": false
			, "static": false
		}]
		, "size": 56
		, "offs": 330128
		, "const": false
		, "static": true
		, "time": 7
		, "total": 7
		, "hits": 1
		, "fails": 0
	}, {
		"proto": "System.rand()"
		, "kind": ".def"
		, "name": "rand"
		, "declaredIn": "System"
		, "type": "int32"
		, "args": [{
			"proto": ""
			, "kind": ".def"
			, "name": ""
			, "type": "void"
			, "cast": ".vid"
			, "size": 0
			, "offs": 0
			, "const": false
			, "static": false
		}]
		, "size": 56
		, "offs": 330184
		, "const": false
		, "static": true
		, "time": 415
		, "total": 415
		, "hits": 135
		, "fails": 0
	}, {
		"proto": "System.time()"
		, "kind": ".def"
		, "name": "time"
		, "declaredIn": "System"
		, "type": "int32"
		, "args": [{
			"proto": ""
			, "kind": ".def"
			, "name": ""
			, "type": "void"
			, "cast": ".vid"
			, "size": 0
			, "offs": 0
			, "const": false
			, "static": false
		}]
		, "size": 56
		, "offs": 330240
		, "const": false
		, "static": true
		, "time": 6
		, "total": 6
		, "hits": 1
		, "fails": 0
	}, {
		"proto": "int64.And(Lhs: int64, Rhs: int64)"
		, "kind": ".def"
		, "name": "And"
		, "declaredIn": "int64"
		, "type": "int64"
		, "args": [{
			"proto": "int64.And.Lhs"
			, "kind": ".def"
			, "name": "Lhs"
			, "declaredIn": "int64.And(Lhs: int64, Rhs: int64)"
			, "type": "int64"
			, "cast": ".i64"
			, "size": 8
			, "offs": 16
			, "const": false
			, "static": false
		}, {
			"proto": "int64.And.Rhs"
			, "kind": ".def"
			, "name": "Rhs"
			, "declaredIn": "int64.And(Lhs: int64, Rhs: int64)"
			, "type": "int64"
			, "cast": ".i64"
			, "size": 8
			, "offs": 8
			, "const": false
			, "static": false
		}]
		, "size": 56
		, "offs": 330520
		, "const": false
		, "static": true
		, "time": 6
		, "total": 6
		, "hits": 2
		, "fails": 0
	}, {
		"proto": "int64.Shl(Value: int64, Count: int32)"
		, "kind": ".def"
		, "name": "Shl"
		, "declaredIn": "int64"
		, "type": "int64"
		, "args": [{
			"proto": "int64.Shl.Value"
			, "kind": ".def"
			, "name": "Value"
			, "declaredIn": "int64.Shl(Value: int64, Count: int32)"
			, "type": "int64"
			, "cast": ".i64"
			, "size": 8
			, "offs": 12
			, "const": false
			, "static": false
		}, {
			"proto": "int64.Shl.Count"
			, "kind": ".def"
			, "name": "Count"
			, "declaredIn": "int64.Shl(Value: int64, Count: int32)"
			, "type": "int32"
			, "cast": ".i32"
			, "size": 4
			, "offs": 4
			, "const": false
			, "static": false
		}]
		, "size": 56
		, "offs": 330688
		, "const": false
		, "static": true
		, "time": 7
		, "total": 7
		, "hits": 2
		, "fails": 0
	}, {
		"proto": "int64.Shr(Value: int64, Count: int32)"
		, "kind": ".def"
		, "name": "Shr"
		, "declaredIn": "int64"
		, "type": "int64"
		, "args": [{
			"proto": "int64.Shr.Value"
			, "kind": ".def"
			, "name": "Value"
			, "declaredIn": "int64.Shr(Value: int64, Count: int32)"
			, "type": "int64"
			, "cast": ".i64"
			, "size": 8
			, "offs": 12
			, "const": false
			, "static": false
		}, {
			"proto": "int64.Shr.Count"
			, "kind": ".def"
			, "name": "Count"
			, "declaredIn": "int64.Shr(Value: int64, Count: int32)"
			, "type": "int32"
			, "cast": ".i32"
			, "size": 4
			, "offs": 4
			, "const": false
			, "static": false
		}]
		, "size": 56
		, "offs": 330744
		, "const": false
		, "static": true
		, "time": 6
		, "total": 6
		, "hits": 2
		, "fails": 0
	}, {
		"proto": "float64.sin(x: float64)"
		, "kind": ".def"
		, "name": "sin"
		, "declaredIn": "float64"
		, "type": "float64"
		, "args": [{
			"proto": "float64.sin.x"
			, "kind": ".def"
			, "name": "x"
			, "declaredIn": "float64.sin(x: float64)"
			, "type": "float64"
			, "cast": ".f64"
			, "size": 8
			, "offs": 8
			, "const": false
			, "static": false
		}]
		, "size": 56
		, "offs": 330856
		, "const": false
		, "static": true
		, "time": 20
		, "total": 20
		, "hits": 1
		, "fails": 0
	}, {
		"proto": "float64.cos(x: float64)"
		, "kind": ".def"
		, "name": "cos"
		, "declaredIn": "float64"
		, "type": "float64"
		, "args": [{
			"proto": "float64.cos.x"
			, "kind": ".def"
			, "name": "x"
			, "declaredIn": "float64.cos(x: float64)"
			, "type": "float64"
			, "cast": ".f64"
			, "size": 8
			, "offs": 8
			, "const": false
			, "static": false
		}]
		, "size": 56
		, "offs": 330912
		, "const": false
		, "static": true
		, "time": 12
		, "total": 12
		, "hits": 1
		, "fails": 0
	}, {
		"proto": "float64.tan(x: float64)"
		, "kind": ".def"
		, "name": "tan"
		, "declaredIn": "float64"
		, "type": "float64"
		, "args": [{
			"proto": "float64.tan.x"
			, "kind": ".def"
			, "name": "x"
			, "declaredIn": "float64.tan(x: float64)"
			, "type": "float64"
			, "cast": ".f64"
			, "size": 8
			, "offs": 8
			, "const": false
			, "static": false
		}]
		, "size": 56
		, "offs": 330968
		, "const": false
		, "static": true
		, "time": 139
		, "total": 139
		, "hits": 1
		, "fails": 0
	}, {
		"proto": "float64.log(x: float64)"
		, "kind": ".def"
		, "name": "log"
		, "declaredIn": "float64"
		, "type": "float64"
		, "args": [{
			"proto": "float64.log.x"
			, "kind": ".def"
			, "name": "x"
			, "declaredIn": "float64.log(x: float64)"
			, "type": "float64"
			, "cast": ".f64"
			, "size": 8
			, "offs": 8
			, "const": false
			, "static": false
		}]
		, "size": 56
		, "offs": 331024
		, "const": false
		, "static": true
		, "time": 9
		, "total": 9
		, "hits": 1
		, "fails": 0
	}, {
		"proto": "float64.exp(x: float64)"
		, "kind": ".def"
		, "name": "exp"
		, "declaredIn": "float64"
		, "type": "float64"
		, "args": [{
			"proto": "float64.exp.x"
			, "kind": ".def"
			, "name": "x"
			, "declaredIn": "float64.exp(x: float64)"
			, "type": "float64"
			, "cast": ".f64"
			, "size": 8
			, "offs": 8
			, "const": false
			, "static": false
		}]
		, "size": 56
		, "offs": 331080
		, "const": false
		, "static": true
		, "time": 5
		, "total": 5
		, "hits": 1
		, "fails": 0
	}, {
		"proto": "float64.pow(x: float64, y: float64)"
		, "kind": ".def"
		, "name": "pow"
		, "declaredIn": "float64"
		, "type": "float64"
		, "args": [{
			"proto": "float64.pow.x"
			, "kind": ".def"
			, "name": "x"
			, "declaredIn": "float64.pow(x: float64, y: float64)"
			, "type": "float64"
			, "cast": ".f64"
			, "size": 8
			, "offs": 16
			, "const": false
			, "static": false
		}, {
			"proto": "float64.pow.y"
			, "kind": ".def"
			, "name": "y"
			, "declaredIn": "float64.pow(x: float64, y: float64)"
			, "type": "float64"
			, "cast": ".f64"
			, "size": 8
			, "offs": 8
			, "const": false
			, "static": false
		}]
		, "size": 56
		, "offs": 331136
		, "const": false
		, "static": true
		, "time": 5
		, "total": 5
		, "hits": 1
		, "fails": 0
	}, {
		"proto": "bitsr(x: uint32)"
		, "kind": ".ref"
		, "name": "bitsr"
		, "type": "int32"
		, "file": "stdlib.cvx"
		, "line": 995
		, "args": [{
			"proto": "bitsr.x"
			, "kind": ".ref"
			, "name": "x"
			, "declaredIn": "bitsr(x: uint32)"
			, "type": "uint32"
			, "file": "stdlib.cvx"
			, "line": 995
			, "cast": ".u32"
			, "size": 4
			, "offs": 8
			, "const": false
			, "static": false
		}]
		, "cast": ".i32"
		, "size": 153
		, "offs": 352162
		, "const": false
		, "static": true
		, "time": 4
		, "total": 4
		, "hits": 1
		, "fails": 0
		, "file": "stdlib.cvx"
		, "line": 995
	}, {
		"proto": "bitsf(x: uint32)"
		, "kind": ".ref"
		, "name": "bitsf"
		, "type": "int32"
		, "file": "stdlib.cvx"
		, "line": 1027
		, "args": [{
			"proto": "bitsf.x"
			, "kind": ".ref"
			, "name": "x"
			, "declaredIn": "bitsf(x: uint32)"
			, "type": "uint32"
			, "file": "stdlib.cvx"
			, "line": 1027
			, "cast": ".u32"
			, "size": 4
			, "offs": 8
			, "const": false
			, "static": false
		}]
		, "cast": ".i32"
		, "size": 163
		, "offs": 352315
		, "const": false
		, "static": true
		, "time": 4
		, "total": 4
		, "hits": 1
		, "fails": 0
		, "file": "stdlib.cvx"
		, "line": 1027
	}, {
		"proto": "bithi(x: uint32)"
		, "kind": ".ref"
		, "name": "bithi"
		, "type": "int32"
		, "file": "stdlib.cvx"
		, "line": 1056
		, "args": [{
			"proto": "bithi.x"
			, "kind": ".ref"
			, "name": "x"
			, "declaredIn": "bithi(x: uint32)"
			, "type": "uint32"
			, "file": "stdlib.cvx"
			, "line": 1056
			, "cast": ".u32"
			, "size": 4
			, "offs": 8
			, "const": false
			, "static": false
		}]
		, "cast": ".i32"
		, "size": 56
		, "offs": 352478
		, "const": false
		, "static": true
		, "time": 4
		, "total": 4
		, "hits": 1
		, "fails": 0
		, "file": "stdlib.cvx"
		, "line": 1056
	}, {
		"proto": "bitlo(x: uint32)"
		, "kind": ".ref"
		, "name": "bitlo"
		, "type": "int32"
		, "file": "stdlib.cvx"
		, "line": 1067
		, "args": [{
			"proto": "bitlo.x"
			, "kind": ".ref"
			, "name": "x"
			, "declaredIn": "bitlo(x: uint32)"
			, "type": "uint32"
			, "file": "stdlib.cvx"
			, "line": 1067
			, "cast": ".u32"
			, "size": 4
			, "offs": 8
			, "const": false
			, "static": false
		}]
		, "cast": ".i32"
		, "size": 10
		, "offs": 352534
		, "const": false
		, "static": true
		, "time": 4
		, "total": 4
		, "hits": 1
		, "fails": 0
		, "file": "stdlib.cvx"
		, "line": 1067
	}, {
		"proto": "bitcnt(x: uint32)"
		, "kind": ".ref"
		, "name": "bitcnt"
		, "type": "int32"
		, "file": "stdlib.cvx"
		, "line": 1072
		, "args": [{
			"proto": "bitcnt.x"
			, "kind": ".ref"
			, "name": "x"
			, "declaredIn": "bitcnt(x: uint32)"
			, "type": "uint32"
			, "file": "stdlib.cvx"
			, "line": 1072
			, "cast": ".u32"
			, "size": 4
			, "offs": 8
			, "const": false
			, "static": false
		}]
		, "cast": ".i32"
		, "size": 73
		, "offs": 352544
		, "const": false
		, "static": true
		, "time": 4
		, "total": 4
		, "hits": 1
		, "fails": 0
		, "file": "stdlib.cvx"
		, "line": 1072
	}, {
		"proto": "bitswp(x: uint32)"
		, "kind": ".ref"
		, "name": "bitswp"
		, "type": "int32"
		, "file": "stdlib.cvx"
		, "line": 1081
		, "args": [{
			"proto": "bitswp.x"
			, "kind": ".ref"
			, "name": "x"
			, "declaredIn": "bitswp(x: uint32)"
			, "type": "uint32"
			, "file": "stdlib.cvx"
			, "line": 1081
			, "cast": ".u32"
			, "size": 4
			, "offs": 8
			, "const": false
			, "static": false
		}]
		, "cast": ".i32"
		, "size": 105
		, "offs": 352617
		, "const": false
		, "static": true
		, "time": 5
		, "total": 5
		, "hits": 1
		, "fails": 0
		, "file": "stdlib.cvx"
		, "line": 1081
	}, {
		"proto": "maximum(arr: int32[])"
		, "kind": ".ref"
		, "name": "maximum"
		, "type": "int32"
		, "file": "tests/test.Core.all.cvx"
		, "line": 176
		, "args": [{
			"proto": "maximum.arr"
			, "kind": ".ref"
			, "name": "arr"
			, "declaredIn": "maximum(arr: int32[])"
			, "type": "int32[]"
			, "file": "tests/test.Core.all.cvx"
			, "line": 176
			, "cast": ".arr"
			, "size": 8
			, "offs": 12
			, "const": false
			, "static": false
		}]
		, "cast": ".i32"
		, "size": 59
		, "offs": 358072
		, "const": false
		, "static": true
		, "time": 9
		, "total": 9
		, "hits": 1
		, "fails": 0
		, "file": "tests/test.Core.all.cvx"
		, "line": 176
	}, {
		"proto": "qsort(array: int32[], low: int32, high: int32)"
		, "kind": ".ref"
		, "name": "qsort"
		, "type": "void"
		, "file": "tests/test.Core.all.cvx"
		, "line": 197
		, "args": [{
			"proto": "qsort.array"
			, "kind": ".ref"
			, "name": "array"
			, "declaredIn": "qsort(array: int32[], low: int32, high: int32)"
			, "type": "int32[]"
			, "file": "tests/test.Core.all.cvx"
			, "line": 197
			, "cast": ".arr"
			, "size": 8
			, "offs": 16
			, "const": false
			, "static": false
		}, {
			"proto": "qsort.low"
			, "kind": ".ref"
			, "name": "low"
			, "declaredIn": "qsort(array: int32[], low: int32, high: int32)"
			, "type": "int32"
			, "file": "tests/test.Core.all.cvx"
			, "line": 197
			, "cast": ".i32"
			, "size": 4
			, "offs": 8
			, "const": false
			, "static": false
		}, {
			"proto": "qsort.high"
			, "kind": ".ref"
			, "name": "high"
			, "declaredIn": "qsort(array: int32[], low: int32, high: int32)"
			, "type": "int32"
			, "file": "tests/test.Core.all.cvx"
			, "line": 197
			, "cast": ".i32"
			, "size": 4
			, "offs": 4
			, "const": false
			, "static": false
		}]
		, "cast": ".vid"
		, "size": 212
		, "offs": 358254
		, "const": false
		, "static": true
		, "time": 141
		, "total": 141
		, "hits": 12
		, "fails": 0
		, "file": "tests/test.Core.all.cvx"
		, "line": 197
	}, {
		"proto": "qsort(array: int32[])"
		, "kind": ".ref"
		, "name": "qsort"
		, "type": "void"
		, "file": "tests/test.Core.all.cvx"
		, "line": 232
		, "args": [{
			"proto": "qsort.array"
			, "kind": ".ref"
			, "name": "array"
			, "declaredIn": "qsort(array: int32[])"
			, "type": "int32[]"
			, "file": "tests/test.Core.all.cvx"
			, "line": 232
			, "cast": ".arr"
			, "size": 8
			, "offs": 8
			, "const": false
			, "static": false
		}]
		, "cast": ".vid"
		, "size": 25
		, "offs": 358466
		, "const": false
		, "static": true
		, "time": 8
		, "total": 149
		, "hits": 1
		, "fails": 0
		, "file": "tests/test.Core.all.cvx"
		, "line": 232
	}, {
		"proto": "bsearch(arr: int32[], elem: int32)"
		, "kind": ".ref"
		, "name": "bsearch"
		, "type": "int32"
		, "file": "tests/test.Core.all.cvx"
		, "line": 236
		, "args": [{
			"proto": "bsearch.arr"
			, "kind": ".ref"
			, "name": "arr"
			, "declaredIn": "bsearch(arr: int32[], elem: int32)"
			, "type": "int32[]"
			, "file": "tests/test.Core.all.cvx"
			, "line": 236
			, "cast": ".arr"
			, "size": 8
			, "offs": 16
			, "const": false
			, "static": false
		}, {
			"proto": "bsearch.elem"
			, "kind": ".ref"
			, "name": "elem"
			, "declaredIn": "bsearch(arr: int32[], elem: int32)"
			, "type": "int32"
			, "file": "tests/test.Core.all.cvx"
			, "line": 236
			, "cast": ".i32"
			, "size": 4
			, "offs": 8
			, "const": false
			, "static": false
		}]
		, "cast": ".i32"
		, "size": 106
		, "offs": 358491
		, "const": false
		, "static": true
		, "time": 8
		, "total": 8
		, "hits": 1
		, "fails": 0
		, "file": "tests/test.Core.all.cvx"
		, "line": 236
	}, {
		"proto": "randomize(arr: int32[], max: int32)"
		, "kind": ".ref"
		, "name": "randomize"
		, "type": "void"
		, "file": "tests/test.Core.all.cvx"
		, "line": 257
		, "args": [{
			"proto": "randomize.arr"
			, "kind": ".ref"
			, "name": "arr"
			, "declaredIn": "randomize(arr: int32[], max: int32)"
			, "type": "int32[]"
			, "file": "tests/test.Core.all.cvx"
			, "line": 257
			, "cast": ".arr"
			, "size": 8
			, "offs": 12
			, "const": false
			, "static": false
		}, {
			"proto": "randomize.max"
			, "kind": ".ref"
			, "name": "max"
			, "declaredIn": "randomize(arr: int32[], max: int32)"
			, "type": "int32"
			, "file": "tests/test.Core.all.cvx"
			, "line": 257
			, "cast": ".i32"
			, "size": 4
			, "offs": 4
			, "const": false
			, "static": false
		}]
		, "cast": ".vid"
		, "size": 43
		, "offs": 358597
		, "const": false
		, "static": true
		, "time": 64
		, "total": 110
		, "hits": 1
		, "fails": 0
		, "file": "tests/test.Core.all.cvx"
		, "line": 257
	}, {
		"proto": "bar.foo.abc()"
		, "kind": ".ref"
		, "name": "abc"
		, "declaredIn": "bar.foo(b: int32)"
		, "type": "int32"
		, "file": "tests/test.Core.all.cvx"
		, "line": 289
		, "args": [{
			"proto": ""
			, "kind": ".def"
			, "name": ""
			, "type": "void"
			, "cast": ".vid"
			, "size": 0
			, "offs": 0
			, "const": false
			, "static": false
		}]
		, "cast": ".i32"
		, "size": 9
		, "offs": 358724
		, "const": false
		, "static": true
		, "time": 4
		, "total": 4
		, "hits": 1
		, "fails": 0
		, "file": "tests/test.Core.all.cvx"
		, "line": 289
	}, {
		"proto": "bar.foo(b: int32)"
		, "kind": ".ref"
		, "name": "foo"
		, "declaredIn": "bar(a: int32)"
		, "type": "int32"
		, "file": "tests/test.Core.all.cvx"
		, "line": 288
		, "args": [{
			"proto": "bar.foo.b"
			, "kind": ".ref"
			, "name": "b"
			, "declaredIn": "bar.foo(b: int32)"
			, "type": "int32"
			, "file": "tests/test.Core.all.cvx"
			, "line": 288
			, "cast": ".i32"
			, "size": 4
			, "offs": 8
			, "const": false
			, "static": false
		}]
		, "cast": ".i32"
		, "size": 17
		, "offs": 358733
		, "const": false
		, "static": true
		, "time": 8
		, "total": 12
		, "hits": 1
		, "fails": 0
		, "file": "tests/test.Core.all.cvx"
		, "line": 288
	}, {
		"proto": "bar(a: int32)"
		, "kind": ".ref"
		, "name": "bar"
		, "type": "int32"
		, "file": "tests/test.Core.all.cvx"
		, "line": 287
		, "args": [{
			"proto": "bar.a"
			, "kind": ".ref"
			, "name": "a"
			, "declaredIn": "bar(a: int32)"
			, "type": "int32"
			, "file": "tests/test.Core.all.cvx"
			, "line": 287
			, "cast": ".i32"
			, "size": 4
			, "offs": 8
			, "const": false
			, "static": false
		}]
		, "cast": ".i32"
		, "size": 20
		, "offs": 358750
		, "const": false
		, "static": true
		, "time": 7
		, "total": 19
		, "hits": 1
		, "fails": 0
		, "file": "tests/test.Core.all.cvx"
		, "line": 287
	}, {
		"proto": "getArrayElement(index: uint32, array: int32[])"
		, "kind": ".ref"
		, "name": "getArrayElement"
		, "type": "int32"
		, "file": "tests/test.Core.all.cvx"
		, "line": 299
		, "args": [{
			"proto": "getArrayElement.index"
			, "kind": ".ref"
			, "name": "index"
			, "declaredIn": "getArrayElement(index: uint32, array: int32[])"
			, "type": "uint32"
			, "file": "tests/test.Core.all.cvx"
			, "line": 299
			, "cast": ".u32"
			, "size": 4
			, "offs": 16
			, "const": false
			, "static": false
		}, {
			"proto": "getArrayElement.array"
			, "kind": ".ref"
			, "name": "array"
			, "declaredIn": "getArrayElement(index: uint32, array: int32[])"
			, "type": "int32[]"
			, "file": "tests/test.Core.all.cvx"
			, "line": 299
			, "cast": ".arr"
			, "size": 8
			, "offs": 12
			, "const": false
			, "static": false
		}]
		, "cast": ".i32"
		, "size": 30
		, "offs": 358776
		, "const": false
		, "static": true
		, "time": 12
		, "total": 12
		, "hits": 3
		, "fails": 0
		, "file": "tests/test.Core.all.cvx"
		, "line": 299
	}, {
		"proto": "getArrayElement(index: uint32, a1: int32, a2: int32, a3: int32)"
		, "kind": ".ref"
		, "name": "getArrayElement"
		, "type": "int32"
		, "file": "tests/test.Core.all.cvx"
		, "line": 311
		, "args": [{
			"proto": "getArrayElement.index"
			, "kind": ".ref"
			, "name": "index"
			, "declaredIn": "getArrayElement(index: uint32, a1: int32, a2: int32, a3: int32)"
			, "type": "uint32"
			, "file": "tests/test.Core.all.cvx"
			, "line": 311
			, "cast": ".u32"
			, "size": 4
			, "offs": 20
			, "const": false
			, "static": false
		}, {
			"proto": "getArrayElement.a1"
			, "kind": ".ref"
			, "name": "a1"
			, "declaredIn": "getArrayElement(index: uint32, a1: int32, a2: int32, a3: int32)"
			, "type": "int32"
			, "file": "tests/test.Core.all.cvx"
			, "line": 311
			, "cast": ".i32"
			, "size": 4
			, "offs": 16
			, "const": false
			, "static": false
		}, {
			"proto": "getArrayElement.a2"
			, "kind": ".ref"
			, "name": "a2"
			, "declaredIn": "getArrayElement(index: uint32, a1: int32, a2: int32, a3: int32)"
			, "type": "int32"
			, "file": "tests/test.Core.all.cvx"
			, "line": 311
			, "cast": ".i32"
			, "size": 4
			, "offs": 12
			, "const": false
			, "static": false
		}, {
			"proto": "getArrayElement.a3"
			, "kind": ".ref"
			, "name": "a3"
			, "declaredIn": "getArrayElement(index: uint32, a1: int32, a2: int32, a3: int32)"
			, "type": "int32"
			, "file": "tests/test.Core.all.cvx"
			, "line": 311
			, "cast": ".i32"
			, "size": 4
			, "offs": 8
			, "const": false
			, "static": false
		}]
		, "cast": ".i32"
		, "size": 53
		, "offs": 358855
		, "const": false
		, "static": true
		, "time": 24
		, "total": 36
		, "hits": 3
		, "fails": 0
		, "file": "tests/test.Core.all.cvx"
		, "line": 311
	}, {
		"proto": "bitsget(bitsize: int32, signed: bool, min: int64, max: int64)"
		, "kind": ".ref"
		, "name": "bitsget"
		, "type": "void"
		, "file": "tests/test.Core.all.cvx"
		, "line": 334
		, "args": [{
			"proto": "bitsget.bitsize"
			, "kind": ".ref"
			, "name": "bitsize"
			, "declaredIn": "bitsget(bitsize: int32, signed: bool, min: int64, max: int64)"
			, "type": "int32"
			, "file": "tests/test.Core.all.cvx"
			, "line": 334
			, "cast": ".i32"
			, "size": 4
			, "offs": 16
			, "const": false
			, "static": false
		}, {
			"proto": "bitsget.signed"
			, "kind": ".ref"
			, "name": "signed"
			, "declaredIn": "bitsget(bitsize: int32, signed: bool, min: int64, max: int64)"
			, "type": "bool"
			, "file": "tests/test.Core.all.cvx"
			, "line": 334
			, "cast": ".bit"
			, "size": 4
			, "offs": 12
			, "const": false
			, "static": false
		}, {
			"proto": "bitsget.min"
			, "kind": ".ref"
			, "name": "min"
			, "declaredIn": "bitsget(bitsize: int32, signed: bool, min: int64, max: int64)"
			, "type": "int64"
			, "file": "tests/test.Core.all.cvx"
			, "line": 334
			, "cast": ".ref"
			, "size": 4
			, "offs": 8
			, "const": false
			, "static": false
		}, {
			"proto": "bitsget.max"
			, "kind": ".ref"
			, "name": "max"
			, "declaredIn": "bitsget(bitsize: int32, signed: bool, min: int64, max: int64)"
			, "type": "int64"
			, "file": "tests/test.Core.all.cvx"
			, "line": 334
			, "cast": ".ref"
			, "size": 4
			, "offs": 4
			, "const": false
			, "static": false
		}]
		, "cast": ".vid"
		, "size": 60
		, "offs": 358936
		, "const": false
		, "static": true
		, "time": 31
		, "total": 50
		, "hits": 2
		, "fails": 0
		, "file": "tests/test.Core.all.cvx"
		, "line": 334
	}, {
		"proto": "drand()"
		, "kind": ".ref"
		, "name": "drand"
		, "type": "float64"
		, "file": "tests/test.Core.all.cvx"
		, "line": 383
		, "args": [{
			"proto": ""
			, "kind": ".def"
			, "name": ""
			, "type": "void"
			, "cast": ".vid"
			, "size": 0
			, "offs": 0
			, "const": false
			, "static": false
		}]
		, "cast": ".f64"
		, "size": 54
		, "offs": 359087
		, "const": false
		, "static": true
		, "time": 548
		, "total": 917
		, "hits": 30
		, "fails": 0
		, "file": "tests/test.Core.all.cvx"
		, "line": 383
	}, {
		"proto": "multiplyMatrix()"
		, "kind": ".ref"
		, "name": "multiplyMatrix"
		, "type": "void"
		, "file": "tests/test.Core.all.cvx"
		, "line": 423
		, "args": [{
			"proto": ""
			, "kind": ".def"
			, "name": ""
			, "type": "void"
			, "cast": ".vid"
			, "size": 0
			, "offs": 0
			, "const": false
			, "static": false
		}]
		, "cast": ".vid"
		, "size": 291
		, "offs": 359828
		, "const": false
		, "static": true
		, "time": 433
		, "total": 433
		, "hits": 1
		, "fails": 0
		, "file": "tests/test.Core.all.cvx"
		, "line": 423
	}, {
		"proto": "sub(a: int32x8, b: int32x8, carryInOut: bool)"
		, "kind": ".ref"
		, "name": "sub"
		, "type": "int32x8"
		, "file": "tests/test.Core.all.cvx"
		, "line": 526
		, "args": [{
			"proto": "sub.a"
			, "kind": ".ref"
			, "name": "a"
			, "declaredIn": "sub(a: int32x8, b: int32x8, carryInOut: bool)"
			, "type": "int32x8"
			, "file": "tests/test.Core.all.cvx"
			, "line": 526
			, "cast": ".ref"
			, "size": 4
			, "offs": 44
			, "const": true
			, "static": false
		}, {
			"proto": "sub.b"
			, "kind": ".ref"
			, "name": "b"
			, "declaredIn": "sub(a: int32x8, b: int32x8, carryInOut: bool)"
			, "type": "int32x8"
			, "file": "tests/test.Core.all.cvx"
			, "line": 526
			, "cast": ".ref"
			, "size": 4
			, "offs": 40
			, "const": true
			, "static": false
		}, {
			"proto": "sub.carryInOut"
			, "kind": ".ref"
			, "name": "carryInOut"
			, "declaredIn": "sub(a: int32x8, b: int32x8, carryInOut: bool)"
			, "type": "bool"
			, "file": "tests/test.Core.all.cvx"
			, "line": 526
			, "cast": ".ref"
			, "size": 4
			, "offs": 36
			, "const": false
			, "static": false
		}]
		, "cast": ".rec"
		, "size": 294
		, "offs": 360837
		, "const": false
		, "static": true
		, "time": 10
		, "total": 10
		, "hits": 1
		, "fails": 0
		, "file": "tests/test.Core.all.cvx"
		, "line": 526
	}, {
		"proto": "sub(a: int32x8, b: int32x8)"
		, "kind": ".ref"
		, "name": "sub"
		, "type": "int32x8"
		, "file": "tests/test.Core.all.cvx"
		, "line": 549
		, "args": [{
			"proto": "sub.a"
			, "kind": ".ref"
			, "name": "a"
			, "declaredIn": "sub(a: int32x8, b: int32x8)"
			, "type": "int32x8"
			, "file": "tests/test.Core.all.cvx"
			, "line": 549
			, "cast": ".ref"
			, "size": 4
			, "offs": 40
			, "const": true
			, "static": false
		}, {
			"proto": "sub.b"
			, "kind": ".ref"
			, "name": "b"
			, "declaredIn": "sub(a: int32x8, b: int32x8)"
			, "type": "int32x8"
			, "file": "tests/test.Core.all.cvx"
			, "line": 549
			, "cast": ".ref"
			, "size": 4
			, "offs": 36
			, "const": true
			, "static": false
		}]
		, "cast": ".rec"
		, "size": 48
		, "offs": 361131
		, "const": false
		, "static": true
		, "time": 9
		, "total": 19
		, "hits": 1
		, "fails": 0
		, "file": "tests/test.Core.all.cvx"
		, "line": 549
	}, {
		"proto": ".main"
		, "kind": ".ref"
		, "name": ".main"
		, "type": "void"
		, "file": "main"
		, "line": 1
		, "cast": ".rec"
		, "size": 2773
		, "offs": 361352
		, "const": true
		, "static": true
		, "time": 377
		, "total": 2701
		, "hits": 1
		, "fails": 0
		, "file": "main"
		, "line": 1
	}]
	, "statements": [{
	}]
	, "ticksPerSec": 1000000
	, "functionCount": 127
	, "statementCount": 958
}
}
