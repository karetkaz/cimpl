{
"symbols": [{
}]
, "profile": {
	"": "callTree array is constructed from a tick(timestamp) followed by a function offset, if the offset is negative it represents a return from a function instead of a call."
	, "callTree": [
11940,290256,
 11949,286612,
  11964,285892,
   11966,261632,
   11968,-1,
   11975,261632,
   11976,-1,
   11979,261632,
   11980,-1,
   11983,261632,
   11984,-1,
   11987,261632,
   11988,-1,
   11991,261632,
   11992,-1,
   11994,261632,
   11996,-1,
   11998,261632,
   12000,-1,
   12002,261632,
   12004,-1,
   12006,261632,
   12008,-1,
  12010,-1,
  12017,285892,
   12019,261632,
   12021,-1,
   12027,261632,
   12028,-1,
   12031,261632,
   12032,-1,
   12035,261632,
   12036,-1,
   12038,261632,
   12040,-1,
   12042,261632,
   12044,-1,
   12046,261632,
   12048,-1,
   12050,261632,
   12051,-1,
   12054,261632,
   12055,-1,
  12058,-1,
  12065,285892,
   12067,261632,
   12069,-1,
   12083,261632,
   12084,-1,
   12087,261632,
   12088,-1,
   12091,261632,
   12092,-1,
   12095,261632,
   12096,-1,
   12099,261632,
   12100,-1,
   12102,261632,
   12104,-1,
   12106,261632,
   12108,-1,
   12110,261632,
   12112,-1,
   12114,261632,
   12115,-1,
   12118,261632,
   12119,-1,
   12122,261632,
   12123,-1,
   12126,261632,
   12127,-1,
   12129,261632,
   12131,-1,
   12133,261632,
   12135,-1,
   12137,261632,
   12139,-1,
   12141,261632,
   12142,-1,
   12145,261632,
   12146,-1,
   12149,261632,
   12150,-1,
   12152,261632,
   12154,-1,
   12156,261632,
   12158,-1,
   12160,261632,
   12162,-1,
   12164,261632,
   12166,-1,
   12168,261632,
   12170,-1,
   12172,261632,
   12174,-1,
   12176,261632,
   12178,-1,
   12180,261632,
   12182,-1,
   12184,261632,
   12185,-1,
   12188,261632,
   12189,-1,
   12192,261632,
   12193,-1,
   12195,261632,
   12197,-1,
   12199,261632,
   12201,-1,
   12203,261632,
   12205,-1,
  12207,-1,
  12214,285892,
   12216,261632,
   12218,-1,
   12226,261632,
   12227,-1,
   12230,261632,
   12231,-1,
   12233,261632,
   12235,-1,
   12237,261632,
   12239,-1,
   12241,261632,
   12243,-1,
   12245,261632,
   12247,-1,
   12249,261632,
   12250,-1,
   12253,261632,
   12254,-1,
   12256,261632,
   12258,-1,
   12260,261632,
   12262,-1,
   12264,261632,
   12266,-1,
   12268,261632,
   12269,-1,
   12272,261632,
   12273,-1,
  12276,-1,
 12279,-1,
 12283,261408,
 12284,-1,
12286,-1]
	, "functions": [{
		"proto": "Halt(Code: int32)"
		, "kind": ".def"
		, "name": "Halt"
		, "type": "void"
		, "args": [{
			"proto": "Halt.Code"
			, "kind": ".def"
			, "name": "Code"
			, "declaredIn": "Halt(Code: int32)"
			, "type": "int32"
			, "cast": ".i32"
			, "size": 4
			, "offs": 4
			, "const": false
			, "static": false
		}]
		, "size": 56
		, "offs": 261408
		, "const": false
		, "static": true
		, "time": 1
		, "total": 1
		, "hits": 1
		, "fails": 0
	}, {
		"proto": "raise(level: int32, message: string, inspect: variant, maxTrace: int32)"
		, "kind": ".def"
		, "name": "raise"
		, "type": "void"
		, "args": [{
			"proto": "raise.level"
			, "kind": ".def"
			, "name": "level"
			, "declaredIn": "raise(level: int32, message: string, inspect: variant, maxTrace: int32)"
			, "type": "int32"
			, "cast": ".i32"
			, "size": 4
			, "offs": 20
			, "const": false
			, "static": false
		}, {
			"proto": "raise.message"
			, "kind": ".ref"
			, "name": "message"
			, "declaredIn": "raise(level: int32, message: string, inspect: variant, maxTrace: int32)"
			, "type": "string"
			, "cast": ".ref"
			, "size": 4
			, "offs": 16
			, "const": false
			, "static": false
		}, {
			"proto": "raise.inspect"
			, "kind": ".def"
			, "name": "inspect"
			, "declaredIn": "raise(level: int32, message: string, inspect: variant, maxTrace: int32)"
			, "type": "variant"
			, "cast": ".rec"
			, "size": 8
			, "offs": 12
			, "const": false
			, "static": false
		}, {
			"proto": "raise.maxTrace"
			, "kind": ".def"
			, "name": "maxTrace"
			, "declaredIn": "raise(level: int32, message: string, inspect: variant, maxTrace: int32)"
			, "type": "int32"
			, "cast": ".i32"
			, "size": 4
			, "offs": 4
			, "const": false
			, "static": false
		}]
		, "size": 56
		, "offs": 261632
		, "const": false
		, "static": true
		, "time": 101
		, "total": 101
		, "hits": 66
		, "fails": 0
	}, {
		"proto": "format(output: char[], pos: int32, format: FormatFlags, value: uint32)"
		, "kind": ".ref"
		, "name": "format"
		, "type": "int32"
		, "file": "stdlib.cvx"
		, "line": 1480
		, "args": [{
			"proto": "format.output"
			, "kind": ".ref"
			, "name": "output"
			, "declaredIn": "format(output: char[], pos: int32, format: FormatFlags, value: uint32)"
			, "type": "char[]"
			, "file": "stdlib.cvx"
			, "line": 1480
			, "cast": ".arr"
			, "size": 8
			, "offs": 24
			, "const": false
			, "static": false
		}, {
			"proto": "format.pos"
			, "kind": ".ref"
			, "name": "pos"
			, "declaredIn": "format(output: char[], pos: int32, format: FormatFlags, value: uint32)"
			, "type": "int32"
			, "file": "stdlib.cvx"
			, "line": 1480
			, "cast": ".i32"
			, "size": 4
			, "offs": 16
			, "const": false
			, "static": false
		}, {
			"proto": "format.format"
			, "kind": ".ref"
			, "name": "format"
			, "declaredIn": "format(output: char[], pos: int32, format: FormatFlags, value: uint32)"
			, "type": "FormatFlags"
			, "file": "stdlib.cvx"
			, "line": 1480
			, "cast": ".ref"
			, "size": 4
			, "offs": 12
			, "const": false
			, "static": false
		}, {
			"proto": "format.value"
			, "kind": ".ref"
			, "name": "value"
			, "declaredIn": "format(output: char[], pos: int32, format: FormatFlags, value: uint32)"
			, "type": "uint32"
			, "file": "stdlib.cvx"
			, "line": 1480
			, "cast": ".u32"
			, "size": 4
			, "offs": 8
			, "const": false
			, "static": false
		}]
		, "cast": ".i32"
		, "size": 720
		, "offs": 285892
		, "const": false
		, "static": true
		, "time": 190
		, "total": 291
		, "hits": 4
		, "fails": 0
		, "file": "stdlib.cvx"
		, "line": 1480
	}, {
		"proto": "format(output: char[], format: string, value: int32)"
		, "kind": ".ref"
		, "name": "format"
		, "type": "int32"
		, "file": "stdlib.cvx"
		, "line": 1553
		, "args": [{
			"proto": "format.output"
			, "kind": ".ref"
			, "name": "output"
			, "declaredIn": "format(output: char[], format: string, value: int32)"
			, "type": "char[]"
			, "file": "stdlib.cvx"
			, "line": 1553
			, "cast": ".arr"
			, "size": 8
			, "offs": 20
			, "const": false
			, "static": false
		}, {
			"proto": "format.format"
			, "kind": ".ref"
			, "name": "format"
			, "declaredIn": "format(output: char[], format: string, value: int32)"
			, "type": "string"
			, "file": "stdlib.cvx"
			, "line": 1553
			, "cast": ".ref"
			, "size": 4
			, "offs": 12
			, "const": false
			, "static": false
		}, {
			"proto": "format.value"
			, "kind": ".ref"
			, "name": "value"
			, "declaredIn": "format(output: char[], format: string, value: int32)"
			, "type": "int32"
			, "file": "stdlib.cvx"
			, "line": 1553
			, "cast": ".i32"
			, "size": 4
			, "offs": 8
			, "const": false
			, "static": false
		}]
		, "cast": ".i32"
		, "size": 661
		, "offs": 286612
		, "const": false
		, "static": true
		, "time": 39
		, "total": 330
		, "hits": 1
		, "fails": 0
		, "file": "stdlib.cvx"
		, "line": 1553
	}, {
		"proto": ".main"
		, "kind": ".ref"
		, "name": ".main"
		, "type": "void"
		, "file": "main"
		, "line": 1
		, "cast": ".rec"
		, "size": 425
		, "offs": 290256
		, "const": true
		, "static": true
		, "time": 15
		, "total": 346
		, "hits": 1
		, "fails": 0
		, "file": "main"
		, "line": 1
	}]
	, "statements": [{
	}]
	, "ticksPerSec": 1000000
	, "functionCount": 102
	, "statementCount": 701
}
}
